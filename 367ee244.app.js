! function(e, t) {
    "object" == typeof exports && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define(t) : (e = "undefined" != typeof globalThis ? globalThis : e || self).Reveal = t()
}(this, function() {
    "use strict";

    function e(e) {
        try {
            return !!e()
        } catch (e) {
            return !0
        }
    }
    var t = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {},
        n = function(e) {
            return e && e.Math == Math && e
        },
        a = n("object" == typeof globalThis && globalThis) || n("object" == typeof window && window) || n("object" == typeof self && self) || n("object" == typeof t && t) || function() {
            return this
        }() || Function("return this")(),
        o = {},
        i = !e(function() {
            return 7 != Object.defineProperty({}, 1, {
                get: function() {
                    return 7
                }
            })[1]
        }),
        r = {},
        s = {}.propertyIsEnumerable,
        l = Object.getOwnPropertyDescriptor,
        c = l && !s.call({
            1: 2
        }, 1);
    r.f = c ? function(e) {
        e = l(this, e);
        return !!e && e.enumerable
    } : s;

    function d(e) {
        return y.call(e).slice(8, -1)
    }

    function u(e) {
        if (null == e) throw TypeError("Can't call method on " + e);
        return e
    }

    function p(e) {
        return k(S(e))
    }

    function m(e) {
        return "object" == typeof e ? null !== e : "function" == typeof e
    }

    function g(e, t) {
        if (!T(e)) return e;
        var n, a;
        if (t && "function" == typeof(n = e.toString) && !T(a = n.call(e))) return a;
        if ("function" == typeof(n = e.valueOf) && !T(a = n.call(e))) return a;
        if (!t && "function" == typeof(n = e.toString) && !T(a = n.call(e))) return a;
        throw TypeError("Can't convert object to primitive value")
    }

    function h(e) {
        return Object(A(e))
    }

    function f(e, t) {
        return E.call(x(e), t)
    }
    var v = function(e, t) {
            return {
                enumerable: !(1 & e),
                configurable: !(2 & e),
                writable: !(4 & e),
                value: t
            }
        },
        y = {}.toString,
        b = d,
        C = "".split,
        w = e(function() {
            return !Object("z").propertyIsEnumerable(0)
        }) ? function(e) {
            return "String" == b(e) ? C.call(e, "") : Object(e)
        } : Object,
        k = w,
        S = u,
        T = m,
        A = u,
        x = h,
        E = {}.hasOwnProperty,
        q = m,
        I = a.document,
        R = q(I) && q(I.createElement),
        P = function(e) {
            return R ? I.createElement(e) : {}
        },
        O = P,
        $ = !i && !e(function() {
            return 7 != Object.defineProperty(O("div"), "a", {
                get: function() {
                    return 7
                }
            }).a
        }),
        N = r,
        j = v,
        D = p,
        U = g,
        L = f,
        M = $,
        _ = Object.getOwnPropertyDescriptor;
    o.f = i ? _ : function(e, t) {
        if (e = D(e), t = U(t, !0), M) try {
            return _(e, t)
        } catch (e) {}
        if (L(e, t)) return j(!N.f.call(e, t), e[t])
    };

    function B(e) {
        if (!V(e)) throw TypeError(String(e) + " is not an object");
        return e
    }
    var F = {},
        V = m,
        H = $,
        z = B,
        G = g,
        Y = Object.defineProperty;
    F.f = i ? Y : function(e, t, n) {
        if (z(e), t = G(t, !0), z(n), H) try {
            return Y(e, t, n)
        } catch (e) {}
        if ("get" in n || "set" in n) throw TypeError("Accessors not supported");
        return "value" in n && (e[t] = n.value), e
    };
    var J = F,
        K = v,
        W = i ? function(e, t, n) {
            return J.f(e, t, K(1, n))
        } : function(e, t, n) {
            return e[t] = n, e
        },
        Q = {
            exports: {}
        },
        X = a,
        Z = W,
        ee = function(t, n) {
            try {
                Z(X, t, n)
            } catch (e) {
                X[t] = n
            }
            return n
        },
        te = "__core-js_shared__",
        ne = a[te] || ee(te, {}),
        ae = ne,
        oe = Function.toString;
    "function" != typeof ae.inspectSource && (ae.inspectSource = function(e) {
        return oe.call(e)
    });
    var ie = ae.inspectSource,
        re = a.WeakMap,
        se = "function" == typeof re && /native code/.test(ie(re)),
        le = {
            exports: {}
        },
        ce = ne;
    (le.exports = function(e, t) {
        return ce[e] || (ce[e] = void 0 !== t ? t : {})
    })("versions", []).push({
        version: "3.12.1",
        mode: "global",
        copyright: "Â© 2021 Denis Pushkarev (zloirock.ru)"
    });

    function de(e) {
        return "Symbol(" + String(void 0 === e ? "" : e) + ")_" + (++be + Ce).toString(36)
    }
    var ue, pe, me, ge, he, fe, ve, ye, be = 0,
        Ce = Math.random(),
        we = le.exports,
        ke = de,
        Se = we("keys"),
        Te = function(e) {
            return Se[e] || (Se[e] = ke(e))
        },
        Ae = {},
        xe = m,
        Ee = W,
        qe = f,
        Ie = Te,
        Re = Ae,
        Pe = "Object already initialized",
        Oe = a.WeakMap;
    ve = se || ne.state ? (ue = ne.state || (ne.state = new Oe), pe = ue.get, me = ue.has, ge = ue.set, he = function(e, t) {
        if (me.call(ue, e)) throw new TypeError(Pe);
        return t.facade = e, ge.call(ue, e, t), t
    }, fe = function(e) {
        return pe.call(ue, e) || {}
    }, function(e) {
        return me.call(ue, e)
    }) : (Re[ye = Ie("state")] = !0, he = function(e, t) {
        if (qe(e, ye)) throw new TypeError(Pe);
        return t.facade = e, Ee(e, ye, t), t
    }, fe = function(e) {
        return qe(e, ye) ? e[ye] : {}
    }, function(e) {
        return qe(e, ye)
    });
    var $e = {
            set: he,
            get: fe,
            has: ve,
            enforce: function(e) {
                return ve(e) ? fe(e) : he(e, {})
            },
            getterFor: function(n) {
                return function(e) {
                    var t;
                    if (!xe(e) || (t = fe(e)).type !== n) throw TypeError("Incompatible receiver, " + n + " required");
                    return t
                }
            }
        },
        Ne = a,
        je = W,
        De = f,
        Ue = ee,
        Le = ie,
        Me = $e.get,
        _e = $e.enforce,
        Be = String(String).split("String");
    (Q.exports = function(e, t, n, a) {
        var o = !!a && !!a.unsafe,
            i = !!a && !!a.enumerable,
            r = !!a && !!a.noTargetGet;
        "function" == typeof n && ("string" != typeof t || De(n, "name") || je(n, "name", t), (a = _e(n)).source || (a.source = Be.join("string" == typeof t ? t : ""))), e !== Ne ? (o ? !r && e[t] && (i = !0) : delete e[t], i ? e[t] = n : je(e, t, n)) : i ? e[t] = n : Ue(t, n)
    })(Function.prototype, "toString", function() {
        return "function" == typeof this && Me(this).source || Le(this)
    });

    function Fe(e) {
        return "function" == typeof e ? e : void 0
    }

    function Ve(e) {
        return isNaN(e = +e) ? 0 : (0 < e ? Xe : Qe)(e)
    }

    function He(e) {
        return 0 < e ? et(Ze(e), 9007199254740991) : 0
    }

    function ze(e, t) {
        return (e = tt(e)) < 0 ? nt(e + t, 0) : at(e, t)
    }
    var Ge = a,
        Ye = Ge,
        Je = a,
        Ke = function(e, t) {
            return arguments.length < 2 ? Fe(Ye[e]) || Fe(Je[e]) : Ye[e] && Ye[e][t] || Je[e] && Je[e][t]
        },
        We = {},
        Qe = Math.ceil,
        Xe = Math.floor,
        Ze = Ve,
        et = Math.min,
        tt = Ve,
        nt = Math.max,
        at = Math.min,
        ot = p,
        it = He,
        rt = ze,
        st = function(s) {
            return function(e, t, n) {
                var a, o = ot(e),
                    i = it(o.length),
                    r = rt(n, i);
                if (s && t != t) {
                    for (; r < i;)
                        if ((a = o[r++]) != a) return !0
                } else
                    for (; r < i; r++)
                        if ((s || r in o) && o[r] === t) return s || r || 0;
                return !s && -1
            }
        },
        lt = {
            includes: st(!0),
            indexOf: st(!1)
        },
        ct = f,
        dt = p,
        ut = lt.indexOf,
        pt = Ae,
        mt = function(e, t) {
            var n, a = dt(e),
                o = 0,
                i = [];
            for (n in a) !ct(pt, n) && ct(a, n) && i.push(n);
            for (; t.length > o;) ct(a, n = t[o++]) && (~ut(i, n) || i.push(n));
            return i
        },
        gt = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"],
        ht = mt,
        ft = gt.concat("length", "prototype");
    We.f = Object.getOwnPropertyNames || function(e) {
        return ht(e, ft)
    };
    var vt = {};
    vt.f = Object.getOwnPropertySymbols;

    function yt(e, t) {
        var n, a, o, i, r = e.target,
            s = e.global,
            l = e.stat;
        if (n = s ? Dt : l ? Dt[r] || _t(r, {}) : (Dt[r] || {}).prototype)
            for (a in t) {
                if (o = t[a], i = e.noTargetGet ? (i = Ut(n, a)) && i.value : n[a], !Ft(s ? a : r + (l ? "." : "#") + a, e.forced) && void 0 !== i) {
                    if (typeof o == typeof i) continue;
                    Bt(o, i)
                }(e.sham || i && i.sham) && Lt(o, "sham", !0), Mt(n, a, o, e)
            }
    }
    var bt = We,
        Ct = vt,
        wt = B,
        kt = Ke("Reflect", "ownKeys") || function(e) {
            var t = bt.f(wt(e)),
                n = Ct.f;
            return n ? t.concat(n(e)) : t
        },
        St = f,
        Tt = kt,
        At = o,
        xt = F,
        Et = function(e, t) {
            for (var n = Tt(t), a = xt.f, o = At.f, i = 0; i < n.length; i++) {
                var r = n[i];
                St(e, r) || a(e, r, o(t, r))
            }
        },
        qt = e,
        It = /#|\.prototype\./,
        Rt = function(e, t) {
            e = Ot[Pt(e)];
            return e == Nt || e != $t && ("function" == typeof t ? qt(t) : !!t)
        },
        Pt = Rt.normalize = function(e) {
            return String(e).replace(It, ".").toLowerCase()
        },
        Ot = Rt.data = {},
        $t = Rt.NATIVE = "N",
        Nt = Rt.POLYFILL = "P",
        jt = Rt,
        Dt = a,
        Ut = o.f,
        Lt = W,
        Mt = Q.exports,
        _t = ee,
        Bt = Et,
        Ft = jt,
        Vt = mt,
        Ht = gt,
        zt = Object.keys || function(e) {
            return Vt(e, Ht)
        },
        Gt = i,
        Yt = zt,
        Jt = vt,
        Kt = r,
        Wt = h,
        Qt = w,
        Xt = Object.assign,
        Zt = Object.defineProperty,
        en = !Xt || e(function() {
            if (Gt && 1 !== Xt({
                    b: 1
                }, Xt(Zt({}, "a", {
                    enumerable: !0,
                    get: function() {
                        Zt(this, "b", {
                            value: 3,
                            enumerable: !1
                        })
                    }
                }), {
                    b: 2
                })).b) return !0;
            var e = {},
                t = {},
                n = Symbol(),
                a = "abcdefghijklmnopqrst";
            return e[n] = 7, a.split("").forEach(function(e) {
                t[e] = e
            }), 7 != Xt({}, e)[n] || Yt(Xt({}, t)).join("") != a
        }) ? function(e, t) {
            for (var n = Wt(e), a = arguments.length, o = 1, i = Jt.f, r = Kt.f; o < a;)
                for (var s, l = Qt(arguments[o++]), c = i ? Yt(l).concat(i(l)) : Yt(l), d = c.length, u = 0; u < d;) s = c[u++], Gt && !r.call(l, s) || (n[s] = l[s]);
            return n
        } : Xt;
    yt({
        target: "Object",
        stat: !0,
        forced: Object.assign !== en
    }, {
        assign: en
    });

    function tn(e) {
        if ("function" != typeof e) throw TypeError(String(e) + " is not a function");
        return e
    }
    var nn = tn,
        an = function(a, o, e) {
            if (nn(a), void 0 === o) return a;
            switch (e) {
                case 0:
                    return function() {
                        return a.call(o)
                    };
                case 1:
                    return function(e) {
                        return a.call(o, e)
                    };
                case 2:
                    return function(e, t) {
                        return a.call(o, e, t)
                    };
                case 3:
                    return function(e, t, n) {
                        return a.call(o, e, t, n)
                    }
            }
            return function() {
                return a.apply(o, arguments)
            }
        },
        on = d,
        rn = Array.isArray || function(e) {
            return "Array" == on(e)
        },
        sn = Ke("navigator", "userAgent") || "",
        ln = sn,
        cn = a.process,
        dn = cn && cn.versions,
        un = dn && dn.v8;
    un ? sa = (aa = un.split("."))[0] < 4 ? 1 : aa[0] + aa[1] : ln && (!(aa = ln.match(/Edge\/(\d+)/)) || 74 <= aa[1]) && (aa = ln.match(/Chrome\/(\d+)/)) && (sa = aa[1]);
    var n = sa && +sa,
        pn = n,
        c = !!Object.getOwnPropertySymbols && !e(function() {
            return !String(Symbol()) || !Symbol.sham && pn && pn < 41
        }),
        s = c && !Symbol.sham && "symbol" == typeof Symbol.iterator,
        q = a,
        $ = le.exports,
        mn = f,
        te = de,
        gn = c,
        ae = s,
        hn = $("wks"),
        fn = q.Symbol,
        vn = ae ? fn : fn && fn.withoutSetter || te,
        re = function(e) {
            return mn(hn, e) && (gn || "string" == typeof hn[e]) || (gn && mn(fn, e) ? hn[e] = fn[e] : hn[e] = vn("Symbol." + e)), hn[e]
        },
        yn = m,
        bn = rn,
        Cn = re("species"),
        we = function(e, t) {
            var n;
            return bn(e) && ("function" == typeof(n = e.constructor) && (n === Array || bn(n.prototype)) || yn(n) && null === (n = n[Cn])) && (n = void 0), new(void 0 === n ? Array : n)(0 === t ? 0 : t)
        },
        wn = an,
        kn = w,
        Sn = h,
        Tn = He,
        An = we,
        xn = [].push,
        se = function(p) {
            var m = 1 == p,
                g = 2 == p,
                h = 3 == p,
                f = 4 == p,
                v = 6 == p,
                y = 7 == p,
                b = 5 == p || v;
            return function(e, t, n, a) {
                for (var o, i, r = Sn(e), s = kn(r), l = wn(t, n, 3), c = Tn(s.length), d = 0, a = a || An, u = m ? a(e, c) : g || y ? a(e, 0) : void 0; d < c; d++)
                    if ((b || d in s) && (i = l(o = s[d], d, r), p))
                        if (m) u[d] = i;
                        else if (i) switch (p) {
                    case 3:
                        return !0;
                    case 5:
                        return o;
                    case 6:
                        return d;
                    case 2:
                        xn.call(u, o)
                } else switch (p) {
                    case 4:
                        return !1;
                    case 7:
                        xn.call(u, o)
                }
                return v ? -1 : h || f ? f : u
            }
        },
        ne = {
            forEach: se(0),
            map: se(1),
            filter: se(2),
            some: se(3),
            every: se(4),
            find: se(5),
            findIndex: se(6),
            filterOut: se(7)
        },
        En = e,
        qn = n,
        In = re("species"),
        Oe = function(t) {
            return 51 <= qn || !En(function() {
                var e = [];
                return (e.constructor = {})[In] = function() {
                    return {
                        foo: 1
                    }
                }, 1 !== e[t](Boolean).foo
            })
        },
        Rn = ne.map;
    yt({
        target: "Array",
        proto: !0,
        forced: !Oe("map")
    }, {
        map: function(e) {
            return Rn(this, e, 1 < arguments.length ? arguments[1] : void 0)
        }
    });
    var Pn = g,
        On = F,
        $n = v,
        Re = function(e, t, n) {
            t = Pn(t);
            t in e ? On.f(e, t, $n(0, n)) : e[t] = n
        },
        Ie = yt,
        st = e,
        Nn = rn,
        jn = m,
        Dn = h,
        Un = He,
        Ln = Re,
        Mn = we,
        lt = Oe,
        kt = n,
        _n = re("isConcatSpreadable"),
        Bn = 9007199254740991,
        Fn = "Maximum allowed index exceeded",
        Rt = 51 <= kt || !st(function() {
            var e = [];
            return e[_n] = !1, e.concat()[0] !== e
        }),
        ee = lt("concat");

    function Vn(t, e) {
        var n, a = Object.keys(t);
        return Object.getOwnPropertySymbols && (n = Object.getOwnPropertySymbols(t), e && (n = n.filter(function(e) {
            return Object.getOwnPropertyDescriptor(t, e).enumerable
        })), a.push.apply(a, n)), a
    }

    function Hn(a) {
        for (var e = 1; e < arguments.length; e++) {
            var o = null != arguments[e] ? arguments[e] : {};
            e % 2 ? Vn(Object(o), !0).forEach(function(e) {
                var t, n;
                t = a, e = o[n = e], n in t ? Object.defineProperty(t, n, {
                    value: e,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : t[n] = e
            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(a, Object.getOwnPropertyDescriptors(o)) : Vn(Object(o)).forEach(function(e) {
                Object.defineProperty(a, e, Object.getOwnPropertyDescriptor(o, e))
            })
        }
        return a
    }

    function zn(e) {
        return (zn = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
            return typeof e
        } : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
        })(e)
    }

    function Gn(e, t, n, a, o, i, r) {
        try {
            var s = e[i](r),
                l = s.value
        } catch (e) {
            return n(e), 0
        }
        s.done ? t(l) : Promise.resolve(l).then(a, o)
    }

    function Yn(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
    }

    function Jn(e, t) {
        for (var n = 0; n < t.length; n++) {
            var a = t[n];
            a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a)
        }
    }

    function Kn(e, t, n) {
        return t && Jn(e.prototype, t), n && Jn(e, n), e
    }

    function Wn(e) {
        return function(e) {
            if (Array.isArray(e)) return Qn(e)
        }(e) || function() {
            if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e)
        }() || function(e) {
            if (e) {
                if ("string" == typeof e) return Qn(e, void 0);
                var t = Object.prototype.toString.call(e).slice(8, -1);
                return "Object" === t && e.constructor && (t = e.constructor.name), "Map" === t || "Set" === t ? Array.from(e) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? Qn(e, void 0) : void 0
            }
        }(e) || function() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }()
    }

    function Qn(e, t) {
        (null == t || t > e.length) && (t = e.length);
        for (var n = 0, a = new Array(t); n < t; n++) a[n] = e[n];
        return a
    }
    Ie({
        target: "Array",
        proto: !0,
        forced: !Rt || !ee
    }, {
        concat: function(e) {
            for (var t, n, a, o = Dn(this), i = Mn(o, 0), r = 0, s = -1, l = arguments.length; s < l; s++)
                if (function(e) {
                        if (!jn(e)) return !1;
                        var t = e[_n];
                        return void 0 !== t ? !!t : Nn(e)
                    }(a = -1 === s ? o : arguments[s])) {
                    if (r + (n = Un(a.length)) > Bn) throw TypeError(Fn);
                    for (t = 0; t < n; t++, r++) t in a && Ln(i, r, a[t])
                } else {
                    if (Bn <= r) throw TypeError(Fn);
                    Ln(i, r++, a)
                }
            return i.length = r, i
        }
    });
    mt = {};
    mt[re("toStringTag")] = "z";
    var en = "[object z]" === String(mt),
        cn = en,
        Xn = d,
        Zn = re("toStringTag"),
        ea = "Arguments" == Xn(function() {
            return arguments
        }()),
        dn = cn ? Xn : function(e) {
            var t;
            return void 0 === e ? "Undefined" : null === e ? "Null" : "string" == typeof(e = function(e, t) {
                try {
                    return e[t]
                } catch (e) {}
            }(t = Object(e), Zn)) ? e : ea ? Xn(t) : "Object" == (e = Xn(t)) && "function" == typeof t.callee ? "Arguments" : e
        },
        ta = dn,
        un = en ? {}.toString : function() {
            return "[object " + ta(this) + "]"
        },
        ln = Q.exports;
    en || ln(Object.prototype, "toString", un, {
        unsafe: !0
    });

    function na(e, t) {
        this.stopped = e, this.result = t
    }
    var aa = a.Promise,
        oa = Q.exports,
        ia = m,
        ra = B,
        sa = Object.setPrototypeOf || ("__proto__" in {} ? function() {
            var n, a = !1,
                e = {};
            try {
                (n = Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set).call(e, []), a = e instanceof Array
            } catch (n) {}
            return function(e, t) {
                return ra(e),
                    function(e) {
                        if (!ia(e) && null !== e) throw TypeError("Can't set " + String(e) + " as a prototype")
                    }(t), a ? n.call(e, t) : e.__proto__ = t, e
            }
        }() : void 0),
        la = F.f,
        ca = f,
        da = re("toStringTag"),
        $ = function(e, t, n) {
            e && !ca(e = n ? e : e.prototype, da) && la(e, da, {
                configurable: !0,
                value: t
            })
        },
        ua = Ke,
        pa = F,
        ma = i,
        ga = re("species"),
        q = {},
        ha = q,
        fa = re("iterator"),
        va = Array.prototype,
        ae = function(e) {
            return void 0 !== e && (ha.Array === e || va[fa] === e)
        },
        ya = dn,
        ba = q,
        Ca = re("iterator"),
        te = function(e) {
            if (null != e) return e[Ca] || e["@@iterator"] || ba[ya(e)]
        },
        wa = B,
        se = function(e) {
            var t = e.return;
            if (void 0 !== t) return wa(t.call(e)).value
        },
        ka = B,
        Sa = ae,
        Ta = He,
        Aa = an,
        xa = te,
        Ea = se,
        qa = re("iterator"),
        Ia = !1;
    try {
        var Ra = 0,
            Pa = {
                next: function() {
                    return {
                        done: !!Ra++
                    }
                },
                return: function() {
                    Ia = !0
                }
            };
        Pa[qa] = function() {
            return this
        }, Array.from(Pa, function() {
            throw 2
        })
    } catch (t) {}

    function Oa(e) {
        var t;
        za.hasOwnProperty(e) && (t = za[e], delete za[e], t())
    }

    function $a(e) {
        return function() {
            Oa(e)
        }
    }
    var Na, kt = function(e, t) {
            if (!t && !Ia) return !1;
            var n = !1;
            try {
                var a = {};
                a[qa] = function() {
                    return {
                        next: function() {
                            return {
                                done: n = !0
                            }
                        }
                    }
                }, e(a)
            } catch (e) {}
            return n
        },
        ja = B,
        Da = tn,
        Ua = re("species"),
        st = function(e, t) {
            var n, e = ja(e).constructor;
            return void 0 === e || null == (n = ja(e)[Ua]) ? t : Da(n)
        },
        lt = Ke("document", "documentElement"),
        Ie = /(?:iphone|ipod|ipad).*applewebkit/i.test(sn),
        Rt = "process" == d(a.process),
        La = a,
        ee = e,
        mt = an,
        Ma = lt,
        _a = P,
        Ba = La.location,
        cn = La.setImmediate,
        en = La.clearImmediate,
        Fa = La.process,
        ln = La.MessageChannel,
        Va = La.Dispatch,
        Ha = 0,
        za = {},
        un = function(e) {
            Oa(e.data)
        },
        dn = function(e) {
            La.postMessage(e + "", Ba.protocol + "//" + Ba.host)
        };
    cn && en || (cn = function(e) {
        for (var t = [], n = 1; n < arguments.length;) t.push(arguments[n++]);
        return za[++Ha] = function() {
            ("function" == typeof e ? e : Function(e)).apply(void 0, t)
        }, Na(Ha), Ha
    }, en = function(e) {
        delete za[e]
    }, Rt ? Na = function(e) {
        Fa.nextTick($a(e))
    } : Va && Va.now ? Na = function(e) {
        Va.now($a(e))
    } : ln && !Ie ? (eo = (ln = new ln).port2, ln.port1.onmessage = un, Na = mt(eo.postMessage, eo, 1)) : La.addEventListener && "function" == typeof postMessage && !La.importScripts && Ba && "file:" !== Ba.protocol && !ee(dn) ? (Na = dn, La.addEventListener("message", un, !1)) : Na = "onreadystatechange" in _a("script") ? function(e) {
        Ma.appendChild(_a("script")).onreadystatechange = function() {
            Ma.removeChild(this), Oa(e)
        }
    } : function(e) {
        setTimeout($a(e), 0)
    });
    var Ga, Ya, Ja, Ka, Wa, Qa, Xa, Za, mt = {
            set: cn,
            clear: en
        },
        eo = /web0s(?!.*chrome)/i.test(sn),
        to = a,
        ee = o.f,
        no = mt.set,
        dn = Ie,
        un = eo,
        ao = Rt,
        cn = to.MutationObserver || to.WebKitMutationObserver,
        en = to.document,
        oo = to.process,
        sn = to.Promise,
        Ie = ee(to, "queueMicrotask"),
        eo = Ie && Ie.value;
    eo || (Ga = function() {
        var e, t;
        for (ao && (e = oo.domain) && e.exit(); Ya;) {
            t = Ya.fn, Ya = Ya.next;
            try {
                t()
            } catch (e) {
                throw Ya ? Ka() : Ja = void 0, e
            }
        }
        Ja = void 0, e && e.enter()
    }, Ka = dn || ao || un || !cn || !en ? sn && sn.resolve ? ((Xa = sn.resolve(void 0)).constructor = sn, Za = Xa.then, function() {
        Za.call(Xa, Ga)
    }) : ao ? function() {
        oo.nextTick(Ga)
    } : function() {
        no.call(to, Ga)
    } : (Wa = !0, Qa = en.createTextNode(""), new cn(Ga).observe(Qa, {
        characterData: !0
    }), function() {
        Qa.data = Wa = !Wa
    }));

    function io(e) {
        var n, a;
        this.promise = new e(function(e, t) {
            if (void 0 !== n || void 0 !== a) throw TypeError("Bad Promise constructor");
            n = e, a = t
        }), this.resolve = ro(n), this.reject = ro(a)
    }
    var ee = eo || function(e) {
            e = {
                fn: e,
                next: void 0
            };
            Ja && (Ja.next = e), Ya || (Ya = e, Ka()), Ja = e
        },
        Ie = {},
        ro = tn;
    Ie.f = function(e) {
        return new io(e)
    };

    function so(e, t, n) {
        function a(e) {
            return i && Ea(i), new na(!0, e)
        }

        function o(e) {
            return p ? (ka(e), g ? h(e[0], e[1], a) : h(e[0], e[1])) : g ? h(e, a) : h(e)
        }
        var i, r, s, l, c, d, u = n && n.that,
            p = !(!n || !n.AS_ENTRIES),
            m = !(!n || !n.IS_ITERATOR),
            g = !(!n || !n.INTERRUPTED),
            h = Aa(t, u, 1 + p + g);
        if (m) i = e;
        else {
            if ("function" != typeof(m = xa(e))) throw TypeError("Target is not iterable");
            if (Sa(m)) {
                for (r = 0, s = Ta(e.length); r < s; r++)
                    if ((l = o(e[r])) && l instanceof na) return l;
                return new na(!1)
            }
            i = m.call(e)
        }
        for (c = i.next; !(d = c.call(i)).done;) {
            try {
                l = o(d.value)
            } catch (e) {
                throw Ea(i), e
            }
            if ("object" == typeof l && l && l instanceof na) return l
        }
        return new na(!1)
    }

    function lo(e) {
        try {
            return {
                error: !1,
                value: e()
            }
        } catch (e) {
            return {
                error: !0,
                value: e
            }
        }
    }

    function co(e) {
        var t;
        return !(!xo(e) || "function" != typeof(t = e.then)) && t
    }

    function uo(u, p) {
        var m;
        u.notified || (u.notified = !0, m = u.reactions, Po(function() {
            for (var e = u.value, t = 1 == u.state, n = 0; m.length > n;) {
                var a, o, i, r = m[n++],
                    s = t ? r.ok : r.fail,
                    l = r.resolve,
                    c = r.reject,
                    d = r.domain;
                try {
                    s ? (t || (2 === u.rejection && Zo(u), u.rejection = 1), !0 === s ? a = e : (d && d.enter(), a = s(e), d && (d.exit(), i = !0)), a === r.promise ? c(Fo("Promise-chain cycle")) : (o = co(a)) ? o.call(a, l, c) : l(a)) : c(e)
                } catch (e) {
                    d && !i && d.exit(), c(e)
                }
            }
            u.reactions = [], u.notified = !1, p && !u.rejection && Qo(u)
        }))
    }

    function po(e, t, n) {
        var a, o;
        Yo ? ((a = Vo.createEvent("Event")).promise = t, a.reason = n, a.initEvent(e, !1, !0), Ao.dispatchEvent(a)) : a = {
            promise: t,
            reason: n
        }, !Jo && (o = Ao["on" + e]) ? o(a) : e === Ko && function(e, t) {
            var n = To.console;
            n && n.error && (1 === arguments.length ? n.error(e) : n.error(e, t))
        }("Unhandled promise rejection", n)
    }

    function mo(t, n, a) {
        return function(e) {
            t(n, e, a)
        }
    }

    function go(e, t, n) {
        e.done || (e.done = !0, n && (e = n), e.value = t, e.state = 2, uo(e, !0))
    }
    var ho, fo, vo, yo, bo, Co, wo = B,
        ko = m,
        So = Ie,
        To = a,
        dn = "object" == typeof window,
        un = yt,
        Ao = a,
        sn = Ke,
        en = aa,
        cn = Q.exports,
        eo = sa,
        aa = $,
        xo = m,
        Eo = tn,
        qo = ie,
        ie = kt,
        Io = st,
        Ro = mt.set,
        Po = ee,
        mt = Ie,
        ee = $e,
        Ie = jt,
        Oo = dn,
        $o = Rt,
        No = n,
        jo = re("species"),
        Do = "Promise",
        Uo = ee.get,
        Lo = ee.set,
        Mo = ee.getterFor(Do),
        _o = en && en.prototype,
        Bo = en,
        ee = _o,
        Fo = Ao.TypeError,
        Vo = Ao.document,
        Ho = Ao.process,
        zo = mt.f,
        Go = zo,
        Yo = !!(Vo && Vo.createEvent && Ao.dispatchEvent),
        Jo = "function" == typeof PromiseRejectionEvent,
        Ko = "unhandledrejection",
        Wo = !1,
        Ie = Ie(Do, function() {
            var e = qo(Bo) !== String(Bo);
            if (!e && 66 === No) return !0;
            if (51 <= No && /native code/.test(Bo)) return !1;

            function t(e) {
                e(function() {}, function() {})
            }
            var n = new Bo(function(e) {
                e(1)
            });
            return (n.constructor = {})[jo] = t, !(Wo = n.then(function() {}) instanceof t) || !e && Oo && !Jo
        }),
        ie = Ie || !ie(function(e) {
            Bo.all(e).catch(function() {})
        }),
        Qo = function(a) {
            Ro.call(Ao, function() {
                var e, t = a.facade,
                    n = a.value;
                if (Xo(a) && (e = lo(function() {
                        $o ? Ho.emit("unhandledRejection", n, t) : po(Ko, t, n)
                    }), a.rejection = $o || Xo(a) ? 2 : 1, e.error)) throw e.value
            })
        },
        Xo = function(e) {
            return 1 !== e.rejection && !e.parent
        },
        Zo = function(t) {
            Ro.call(Ao, function() {
                var e = t.facade;
                $o ? Ho.emit("rejectionHandled", e) : po("rejectionhandled", e, t.value)
            })
        },
        ei = function(n, e, t) {
            if (!n.done) {
                n.done = !0, t && (n = t);
                try {
                    if (n.facade === e) throw Fo("Promise can't be resolved itself");
                    var a = co(e);
                    a ? Po(function() {
                        var t = {
                            done: !1
                        };
                        try {
                            a.call(e, mo(ei, t, n), mo(go, t, n))
                        } catch (e) {
                            go(t, e, n)
                        }
                    }) : (n.value = e, n.state = 1, uo(n, !1))
                } catch (e) {
                    go({
                        done: !1
                    }, e, n)
                }
            }
        };
    if (Ie && (ee = (Bo = function(e) {
            (function(e, t) {
                if (!(e instanceof Bo)) throw TypeError("Incorrect " + (t ? t + " " : "") + "invocation")
            })(this, Do), Eo(e), ho.call(this);
            var t = Uo(this);
            try {
                e(mo(ei, t), mo(go, t))
            } catch (e) {
                go(t, e)
            }
        }).prototype, (ho = function(e) {
            Lo(this, {
                type: Do,
                done: !1,
                notified: !1,
                parent: !1,
                reactions: [],
                rejection: !1,
                state: 0,
                value: void 0
            })
        }).prototype = function(e, t, n) {
            for (var a in t) oa(e, a, t[a], n);
            return e
        }(ee, {
            then: function(e, t) {
                var n = Mo(this),
                    a = zo(Io(this, Bo));
                return a.ok = "function" != typeof e || e, a.fail = "function" == typeof t && t, a.domain = $o ? Ho.domain : void 0, n.parent = !0, n.reactions.push(a), 0 != n.state && uo(n, !1), a.promise
            },
            catch: function(e) {
                return this.then(void 0, e)
            }
        }), fo = function() {
            var e = new ho,
                t = Uo(e);
            this.promise = e, this.resolve = mo(ei, t), this.reject = mo(go, t)
        }, mt.f = zo = function(e) {
            return e === Bo || e === vo ? new fo : Go(e)
        }, "function" == typeof en && _o !== Object.prototype)) {
        yo = _o.then, Wo || (cn(_o, "then", function(e, t) {
            var n = this;
            return new Bo(function(e, t) {
                yo.call(n, e, t)
            }).then(e, t)
        }, {
            unsafe: !0
        }), cn(_o, "catch", ee.catch, {
            unsafe: !0
        }));
        try {
            delete _o.constructor
        } catch (t) {}
        eo && eo(_o, ee)
    }
    un({
        global: !0,
        wrap: !0,
        forced: Ie
    }, {
        Promise: Bo
    }), aa(Bo, Do, !1), Co = ua(bo = Do), bo = pa.f, ma && Co && !Co[ga] && bo(Co, ga, {
        configurable: !0,
        get: function() {
            return this
        }
    }), vo = sn(Do), un({
        target: Do,
        stat: !0,
        forced: Ie
    }, {
        reject: function(e) {
            var t = zo(this);
            return t.reject.call(void 0, e), t.promise
        }
    }), un({
        target: Do,
        stat: !0,
        forced: Ie
    }, {
        resolve: function(e) {
            return function(e, t) {
                if (wo(e), ko(t) && t.constructor === e) return t;
                e = So.f(e);
                return (0, e.resolve)(t), e.promise
            }(this, e)
        }
    }), un({
        target: Do,
        stat: !0,
        forced: ie
    }, {
        all: function(e) {
            var s = this,
                t = zo(s),
                l = t.resolve,
                c = t.reject,
                n = lo(function() {
                    var a = Eo(s.resolve),
                        o = [],
                        i = 0,
                        r = 1;
                    so(e, function(e) {
                        var t = i++,
                            n = !1;
                        o.push(void 0), r++, a.call(s, e).then(function(e) {
                            n || (n = !0, o[t] = e, --r || l(o))
                        }, c)
                    }), --r || l(o)
                });
            return n.error && c(n.value), t.promise
        },
        race: function(e) {
            var n = this,
                a = zo(n),
                o = a.reject,
                t = lo(function() {
                    var t = Eo(n.resolve);
                    so(e, function(e) {
                        t.call(n, e).then(a.resolve, o)
                    })
                });
            return t.error && o(t.value), a.promise
        }
    });
    var ti, ni = e,
        Ie = function(e, t) {
            var n = [][e];
            return !!n && ni(function() {
                n.call(null, t || function() {
                    throw 1
                }, 1)
            })
        },
        ai = ne.forEach,
        oi = a,
        ii = Ie("forEach") ? [].forEach : function(e) {
            return ai(this, e, 1 < arguments.length ? arguments[1] : void 0)
        },
        ri = W;
    for (ti in {
            CSSRuleList: 0,
            CSSStyleDeclaration: 0,
            CSSValueList: 0,
            ClientRectList: 0,
            DOMRectList: 0,
            DOMStringList: 0,
            DOMTokenList: 1,
            DataTransferItemList: 0,
            FileList: 0,
            HTMLAllCollection: 0,
            HTMLCollection: 0,
            HTMLFormElement: 0,
            HTMLSelectElement: 0,
            MediaList: 0,
            MimeTypeArray: 0,
            NamedNodeMap: 0,
            NodeList: 1,
            PaintRequestList: 0,
            Plugin: 0,
            PluginArray: 0,
            SVGLengthList: 0,
            SVGNumberList: 0,
            SVGPathSegList: 0,
            SVGPointList: 0,
            SVGStringList: 0,
            SVGTransformList: 0,
            SourceBufferList: 0,
            StyleSheetList: 0,
            TextTrackCueList: 0,
            TextTrackList: 0,
            TouchList: 0
        }) {
        var si = oi[ti],
            li = si && si.prototype;
        if (li && li.forEach !== ii) try {
            ri(li, "forEach", ii)
        } catch (t) {
            li.forEach = ii
        }
    }
    var ci = B,
        di = se,
        ui = an,
        pi = h,
        mi = ae,
        gi = He,
        hi = Re,
        fi = te;
    yt({
        target: "Array",
        stat: !0,
        forced: !kt(function(e) {
            Array.from(e)
        })
    }, {
        from: function(e) {
            var t, n, a, o, i, r, s = pi(e),
                l = "function" == typeof this ? this : Array,
                c = arguments.length,
                d = 1 < c ? arguments[1] : void 0,
                u = void 0 !== d,
                e = fi(s),
                p = 0;
            if (u && (d = ui(d, 2 < c ? arguments[2] : void 0, 2)), null == e || l == Array && mi(e))
                for (n = new l(t = gi(s.length)); p < t; p++) r = u ? d(s[p], p) : s[p], hi(n, p, r);
            else
                for (i = (o = e.call(s)).next, n = new l; !(a = i.call(o)).done; p++) r = u ? function(e, t, n, a) {
                    try {
                        return a ? t(ci(n)[0], n[1]) : t(n)
                    } catch (t) {
                        throw di(e), t
                    }
                }(o, d, [a.value, p], !0) : a.value, hi(n, p, r);
            return n.length = p, n
        }
    });
    var vi, yi = Ve,
        bi = u,
        un = function(i) {
            return function(e, t) {
                var n, a = String(bi(e)),
                    o = yi(t),
                    e = a.length;
                return o < 0 || e <= o ? i ? "" : void 0 : (t = a.charCodeAt(o)) < 55296 || 56319 < t || o + 1 === e || (n = a.charCodeAt(o + 1)) < 56320 || 57343 < n ? i ? a.charAt(o) : t : i ? a.slice(o, o + 2) : n - 56320 + (t - 55296 << 10) + 65536
            }
        },
        ie = {
            codeAt: un(!1),
            charAt: un(!0)
        },
        se = !e(function() {
            function e() {}
            return e.prototype.constructor = null, Object.getPrototypeOf(new e) !== e.prototype
        }),
        Ci = f,
        wi = h,
        an = se,
        ki = Te("IE_PROTO"),
        Si = Object.prototype,
        ae = an ? Object.getPrototypeOf : function(e) {
            return e = wi(e), Ci(e, ki) ? e[ki] : "function" == typeof e.constructor && e instanceof e.constructor ? e.constructor.prototype : e instanceof Object ? Si : null
        },
        te = e,
        kt = ae,
        un = W,
        se = f,
        Ti = re("iterator"),
        an = !1;
    [].keys && ("next" in (qi = [].keys()) ? (Oi = kt(kt(qi))) !== Object.prototype && (vi = Oi) : an = !0), null != vi && !te(function() {
        var e = {};
        return vi[Ti].call(e) !== e
    }) || (vi = {}), se(vi, Ti) || un(vi, Ti, function() {
        return this
    });

    function Ai() {}

    function xi(e) {
        return "<script>" + e + "<\/script>"
    }
    var Ei, qi = {
            IteratorPrototype: vi,
            BUGGY_SAFARI_ITERATORS: an
        },
        Ii = F,
        Ri = B,
        Pi = zt,
        Oi = i ? Object.defineProperties : function(e, t) {
            Ri(e);
            for (var n, a = Pi(t), o = a.length, i = 0; i < o;) Ii.f(e, n = a[i++], t[n]);
            return e
        },
        $i = B,
        Ni = Oi,
        ji = gt,
        te = Ae,
        Di = lt,
        Ui = P,
        Li = Te("IE_PROTO"),
        Mi = function() {
            try {
                Ei = document.domain && new ActiveXObject("htmlfile")
            } catch (e) {}
            var e, t;
            Mi = Ei ? function(e) {
                e.write(xi("")), e.close();
                var t = e.parentWindow.Object;
                return e = null, t
            }(Ei) : ((t = Ui("iframe")).style.display = "none", Di.appendChild(t), t.src = String("javascript:"), (e = t.contentWindow.document).open(), e.write(xi("document.F=Object")), e.close(), e.F);
            for (var n = ji.length; n--;) delete Mi.prototype[ji[n]];
            return Mi()
        };
    te[Li] = !0;

    function _i() {
        return this
    }

    function Bi() {
        return this
    }
    var se = Object.create || function(e, t) {
            var n;
            return null !== e ? (Ai.prototype = $i(e), n = new Ai, Ai.prototype = null, n[Li] = e) : n = Mi(), void 0 === t ? n : Ni(n, t)
        },
        Fi = qi.IteratorPrototype,
        Vi = se,
        Hi = v,
        zi = $,
        Gi = q,
        Yi = yt,
        Ji = ae,
        Ki = sa,
        Wi = $,
        Qi = W,
        Xi = Q.exports,
        Zi = q,
        er = qi.IteratorPrototype,
        tr = qi.BUGGY_SAFARI_ITERATORS,
        nr = re("iterator"),
        ar = "values",
        or = "entries",
        ir = ie.charAt,
        rr = "String Iterator",
        sr = $e.set,
        lr = $e.getterFor(rr);
    ! function(e, t, n, a, o, i, r) {
        g = t, g += " Iterator", (c = n).prototype = Vi(Fi, {
            next: Hi(1, a)
        }), zi(c, g, !1), Gi[g] = _i;
        var s, l, a = function(e) {
                if (e === o && m) return m;
                if (!tr && e in u) return u[e];
                switch (e) {
                    case "keys":
                    case ar:
                    case or:
                        return function() {
                            return new n(this, e)
                        }
                }
                return function() {
                    return new n(this)
                }
            },
            c = t + " Iterator",
            d = !1,
            u = e.prototype,
            p = u[nr] || u["@@iterator"] || o && u[o],
            m = !tr && p || a(o),
            g = "Array" == t && u.entries || p;
        if (g && (e = Ji(g.call(new e)), er !== Object.prototype && e.next && (Ji(e) !== er && (Ki ? Ki(e, er) : "function" != typeof e[nr] && Qi(e, nr, Bi)), Wi(e, c, !0))), o == ar && p && p.name !== ar && (d = !0, m = function() {
                return p.call(this)
            }), u[nr] !== m && Qi(u, nr, m), Zi[t] = m, o)
            if (s = {
                    values: a(ar),
                    keys: i ? m : a("keys"),
                    entries: a(or)
                }, r)
                for (l in s) !tr && !d && l in u || Xi(u, l, s[l]);
            else Yi({
                target: t,
                proto: !0,
                forced: tr || d
            }, s)
    }(String, "String", function(e) {
        sr(this, {
            type: rr,
            string: String(e),
            index: 0
        })
    }, function() {
        var e = lr(this),
            t = e.string,
            n = e.index;
        return n >= t.length ? {
            value: void 0,
            done: !0
        } : (n = ir(t, n), e.index += n.length, {
            value: n,
            done: !1
        })
    });
    var cr, dr = u,
        un = "[\t\n\v\f\r Â áš€â€€â€â€‚â€ƒâ€„â€…â€†â€‡â€ˆâ€‰â€Šâ€¯âŸã€€\u2028\u2029\ufeff]",
        ur = RegExp("^" + un + un + "*"),
        pr = RegExp(un + un + "*$"),
        an = function(t) {
            return function(e) {
                e = String(dr(e));
                return 1 & t && (e = e.replace(ur, "")), 2 & t && (e = e.replace(pr, "")), e
            }
        },
        Oi = {
            start: an(1),
            end: an(2),
            trim: an(3)
        },
        mr = "\t\n\v\f\r Â áš€â€€â€â€‚â€ƒâ€„â€…â€†â€‡â€ˆâ€‰â€Šâ€¯âŸã€€\u2028\u2029\ufeff",
        gr = Oi.trim;
    yt({
        target: "String",
        proto: !0,
        forced: (cr = "trim", e(function() {
            return !!mr[cr]() || "â€‹Â…á Ž" != "â€‹Â…á Ž" [cr]() || mr[cr].name !== cr
        }))
    }, {
        trim: function() {
            return gr(this)
        }
    });
    var gt = {},
        hr = p,
        fr = We.f,
        vr = {}.toString,
        yr = "object" == typeof window && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
    gt.f = function(e) {
        return yr && "[object Window]" == vr.call(e) ? function(e) {
            try {
                return fr(e)
            } catch (e) {
                return yr.slice()
            }
        }(e) : fr(hr(e))
    };
    lt = {};
    lt.f = re;

    function br(e, t) {
        var n = Xr[e] = Nr(Gr.prototype);
        return Vr(n, {
            type: Fr,
            tag: e,
            description: t
        }), Ar || (n.description = t), n
    }

    function Cr(t, e) {
        Ir(t);
        var n = Pr(e),
            e = jr(n).concat(ss(n));
        return _r(e, function(e) {
            Ar && !rs.call(n, e) || is(t, e, n[e])
        }), t
    }
    var wr = Ge,
        kr = f,
        Sr = lt,
        Tr = F.f,
        P = yt,
        te = a,
        ae = Ke,
        Ar = i,
        q = c,
        qi = s,
        un = e,
        xr = f,
        Er = rn,
        qr = m,
        Ir = B,
        Rr = h,
        Pr = p,
        Or = g,
        $r = v,
        Nr = se,
        jr = zt,
        an = We,
        Ge = gt,
        Dr = vt,
        Ke = o,
        c = F,
        s = r,
        v = W,
        gt = Q.exports,
        vt = le.exports,
        Ur = Ae,
        Lr = de,
        Mr = re,
        lt = lt,
        $ = $,
        $e = $e,
        _r = ne.forEach,
        Br = Te("hidden"),
        Fr = "Symbol",
        Te = Mr("toPrimitive"),
        Vr = $e.set,
        Hr = $e.getterFor(Fr),
        zr = Object.prototype,
        Gr = te.Symbol,
        Yr = ae("JSON", "stringify"),
        Jr = Ke.f,
        Kr = c.f,
        Wr = Ge.f,
        Qr = s.f,
        Xr = vt("symbols"),
        Zr = vt("op-symbols"),
        es = vt("string-to-symbol-registry"),
        ts = vt("symbol-to-string-registry"),
        vt = vt("wks"),
        te = te.QObject,
        ns = !te || !te.prototype || !te.prototype.findChild,
        as = Ar && un(function() {
            return 7 != Nr(Kr({}, "a", {
                get: function() {
                    return Kr(this, "a", {
                        value: 7
                    }).a
                }
            })).a
        }) ? function(e, t, n) {
            var a = Jr(zr, t);
            a && delete zr[t], Kr(e, t, n), a && e !== zr && Kr(zr, t, a)
        } : Kr,
        os = qi ? function(e) {
            return "symbol" == typeof e
        } : function(e) {
            return Object(e) instanceof Gr
        },
        is = function(e, t, n) {
            e === zr && is(Zr, t, n), Ir(e);
            t = Or(t, !0);
            return Ir(n), xr(Xr, t) ? (n.enumerable ? (xr(e, Br) && e[Br][t] && (e[Br][t] = !1), n = Nr(n, {
                enumerable: $r(0, !1)
            })) : (xr(e, Br) || Kr(e, Br, $r(1, {})), e[Br][t] = !0), as(e, t, n)) : Kr(e, t, n)
        },
        rs = function(e) {
            var t = Or(e, !0),
                e = Qr.call(this, t);
            return !(this === zr && xr(Xr, t) && !xr(Zr, t)) && (!(e || !xr(this, t) || !xr(Xr, t) || xr(this, Br) && this[Br][t]) || e)
        },
        te = function(e, t) {
            var n = Pr(e),
                e = Or(t, !0);
            if (n !== zr || !xr(Xr, e) || xr(Zr, e)) {
                t = Jr(n, e);
                return !t || !xr(Xr, e) || xr(n, Br) && n[Br][e] || (t.enumerable = !0), t
            }
        },
        qi = function(e) {
            var e = Wr(Pr(e)),
                t = [];
            return _r(e, function(e) {
                xr(Xr, e) || xr(Ur, e) || t.push(e)
            }), t
        },
        ss = function(e) {
            var t = e === zr,
                e = Wr(t ? Zr : Pr(e)),
                n = [];
            return _r(e, function(e) {
                !xr(Xr, e) || t && !xr(zr, e) || n.push(Xr[e])
            }), n
        };
    q || (gt((Gr = function() {
        if (this instanceof Gr) throw TypeError("Symbol is not a constructor");
        var e = arguments.length && void 0 !== arguments[0] ? String(arguments[0]) : void 0,
            t = Lr(e),
            n = function(e) {
                this === zr && n.call(Zr, e), xr(this, Br) && xr(this[Br], t) && (this[Br][t] = !1), as(this, t, $r(1, e))
            };
        return Ar && ns && as(zr, t, {
            configurable: !0,
            set: n
        }), br(t, e)
    }).prototype, "toString", function() {
        return Hr(this).tag
    }), gt(Gr, "withoutSetter", function(e) {
        return br(Lr(e), e)
    }), s.f = rs, c.f = is, Ke.f = te, an.f = Ge.f = qi, Dr.f = ss, lt.f = function(e) {
        return br(Mr(e), e)
    }, Ar && (Kr(Gr.prototype, "description", {
        configurable: !0,
        get: function() {
            return Hr(this).description
        }
    }), gt(zr, "propertyIsEnumerable", rs, {
        unsafe: !0
    }))), P({
        global: !0,
        wrap: !0,
        forced: !q,
        sham: !q
    }, {
        Symbol: Gr
    }), _r(jr(vt), function(e) {
        var t;
        t = e, e = wr.Symbol || (wr.Symbol = {}), kr(e, t) || Tr(e, t, {
            value: Sr.f(t)
        })
    }), P({
        target: Fr,
        stat: !0,
        forced: !q
    }, {
        for: function(e) {
            var t = String(e);
            if (xr(es, t)) return es[t];
            e = Gr(t);
            return es[t] = e, ts[e] = t, e
        },
        keyFor: function(e) {
            if (!os(e)) throw TypeError(e + " is not a symbol");
            if (xr(ts, e)) return ts[e]
        },
        useSetter: function() {
            ns = !0
        },
        useSimple: function() {
            ns = !1
        }
    }), P({
        target: "Object",
        stat: !0,
        forced: !q,
        sham: !Ar
    }, {
        create: function(e, t) {
            return void 0 === t ? Nr(e) : Cr(Nr(e), t)
        },
        defineProperty: is,
        defineProperties: Cr,
        getOwnPropertyDescriptor: te
    }), P({
        target: "Object",
        stat: !0,
        forced: !q
    }, {
        getOwnPropertyNames: qi,
        getOwnPropertySymbols: ss
    }), P({
        target: "Object",
        stat: !0,
        forced: un(function() {
            Dr.f(1)
        })
    }, {
        getOwnPropertySymbols: function(e) {
            return Dr.f(Rr(e))
        }
    }), Yr && P({
        target: "JSON",
        stat: !0,
        forced: !q || un(function() {
            var e = Gr();
            return "[null]" != Yr([e]) || "{}" != Yr({
                a: e
            }) || "{}" != Yr(Object(e))
        })
    }, {
        stringify: function(e, t, n) {
            for (var a, o = [e], i = 1; i < arguments.length;) o.push(arguments[i++]);
            if ((qr(a = t) || void 0 !== e) && !os(e)) return Er(t) || (t = function(e, t) {
                if ("function" == typeof a && (t = a.call(this, e, t)), !os(t)) return t
            }), o[1] = t, Yr.apply(null, o)
        }
    }), Gr.prototype[Te] || v(Gr.prototype, Te, Gr.prototype.valueOf), $(Gr, Fr), Ur[Br] = !0;
    var ls, cs, ds, us, ps, Te = yt,
        ms = f,
        gs = m,
        $ = F.f,
        Et = Et,
        hs = a.Symbol;
    !i || "function" != typeof hs || "description" in hs.prototype && void 0 === hs().description || (ls = {}, Et(cs = function() {
        var e = arguments.length < 1 || void 0 === arguments[0] ? void 0 : String(arguments[0]),
            t = this instanceof cs ? new hs(e) : void 0 === e ? hs() : hs(e);
        return "" === e && (ls[t] = !0), t
    }, hs), (ys = cs.prototype = hs.prototype).constructor = cs, ds = ys.toString, us = "Symbol(test)" == String(hs("test")), ps = /^Symbol\((.*)\)[^)]+$/, $(ys, "description", {
        configurable: !0,
        get: function() {
            var e = gs(this) ? this.valueOf() : this,
                t = ds.call(e);
            if (ms(ls, e)) return "";
            t = us ? t.slice(7, -1) : t.replace(ps, "$1");
            return "" === t ? void 0 : t
        }
    }), Te({
        global: !0,
        forced: !0
    }, {
        Symbol: cs
    }));
    var fs = B,
        Et = {},
        $ = e;

    function vs(e, t) {
        return RegExp(e, t)
    }
    Et.UNSUPPORTED_Y = $(function() {
        var e = vs("a", "y");
        return e.lastIndex = 2, null != e.exec("abcd")
    }), Et.BROKEN_CARET = $(function() {
        var e = vs("^r", "gy");
        return e.lastIndex = 2, null != e.exec("str")
    });
    var ys = Et,
        Te = le.exports,
        bs = RegExp.prototype.exec,
        Cs = Te("native-string-replace", String.prototype.replace),
        $ = bs,
        ws = (le = /a/, Te = /b*/g, bs.call(le, "a"), bs.call(Te, "a"), 0 !== le.lastIndex || 0 !== Te.lastIndex),
        ks = ys.UNSUPPORTED_Y || ys.BROKEN_CARET,
        Ss = void 0 !== /()??/.exec("")[1];
    (ws || Ss || ks) && ($ = function(e) {
        var t, n, a, o, i = this,
            r = ks && i.sticky,
            s = function() {
                var e = fs(this),
                    t = "";
                return e.global && (t += "g"), e.ignoreCase && (t += "i"), e.multiline && (t += "m"), e.dotAll && (t += "s"), e.unicode && (t += "u"), e.sticky && (t += "y"), t
            }.call(i),
            l = i.source,
            c = 0,
            d = e;
        return r && (-1 === (s = s.replace("y", "")).indexOf("g") && (s += "g"), d = String(e).slice(i.lastIndex), 0 < i.lastIndex && (!i.multiline || i.multiline && "\n" !== e[i.lastIndex - 1]) && (l = "(?: " + l + ")", d = " " + d, c++), n = new RegExp("^(?:" + l + ")", s)), Ss && (n = new RegExp("^" + l + "$(?!\\s)", s)), ws && (t = i.lastIndex), a = bs.call(r ? n : i, d), r ? a ? (a.input = a.input.slice(c), a[0] = a[0].slice(c), a.index = i.lastIndex, i.lastIndex += a[0].length) : i.lastIndex = 0 : ws && a && (i.lastIndex = i.global ? a.index + a[0].length : t), Ss && a && 1 < a.length && Cs.call(a[0], n, function() {
            for (o = 1; o < arguments.length - 2; o++) void 0 === arguments[o] && (a[o] = void 0)
        }), a
    });
    Te = $;
    yt({
        target: "RegExp",
        proto: !0,
        forced: /./.exec !== Te
    }, {
        exec: Te
    });
    var Ts = Q.exports,
        As = Te,
        xs = e,
        Es = re,
        qs = W,
        Is = Es("species"),
        Rs = RegExp.prototype,
        Ps = !xs(function() {
            var e = /./;
            return e.exec = function() {
                var e = [];
                return e.groups = {
                    a: "7"
                }, e
            }, "7" !== "".replace(e, "$<a>")
        }),
        Os = "$0" === "a".replace(/./, "$0"),
        ys = Es("replace"),
        $s = !!/./ [ys] && "" === /./ [ys]("a", "$0"),
        Ns = !xs(function() {
            var e = /(?:)/,
                t = e.exec;
            e.exec = function() {
                return t.apply(this, arguments)
            };
            e = "ab".split(e);
            return 2 !== e.length || "a" !== e[0] || "b" !== e[1]
        }),
        $ = function(n, e, t, a) {
            var r, o, i = Es(n),
                s = !xs(function() {
                    var e = {};
                    return e[i] = function() {
                        return 7
                    }, 7 != "" [n](e)
                }),
                l = s && !xs(function() {
                    var e = !1,
                        t = /a/;
                    return "split" === n && ((t = {}).constructor = {}, t.constructor[Is] = function() {
                        return t
                    }, t.flags = "", t[i] = /./ [i]), t.exec = function() {
                        return e = !0, null
                    }, t[i](""), !e
                });
            s && l && ("replace" !== n || Ps && Os && !$s) && ("split" !== n || Ns) || (r = /./ [i], t = (l = t(i, "" [n], function(e, t, n, a, o) {
                var i = t.exec;
                return i === As || i === Rs.exec ? s && !o ? {
                    done: !0,
                    value: r.call(t, n, a)
                } : {
                    done: !0,
                    value: e.call(n, t, a)
                } : {
                    done: !1
                }
            }, {
                REPLACE_KEEPS_$0: Os,
                REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: $s
            }))[0], o = l[1], Ts(String.prototype, n, t), Ts(Rs, i, 2 == e ? function(e, t) {
                return o.call(e, this, t)
            } : function(e) {
                return o.call(e, this)
            })), a && qs(Rs[i], "sham", !0)
        },
        js = ie.charAt,
        W = function(e, t, n) {
            return t + (n ? js(e, t).length : 1)
        },
        Ds = d,
        Us = Te,
        ys = function(e, t) {
            var n = e.exec;
            if ("function" == typeof n) {
                n = n.call(e, t);
                if ("object" != typeof n) throw TypeError("RegExp exec method returned something other than an Object or null");
                return n
            }
            if ("RegExp" !== Ds(e)) throw TypeError("RegExp#exec called on incompatible receiver");
            return Us.call(e, t)
        },
        Ls = B,
        Ms = He,
        _s = u,
        Bs = W,
        Fs = ys;
    $("match", 1, function(a, l, c) {
        return [function(e) {
            var t = _s(this),
                n = null == e ? void 0 : e[a];
            return void 0 !== n ? n.call(e, t) : new RegExp(e)[a](String(t))
        }, function(e) {
            var t = c(l, e, this);
            if (t.done) return t.value;
            var n = Ls(e),
                a = String(this);
            if (!n.global) return Fs(n, a);
            for (var o = n.unicode, i = [], r = n.lastIndex = 0; null !== (s = Fs(n, a));) {
                var s = String(s[0]);
                "" === (i[r] = s) && (n.lastIndex = Bs(a, Ms(n.lastIndex), o)), r++
            }
            return 0 === r ? null : i
        }]
    });
    var ie = yt,
        Vs = ze,
        Hs = Ve,
        zs = He,
        Gs = h,
        Ys = we,
        Js = Re,
        we = Oe("splice"),
        Ks = Math.max,
        Ws = Math.min;
    ie({
        target: "Array",
        proto: !0,
        forced: !we
    }, {
        splice: function(e, t) {
            var n, a, o, i, r, s, l = Gs(this),
                c = zs(l.length),
                d = Vs(e, c),
                e = arguments.length;
            if (0 === e ? n = a = 0 : a = 1 === e ? (n = 0, c - d) : (n = e - 2, Ws(Ks(Hs(t), 0), c - d)), 9007199254740991 < c + n - a) throw TypeError("Maximum allowed length exceeded");
            for (o = Ys(l, a), i = 0; i < a; i++)(r = d + i) in l && Js(o, i, l[r]);
            if (n < (o.length = a)) {
                for (i = d; i < c - a; i++) s = i + n, (r = i + a) in l ? l[s] = l[r] : delete l[s];
                for (i = c; c - a + n < i; i--) delete l[i - 1]
            } else if (a < n)
                for (i = c - a; d < i; i--) s = i + n - 1, (r = i + a - 1) in l ? l[s] = l[r] : delete l[s];
            for (i = 0; i < n; i++) l[i + d] = arguments[i + 2];
            return l.length = c - a + n, o
        }
    });
    var Qs = m,
        Xs = d,
        Zs = re("match"),
        el = B,
        tl = u,
        nl = st,
        al = W,
        ol = He,
        il = ys,
        rl = Te,
        sl = Et.UNSUPPORTED_Y,
        ll = [].push,
        cl = Math.min,
        dl = 4294967295;
    $("split", 2, function(o, g, h) {
        var f = "c" == "abbc".split(/(b)*/)[1] || 4 != "test".split(/(?:)/, -1).length || 2 != "ab".split(/(?:ab)*/).length || 4 != ".".split(/(.?)(.?)/).length || 1 < ".".split(/()()/).length || "".split(/.?/).length ? function(e, t) {
            var n = String(tl(this)),
                a = void 0 === t ? dl : t >>> 0;
            if (0 == a) return [];
            if (void 0 === e) return [n];
            if (!Qs(l = e) || (void 0 !== (t = l[Zs]) ? !t : "RegExp" != Xs(l))) return g.call(n, e, a);
            for (var o, i, r, s = [], l = (e.ignoreCase ? "i" : "") + (e.multiline ? "m" : "") + (e.unicode ? "u" : "") + (e.sticky ? "y" : ""), c = 0, d = new RegExp(e.source, l + "g");
                (o = rl.call(d, n)) && !((i = d.lastIndex) > c && (s.push(n.slice(c, o.index)), 1 < o.length && o.index < n.length && ll.apply(s, o.slice(1)), r = o[0].length, c = i, s.length >= a));) d.lastIndex === o.index && d.lastIndex++;
            return c === n.length ? !r && d.test("") || s.push("") : s.push(n.slice(c)), s.length > a ? s.slice(0, a) : s
        } : "0".split(void 0, 0).length ? function(e, t) {
            return void 0 === e && 0 === t ? [] : g.call(this, e, t)
        } : g;
        return [function(e, t) {
            var n = tl(this),
                a = null == e ? void 0 : e[o];
            return void 0 !== a ? a.call(e, n, t) : f.call(String(n), e, t)
        }, function(e, t) {
            var n = h(f, e, this, t, f !== g);
            if (n.done) return n.value;
            var a = el(e),
                o = String(this),
                n = nl(a, RegExp),
                i = a.unicode,
                e = (a.ignoreCase ? "i" : "") + (a.multiline ? "m" : "") + (a.unicode ? "u" : "") + (sl ? "g" : "y"),
                r = new n(sl ? "^(?:" + a.source + ")" : a, e),
                s = void 0 === t ? dl : t >>> 0;
            if (0 == s) return [];
            if (0 === o.length) return null === il(r, o) ? [o] : [];
            for (var l = 0, c = 0, d = []; c < o.length;) {
                r.lastIndex = sl ? 0 : c;
                var u, p = il(r, sl ? o.slice(c) : o);
                if (null === p || (u = cl(ol(r.lastIndex + (sl ? c : 0)), o.length)) === l) c = al(o, c, i);
                else {
                    if (d.push(o.slice(l, c)), d.length === s) return d;
                    for (var m = 1; m <= p.length - 1; m++)
                        if (d.push(p[m]), d.length === s) return d;
                    c = l = u
                }
            }
            return d.push(o.slice(l)), d
        }]
    }, sl);

    function ul(e) {
        var t, n, a, o, i, r, s, l = fl(e, !1);
        if ("string" == typeof l && 2 < l.length)
            if (43 === (t = (l = Cl(l)).charCodeAt(0)) || 45 === t) {
                if (88 === (e = l.charCodeAt(2)) || 120 === e) return NaN
            } else if (48 === t) {
            switch (l.charCodeAt(1)) {
                case 66:
                case 98:
                    n = 2, a = 49;
                    break;
                case 79:
                case 111:
                    n = 8, a = 55;
                    break;
                default:
                    return +l
            }
            for (i = (o = l.slice(2)).length, r = 0; r < i; r++)
                if ((s = o.charCodeAt(r)) < 48 || a < s) return NaN;
            return parseInt(o, n)
        }
        return +l
    }
    var pl = m,
        ml = sa,
        sa = i,
        a = a,
        jt = jt,
        Q = Q.exports,
        gl = f,
        hl = d,
        fl = g,
        vl = e,
        We = We.f,
        yl = o.f,
        bl = F.f,
        Cl = Oi.trim,
        wl = "Number",
        kl = a.Number,
        Sl = kl.prototype,
        Tl = hl(se(Sl)) == wl;
    if (jt(wl, !kl(" 0o1") || !kl("0b1") || kl("+0x1"))) {
        for (var Al, xl = function(e) {
                var t, n, a, o, i = arguments.length < 1 ? 0 : e,
                    r = this;
                return r instanceof xl && (Tl ? vl(function() {
                    Sl.valueOf.call(r)
                }) : hl(r) != wl) ? (t = new kl(ul(i)), n = r, e = xl, ml && "function" == typeof(a = n.constructor) && a !== e && pl(o = a.prototype) && o !== e.prototype && ml(t, o), t) : ul(i)
            }, El = sa ? We(kl) : "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger,fromString,range".split(","), ql = 0; El.length > ql; ql++) gl(kl, Al = El[ql]) && !gl(xl, Al) && bl(xl, Al, yl(kl, Al));
        (xl.prototype = Sl).constructor = xl, Q(a, wl, xl)
    }
    var Q = F.f,
        a = Function.prototype,
        Il = a.toString,
        Rl = /^\s*function ([^ (]*)/;
    !i || "name" in a || Q(a, "name", {
        configurable: !0,
        get: function() {
            try {
                return Il.call(this).match(Rl)[1]
            } catch (e) {
                return ""
            }
        }
    });
    var a = yt,
        Pl = p,
        Ol = [].join,
        w = w != Object,
        Ie = Ie("join", ",");
    a({
        target: "Array",
        proto: !0,
        forced: w || !Ie
    }, {
        join: function(e) {
            return Ol.call(Pl(this), void 0 === e ? "," : e)
        }
    });
    var $l = ".slides section",
        Nl = ".slides>section",
        jl = ".slides>section.present>section",
        Dl = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener/,
        Ul = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/,
        Ll = h,
        Ml = Math.floor,
        _l = "".replace,
        Bl = /\$([$&'`]|\d{1,2}|<[^>]*>)/g,
        Fl = /\$([$&'`]|\d{1,2})/g,
        Vl = B,
        Hl = He,
        zl = Ve,
        Gl = u,
        Yl = W,
        Jl = ys,
        Kl = Math.max,
        Wl = Math.min;
    $("replace", 2, function(o, C, w, e) {
        var k = e.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,
            S = e.REPLACE_KEEPS_$0,
            T = k ? "$" : "$0";
        return [function(e, t) {
            var n = Gl(this),
                a = null == e ? void 0 : e[o];
            return void 0 !== a ? a.call(e, n, t) : C.call(String(n), e, t)
        }, function(e, t) {
            if (!k && S || "string" == typeof t && -1 === t.indexOf(T)) {
                var n = w(C, e, this, t);
                if (n.done) return n.value
            }
            var a = Vl(e),
                o = String(this),
                i = "function" == typeof t;
            i || (t = String(t));
            var r, s = a.global;
            s && (r = a.unicode, a.lastIndex = 0);
            for (var l = [];;) {
                var c = Jl(a, o);
                if (null === c) break;
                if (l.push(c), !s) break;
                "" === String(c[0]) && (a.lastIndex = Yl(o, Hl(a.lastIndex), r))
            }
            for (var d, u = "", p = 0, m = 0; m < l.length; m++) {
                c = l[m];
                for (var g = String(c[0]), h = Kl(Wl(zl(c.index), o.length), 0), f = [], v = 1; v < c.length; v++) f.push(void 0 === (d = c[v]) ? d : String(d));
                var y, b = c.groups,
                    b = i ? (y = [g].concat(f, h, o), void 0 !== b && y.push(b), String(t.apply(void 0, y))) : function(i, r, s, l, c, e) {
                        var d = s + i.length,
                            u = l.length,
                            t = Fl;
                        return void 0 !== c && (c = Ll(c), t = Bl), _l.call(e, t, function(e, t) {
                            var n;
                            switch (t.charAt(0)) {
                                case "$":
                                    return "$";
                                case "&":
                                    return i;
                                case "`":
                                    return r.slice(0, s);
                                case "'":
                                    return r.slice(d);
                                case "<":
                                    n = c[t.slice(1, -1)];
                                    break;
                                default:
                                    var a = +t;
                                    if (0 == a) return e;
                                    if (u < a) {
                                        var o = Ml(a / 10);
                                        return 0 !== o && o <= u ? void 0 === l[o - 1] ? t.charAt(1) : l[o - 1] + t.charAt(1) : e
                                    }
                                    n = l[a - 1]
                            }
                            return void 0 === n ? "" : n
                        })
                    }(g, o, h, f, b, t);
                p <= h && (u += o.slice(p, h) + b, p = h + g.length)
            }
            return u + o.slice(p)
        }]
    });
    var W = Object.is || function(e, t) {
            return e === t ? 0 !== e || 1 / e == 1 / t : e != e && t != t
        },
        Ql = B,
        Xl = u,
        Zl = W,
        ec = ys;
    $("search", 1, function(a, o, i) {
        return [function(e) {
            var t = Xl(this),
                n = null == e ? void 0 : e[a];
            return void 0 !== n ? n.call(e, t) : new RegExp(e)[a](String(t))
        }, function(e) {
            var t = i(o, e, this);
            if (t.done) return t.value;
            var n = Ql(e),
                t = String(this),
                e = n.lastIndex;
            Zl(e, 0) || (n.lastIndex = 0);
            t = ec(n, t);
            return Zl(n.lastIndex, e) || (n.lastIndex = e), null === t ? -1 : t.index
        }]
    });

    function tc(e, t) {
        for (var n in t) e[n] = t[n];
        return e
    }

    function nc(e, t) {
        return Array.from(e.querySelectorAll(t))
    }

    function ac(e, t, n) {
        n ? e.classList.add(t) : e.classList.remove(t)
    }

    function oc(e) {
        if ("string" == typeof e) {
            if ("null" === e) return null;
            if ("true" === e) return !0;
            if ("false" === e) return !1;
            if (e.match(/^-?[\d\.]+$/)) return parseFloat(e)
        }
        return e
    }

    function ic(e, t) {
        e.style.transform = t
    }

    function rc(e, t) {
        var n = e.matches || e.matchesSelector || e.msMatchesSelector;
        return !(!n || !n.call(e, t))
    }

    function sc(e, t) {
        if ("function" == typeof e.closest) return e.closest(t);
        for (; e;) {
            if (rc(e, t)) return e;
            e = e.parentNode
        }
        return null
    }

    function lc(e) {
        var t = document.createElement("style");
        return t.type = "text/css", e && 0 < e.length && (t.styleSheet ? t.styleSheet.cssText = e : t.appendChild(document.createTextNode(e))), document.head.appendChild(t), t
    }

    function cc() {
        var e, t = {};
        for (e in location.search.replace(/[A-Z0-9]+?=([\w\.%-]*)/gi, function(e) {
                t[e.split("=").shift()] = e.split("=").pop()
            }), t) {
            var n = t[e];
            t[e] = oc(unescape(n))
        }
        return void 0 !== t.dependencies && delete t.dependencies, t
    }
    var W = navigator.userAgent,
        ys = document.createElement("div"),
        dc = /(iphone|ipod|ipad|android)/gi.test(W) || "MacIntel" === navigator.platform && 1 < navigator.maxTouchPoints,
        $ = /chrome/i.test(W) && !/edge/i.test(W),
        uc = /android/gi.test(W),
        pc = "zoom" in ys.style && !dc && ($ || /Version\/[\d\.]+.*Safari/.test(W)),
        W = {};
    Object.defineProperty(W, "__esModule", {
        value: !0
    });

    function mc(e) {
        var t = e.match(/^#([0-9a-f]{3})$/i);
        return t && t[1] ? (t = t[1], {
            r: 17 * parseInt(t.charAt(0), 16),
            g: 17 * parseInt(t.charAt(1), 16),
            b: 17 * parseInt(t.charAt(2), 16)
        }) : (t = e.match(/^#([0-9a-f]{6})$/i)) && t[1] ? (t = t[1], {
            r: parseInt(t.substr(0, 2), 16),
            g: parseInt(t.substr(2, 2), 16),
            b: parseInt(t.substr(4, 2), 16)
        }) : (t = e.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i)) ? {
            r: parseInt(t[1], 10),
            g: parseInt(t[2], 10),
            b: parseInt(t[3], 10)
        } : (e = e.match(/^rgba\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\,\s*([\d]+|[\d]*.[\d]+)\s*\)$/i)) ? {
            r: parseInt(e[1], 10),
            g: parseInt(e[2], 10),
            b: parseInt(e[3], 10),
            a: parseFloat(e[4])
        } : null
    }
    var gc = Object.assign || function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n, a = arguments[t];
                for (n in a) Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n])
            }
            return e
        },
        hc = W.default = function(n) {
            if (n) {
                var o = 3,
                    i = [],
                    e = null,
                    r = "requestAnimationFrame" in n ? function() {
                        n.cancelAnimationFrame(e), e = n.requestAnimationFrame(function() {
                            return a(i.filter(function(e) {
                                return e.dirty && e.active
                            }))
                        })
                    } : function() {},
                    t = function(t) {
                        return function() {
                            i.forEach(function(e) {
                                return e.dirty = t
                            }), r()
                        }
                    },
                    a = function(e) {
                        e.filter(function(e) {
                            return !e.styleComputed
                        }).forEach(function(e) {
                            e.styleComputed = d(e)
                        }), e.filter(u).forEach(p);
                        e = e.filter(c);
                        e.forEach(l), e.forEach(function(e) {
                            p(e), s(e)
                        }), e.forEach(m)
                    },
                    s = function(e) {
                        return e.dirty = 0
                    },
                    l = function(e) {
                        e.availableWidth = e.element.parentNode.clientWidth, e.currentWidth = e.element.scrollWidth, e.previousFontSize = e.currentFontSize, e.currentFontSize = Math.min(Math.max(e.minSize, e.availableWidth / e.currentWidth * e.previousFontSize), e.maxSize), e.whiteSpace = e.multiLine && e.currentFontSize === e.minSize ? "normal" : "nowrap"
                    },
                    c = function(e) {
                        return 2 !== e.dirty || 2 === e.dirty && e.element.parentNode.clientWidth !== e.availableWidth
                    },
                    d = function(e) {
                        var t = n.getComputedStyle(e.element, null);
                        e.currentFontSize = parseFloat(t.getPropertyValue("font-size")), e.display = t.getPropertyValue("display"), e.whiteSpace = t.getPropertyValue("white-space")
                    },
                    u = function(e) {
                        var t = !1;
                        return !e.preStyleTestCompleted && (/inline-/.test(e.display) || (t = !0, e.display = "inline-block"), "nowrap" !== e.whiteSpace && (t = !0, e.whiteSpace = "nowrap"), e.preStyleTestCompleted = !0, t)
                    },
                    p = function(e) {
                        e.element.style.whiteSpace = e.whiteSpace, e.element.style.display = e.display, e.element.style.fontSize = e.currentFontSize + "px"
                    },
                    m = function(e) {
                        e.element.dispatchEvent(new CustomEvent("fit", {
                            detail: {
                                oldValue: e.previousFontSize,
                                newValue: e.currentFontSize,
                                scaleFactor: e.currentFontSize / e.previousFontSize
                            }
                        }))
                    },
                    g = function(e, t) {
                        return function() {
                            e.dirty = t, e.active && r()
                        }
                    },
                    h = function(t) {
                        return function() {
                            i = i.filter(function(e) {
                                return e.element !== t.element
                            }), t.observeMutations && t.observer.disconnect(), t.element.style.whiteSpace = t.originalStyle.whiteSpace, t.element.style.display = t.originalStyle.display, t.element.style.fontSize = t.originalStyle.fontSize
                        }
                    },
                    f = function(e) {
                        return function() {
                            e.active || (e.active = !0, r())
                        }
                    },
                    v = function(e) {
                        return function() {
                            return e.active = !1
                        }
                    },
                    y = function(e) {
                        e.observeMutations && (e.observer = new MutationObserver(g(e, 1)), e.observer.observe(e.element, e.observeMutations))
                    },
                    b = {
                        minSize: 16,
                        maxSize: 512,
                        multiLine: !0,
                        observeMutations: "MutationObserver" in n && {
                            subtree: !0,
                            childList: !0,
                            characterData: !0
                        }
                    },
                    C = null,
                    w = function() {
                        n.clearTimeout(C), C = n.setTimeout(t(2), T.observeWindowDelay)
                    },
                    k = ["resize", "orientationchange"];
                return Object.defineProperty(T, "observeWindow", {
                    set: function(e) {
                        var t = (e ? "add" : "remove") + "EventListener";
                        k.forEach(function(e) {
                            n[t](e, w)
                        })
                    }
                }), T.observeWindow = !0, T.observeWindowDelay = 100, T.fitAll = t(o), T
            }

            function S(e, t) {
                var a = gc({}, b, t),
                    e = e.map(function(e) {
                        var t, n = gc({}, a, {
                            element: e,
                            active: !0
                        });
                        return (t = n).originalStyle = {
                            whiteSpace: t.element.style.whiteSpace,
                            display: t.element.style.display,
                            fontSize: t.element.style.fontSize
                        }, y(t), t.newbie = !0, t.dirty = !0, i.push(t), {
                            element: e,
                            fit: g(n, o),
                            unfreeze: f(n),
                            freeze: v(n),
                            unsubscribe: h(n)
                        }
                    });
                return r(), e
            }

            function T(e) {
                var t, n = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {};
                return "string" == typeof e ? S((t = document.querySelectorAll(e), [].slice.call(t)), n) : S([e], n)[0]
            }
        }("undefined" == typeof window ? null : window),
        fc = (Kn(Sc, [{
            key: "shouldPreload",
            value: function(e) {
                var t = this.Reveal.getConfig().preloadIframes;
                return "boolean" != typeof t && (t = e.hasAttribute("data-preload")), t
            }
        }, {
            key: "load",
            value: function(e) {
                var t = this,
                    n = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {};
                e.style.display = this.Reveal.getConfig().display, nc(e, "img[data-src], video[data-src], audio[data-src], iframe[data-src]").forEach(function(e) {
                    "IFRAME" === e.tagName && !t.shouldPreload(e) || (e.setAttribute("src", e.getAttribute("data-src")), e.setAttribute("data-lazy-loaded", ""), e.removeAttribute("data-src"))
                }), nc(e, "video, audio").forEach(function(e) {
                    var t = 0;
                    nc(e, "source[data-src]").forEach(function(e) {
                        e.setAttribute("src", e.getAttribute("data-src")), e.removeAttribute("data-src"), e.setAttribute("data-lazy-loaded", ""), t += 1
                    }), dc && "VIDEO" === e.tagName && e.setAttribute("playsinline", ""), 0 < t && e.load()
                });
                var a, o, i, r, s, l, c, d = e.slideBackgroundElement;
                d && (d.style.display = "block", c = e.slideBackgroundContentElement, a = e.getAttribute("data-background-iframe"), !1 === d.hasAttribute("data-loaded") && (d.setAttribute("data-loaded", "true"), o = e.getAttribute("data-background-image"), i = e.getAttribute("data-background-video"), r = e.hasAttribute("data-background-video-loop"), s = e.hasAttribute("data-background-video-muted"), o ? c.style.backgroundImage = o.split(",").map(function(e) {
                    return "url(".concat(encodeURI(e.trim()), ")")
                }).join(",") : i && !this.Reveal.isSpeakerNotes() ? (l = document.createElement("video"), r && l.setAttribute("loop", ""), s && (l.muted = !0), dc && (l.muted = !0, l.setAttribute("playsinline", "")), i.split(",").forEach(function(e) {
                    l.innerHTML += '<source src="' + e + '">'
                }), c.appendChild(l)) : a && !0 !== n.excludeIframes && ((n = document.createElement("iframe")).setAttribute("allowfullscreen", ""), n.setAttribute("mozallowfullscreen", ""), n.setAttribute("webkitallowfullscreen", ""), n.setAttribute("allow", "autoplay"), n.setAttribute("data-src", a), n.style.width = "100%", n.style.height = "100%", n.style.maxHeight = "100%", n.style.maxWidth = "100%", c.appendChild(n))), (c = c.querySelector("iframe[data-src]")) && this.shouldPreload(d) && !/autoplay=(1|true|yes)/gi.test(a) && c.getAttribute("src") !== a && c.setAttribute("src", a)), this.layout(e)
            }
        }, {
            key: "layout",
            value: function(e) {
                var t = this;
                Array.from(e.querySelectorAll(".r-fit-text")).forEach(function(e) {
                    hc(e, {
                        minSize: 24,
                        maxSize: .8 * t.Reveal.getConfig().height,
                        observeMutations: !1,
                        observeWindow: !1
                    })
                })
            }
        }, {
            key: "unload",
            value: function(e) {
                e.style.display = "none";
                var t = this.Reveal.getSlideBackground(e);
                t && (t.style.display = "none", nc(t, "iframe[src]").forEach(function(e) {
                    e.removeAttribute("src")
                })), nc(e, "video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]").forEach(function(e) {
                    e.setAttribute("data-src", e.getAttribute("src")), e.removeAttribute("src")
                }), nc(e, "video[data-lazy-loaded] source[src], audio source[src]").forEach(function(e) {
                    e.setAttribute("data-src", e.getAttribute("src")), e.removeAttribute("src")
                })
            }
        }, {
            key: "formatEmbeddedContent",
            value: function() {
                function e(n, e, a) {
                    nc(t.Reveal.getSlidesElement(), "iframe[" + n + '*="' + e + '"]').forEach(function(e) {
                        var t = e.getAttribute(n);
                        t && -1 === t.indexOf(a) && e.setAttribute(n, t + (/\?/.test(t) ? "&" : "?") + a)
                    })
                }
                var t = this;
                e("src", "youtube.com/embed/", "enablejsapi=1"), e("data-src", "youtube.com/embed/", "enablejsapi=1"), e("src", "player.vimeo.com/", "api=1"), e("data-src", "player.vimeo.com/", "api=1")
            }
        }, {
            key: "startEmbeddedContent",
            value: function(e) {
                var n = this;
                e && !this.Reveal.isSpeakerNotes() && (nc(e, 'img[src$=".gif"]').forEach(function(e) {
                    e.setAttribute("src", e.getAttribute("src"))
                }), nc(e, "video, audio").forEach(function(e) {
                    var t;
                    sc(e, ".fragment") && !sc(e, ".fragment.visible") || ("boolean" != typeof(t = n.Reveal.getConfig().autoPlayMedia) && (t = e.hasAttribute("data-autoplay") || !!sc(e, ".slide-background")), t && "function" == typeof e.play && (1 < e.readyState ? n.startEmbeddedMedia({
                        target: e
                    }) : dc ? (t = e.play()) && "function" == typeof t.catch && !1 === e.controls && t.catch(function() {
                        e.controls = !0, e.addEventListener("play", function() {
                            e.controls = !1
                        })
                    }) : (e.removeEventListener("loadeddata", n.startEmbeddedMedia), e.addEventListener("loadeddata", n.startEmbeddedMedia))))
                }), nc(e, "iframe[src]").forEach(function(e) {
                    sc(e, ".fragment") && !sc(e, ".fragment.visible") || n.startEmbeddedIframe({
                        target: e
                    })
                }), nc(e, "iframe[data-src]").forEach(function(e) {
                    sc(e, ".fragment") && !sc(e, ".fragment.visible") || e.getAttribute("src") !== e.getAttribute("data-src") && (e.removeEventListener("load", n.startEmbeddedIframe), e.addEventListener("load", n.startEmbeddedIframe), e.setAttribute("src", e.getAttribute("data-src")))
                }))
            }
        }, {
            key: "startEmbeddedMedia",
            value: function(e) {
                var t = !!sc(e.target, "html"),
                    n = !!sc(e.target, ".present");
                t && n && (e.target.currentTime = 0, e.target.play()), e.target.removeEventListener("loadeddata", this.startEmbeddedMedia)
            }
        }, {
            key: "startEmbeddedIframe",
            value: function(e) {
                var t, n = e.target;
                n && n.contentWindow && (t = !!sc(e.target, "html"), e = !!sc(e.target, ".present"), t && e && ("boolean" != typeof(e = this.Reveal.getConfig().autoPlayMedia) && (e = n.hasAttribute("data-autoplay") || !!sc(n, ".slide-background")), /youtube\.com\/embed\//.test(n.getAttribute("src")) && e ? n.contentWindow.postMessage('{"event":"command","func":"playVideo","args":""}', "*") : /player\.vimeo\.com\//.test(n.getAttribute("src")) && e ? n.contentWindow.postMessage('{"method":"play"}', "*") : n.contentWindow.postMessage("slide:start", "*")))
            }
        }, {
            key: "stopEmbeddedContent",
            value: function(e) {
                var t = this,
                    n = tc({
                        unloadIframes: !0
                    }, n = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : {});
                e && e.parentNode && (nc(e, "video, audio").forEach(function(e) {
                    e.hasAttribute("data-ignore") || "function" != typeof e.pause || (e.setAttribute("data-paused-by-reveal", ""), e.pause())
                }), nc(e, "iframe").forEach(function(e) {
                    e.contentWindow && e.contentWindow.postMessage("slide:stop", "*"), e.removeEventListener("load", t.startEmbeddedIframe)
                }), nc(e, 'iframe[src*="youtube.com/embed/"]').forEach(function(e) {
                    !e.hasAttribute("data-ignore") && e.contentWindow && "function" == typeof e.contentWindow.postMessage && e.contentWindow.postMessage('{"event":"command","func":"pauseVideo","args":""}', "*")
                }), nc(e, 'iframe[src*="player.vimeo.com/"]').forEach(function(e) {
                    !e.hasAttribute("data-ignore") && e.contentWindow && "function" == typeof e.contentWindow.postMessage && e.contentWindow.postMessage('{"method":"pause"}', "*")
                }), !0 === n.unloadIframes && nc(e, "iframe[data-src]").forEach(function(e) {
                    e.setAttribute("src", "about:blank"), e.removeAttribute("src")
                }))
            }
        }]), Sc),
        vc = (Kn(kc, [{
            key: "render",
            value: function() {
                this.element = document.createElement("div"), this.element.className = "slide-number", this.Reveal.getRevealElement().appendChild(this.element)
            }
        }, {
            key: "configure",
            value: function(e, t) {
                var n = "none";
                e.slideNumber && !this.Reveal.isPrintingPDF() && ("all" === e.showSlideNumber || "speaker" === e.showSlideNumber && this.Reveal.isSpeakerNotes()) && (n = "block"), this.element.style.display = n
            }
        }, {
            key: "update",
            value: function() {
                this.Reveal.getConfig().slideNumber && this.element && (this.element.innerHTML = this.getSlideNumber())
            }
        }, {
            key: "getSlideNumber",
            value: function() {
                var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : this.Reveal.getCurrentSlide(),
                    t = this.Reveal.getConfig(),
                    n = "h.v";
                if ("function" == typeof t.slideNumber) o = t.slideNumber(e);
                else {
                    "string" == typeof t.slideNumber && (n = t.slideNumber), /c/.test(n) || 1 !== this.Reveal.getHorizontalSlides().length || (n = "c");
                    var a = e && "uncounted" === e.dataset.visibility ? 0 : 1,
                        o = [];
                    switch (n) {
                        case "c":
                            o.push(this.Reveal.getSlidePastCount(e) + a);
                            break;
                        case "c/t":
                            o.push(this.Reveal.getSlidePastCount(e) + a, "/", this.Reveal.getTotalSlides());
                            break;
                        default:
                            var i = this.Reveal.getIndices(e);
                            o.push(i.h + a);
                            var r = "h/v" === n ? "/" : ".";
                            this.Reveal.isVerticalSlide(e) && o.push(r, i.v + 1)
                    }
                }
                t = "#" + this.Reveal.location.getHash(e);
                return this.formatNumber(o[0], o[1], o[2], t)
            }
        }, {
            key: "formatNumber",
            value: function(e, t, n) {
                var a = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : "#" + this.Reveal.location.getHash();
                return "number" != typeof n || isNaN(n) ? '<a href="'.concat(a, '">\n\t\t\t\t\t<span class="slide-number-a">').concat(e, "</span>\n\t\t\t\t\t</a>") : '<a href="'.concat(a, '">\n\t\t\t\t\t<span class="slide-number-a">').concat(e, '</span>\n\t\t\t\t\t<span class="slide-number-delimiter">').concat(t, '</span>\n\t\t\t\t\t<span class="slide-number-b">').concat(n, "</span>\n\t\t\t\t\t</a>")
            }
        }]), kc),
        yc = (Kn(wc, [{
            key: "render",
            value: function() {
                this.element = document.createElement("div"), this.element.className = "backgrounds", this.Reveal.getRevealElement().appendChild(this.element)
            }
        }, {
            key: "create",
            value: function() {
                var n = this;
                this.element.innerHTML = "", this.element.classList.add("no-transition"), this.Reveal.getHorizontalSlides().forEach(function(e) {
                    var t = n.createBackground(e, n.element);
                    nc(e, "section").forEach(function(e) {
                        n.createBackground(e, t), t.classList.add("stack")
                    })
                }), this.Reveal.getConfig().parallaxBackgroundImage ? (this.element.style.backgroundImage = 'url("' + this.Reveal.getConfig().parallaxBackgroundImage + '")', this.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize, this.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat, this.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition, setTimeout(function() {
                    n.Reveal.getRevealElement().classList.add("has-parallax-background")
                }, 1)) : (this.element.style.backgroundImage = "", this.Reveal.getRevealElement().classList.remove("has-parallax-background"))
            }
        }, {
            key: "createBackground",
            value: function(e, t) {
                var n = document.createElement("div");
                n.className = "slide-background " + e.className.replace(/present|past|future/, "");
                var a = document.createElement("div");
                return a.className = "slide-background-content", n.appendChild(a), t.appendChild(n), e.slideBackgroundElement = n, e.slideBackgroundContentElement = a, this.sync(e), n
            }
        }, {
            key: "sync",
            value: function(e) {
                var t = e.slideBackgroundElement,
                    n = e.slideBackgroundContentElement,
                    a = {
                        background: e.getAttribute("data-background"),
                        backgroundSize: e.getAttribute("data-background-size"),
                        backgroundImage: e.getAttribute("data-background-image"),
                        backgroundVideo: e.getAttribute("data-background-video"),
                        backgroundIframe: e.getAttribute("data-background-iframe"),
                        backgroundColor: e.getAttribute("data-background-color"),
                        backgroundRepeat: e.getAttribute("data-background-repeat"),
                        backgroundPosition: e.getAttribute("data-background-position"),
                        backgroundTransition: e.getAttribute("data-background-transition"),
                        backgroundOpacity: e.getAttribute("data-background-opacity")
                    },
                    o = e.hasAttribute("data-preload");
                e.classList.remove("has-dark-background"), e.classList.remove("has-light-background"), t.removeAttribute("data-loaded"), t.removeAttribute("data-background-hash"), t.removeAttribute("data-background-size"), t.removeAttribute("data-background-transition"), t.style.backgroundColor = "", n.style.backgroundSize = "", n.style.backgroundRepeat = "", n.style.backgroundPosition = "", n.style.backgroundImage = "", n.style.opacity = "", n.innerHTML = "", a.background && (/^(http|file|\/\/)/gi.test(a.background) || /\.(svg|png|jpg|jpeg|gif|bmp)([?#\s]|$)/gi.test(a.background) ? e.setAttribute("data-background-image", a.background) : t.style.background = a.background), (a.background || a.backgroundColor || a.backgroundImage || a.backgroundVideo || a.backgroundIframe) && t.setAttribute("data-background-hash", a.background + a.backgroundSize + a.backgroundImage + a.backgroundVideo + a.backgroundIframe + a.backgroundColor + a.backgroundRepeat + a.backgroundPosition + a.backgroundTransition + a.backgroundOpacity), a.backgroundSize && t.setAttribute("data-background-size", a.backgroundSize), a.backgroundColor && (t.style.backgroundColor = a.backgroundColor), a.backgroundTransition && t.setAttribute("data-background-transition", a.backgroundTransition), o && t.setAttribute("data-preload", ""), a.backgroundSize && (n.style.backgroundSize = a.backgroundSize), a.backgroundRepeat && (n.style.backgroundRepeat = a.backgroundRepeat), a.backgroundPosition && (n.style.backgroundPosition = a.backgroundPosition), a.backgroundOpacity && (n.style.opacity = a.backgroundOpacity);
                var i, a = a.backgroundColor;
                a && mc(a) || (i = window.getComputedStyle(t)) && i.backgroundColor && (a = i.backgroundColor), !a || (i = mc(a)) && 0 !== i.a && ("string" == typeof(a = a) && (a = mc(a)), (a ? (299 * a.r + 587 * a.g + 114 * a.b) / 1e3 : null) < 128 ? e.classList.add("has-dark-background") : e.classList.add("has-light-background"))
            }
        }, {
            key: "update",
            value: function() {
                var e, t, n = this,
                    a = 0 < arguments.length && void 0 !== arguments[0] && arguments[0],
                    o = this.Reveal.getCurrentSlide(),
                    i = this.Reveal.getIndices(),
                    r = null,
                    s = this.Reveal.getConfig().rtl ? "future" : "past",
                    l = this.Reveal.getConfig().rtl ? "past" : "future";
                Array.from(this.element.childNodes).forEach(function(e, n) {
                    e.classList.remove("past", "present", "future"), n < i.h ? e.classList.add(s) : n > i.h ? e.classList.add(l) : (e.classList.add("present"), r = e), !a && n !== i.h || nc(e, ".slide-background").forEach(function(e, t) {
                        e.classList.remove("past", "present", "future"), t < i.v ? e.classList.add("past") : t > i.v ? e.classList.add("future") : (e.classList.add("present"), n === i.h && (r = e))
                    })
                }), this.previousBackground && this.Reveal.slideContent.stopEmbeddedContent(this.previousBackground, {
                    unloadIframes: !this.Reveal.slideContent.shouldPreload(this.previousBackground)
                }), r && (this.Reveal.slideContent.startEmbeddedContent(r), (e = r.querySelector(".slide-background-content")) && (t = e.style.backgroundImage || "", /\.gif/i.test(t) && (e.style.backgroundImage = "", window.getComputedStyle(e).opacity, e.style.backgroundImage = t)), e = this.previousBackground ? this.previousBackground.getAttribute("data-background-hash") : null, (t = r.getAttribute("data-background-hash")) && t === e && r !== this.previousBackground && this.element.classList.add("no-transition"), this.previousBackground = r), o && ["has-light-background", "has-dark-background"].forEach(function(e) {
                    o.classList.contains(e) ? n.Reveal.getRevealElement().classList.add(e) : n.Reveal.getRevealElement().classList.remove(e)
                }, this), setTimeout(function() {
                    n.element.classList.remove("no-transition")
                }, 1)
            }
        }, {
            key: "updateParallax",
            value: function() {
                var e, t, n, a, o, i = this.Reveal.getIndices();
                this.Reveal.getConfig().parallaxBackgroundImage && (o = this.Reveal.getHorizontalSlides(), a = this.Reveal.getVerticalSlides(), 1 === (n = this.element.style.backgroundSize.split(" ")).length ? e = t = parseInt(n[0], 10) : (e = parseInt(n[0], 10), t = parseInt(n[1], 10)), n = this.element.offsetWidth, o = o.length, n = ("number" == typeof this.Reveal.getConfig().parallaxBackgroundHorizontal ? this.Reveal.getConfig().parallaxBackgroundHorizontal : 1 < o ? (e - n) / (o - 1) : 0) * i.h * -1, o = this.element.offsetHeight, a = a.length, o = "number" == typeof this.Reveal.getConfig().parallaxBackgroundVertical ? this.Reveal.getConfig().parallaxBackgroundVertical : (t - o) / (a - 1), i = 0 < a ? o * i.v : 0, this.element.style.backgroundPosition = n + "px " + -i + "px")
            }
        }]), wc),
        bc = h,
        Cc = zt;

    function wc(e) {
        Yn(this, wc), this.Reveal = e
    }

    function kc(e) {
        Yn(this, kc), this.Reveal = e
    }

    function Sc(e) {
        Yn(this, Sc), this.Reveal = e, this.startEmbeddedIframe = this.startEmbeddedIframe.bind(this)
    }
    yt({
        target: "Object",
        stat: !0,
        forced: e(function() {
            Cc(1)
        })
    }, {
        keys: function(e) {
            return Cc(bc(e))
        }
    });
    var Tc = ne.filter;
    yt({
        target: "Array",
        proto: !0,
        forced: !Oe("filter")
    }, {
        filter: function(e) {
            return Tc(this, e, 1 < arguments.length ? arguments[1] : void 0)
        }
    });
    var ne = yt,
        Ac = m,
        xc = rn,
        Ec = ze,
        qc = He,
        Ic = p,
        Rc = Re,
        Re = re,
        Oe = Oe("slice"),
        Pc = Re("species"),
        Oc = [].slice,
        $c = Math.max;
    ne({
        target: "Array",
        proto: !0,
        forced: !Oe
    }, {
        slice: function(e, t) {
            var n, a, o, i = Ic(this),
                r = qc(i.length),
                s = Ec(e, r),
                l = Ec(void 0 === t ? r : t, r);
            if (xc(i) && (("function" == typeof(n = i.constructor) && (n === Array || xc(n.prototype)) || Ac(n) && null === (n = n[Pc])) && (n = void 0), n === Array || void 0 === n)) return Oc.call(i, s, l);
            for (a = new(void 0 === n ? Array : n)($c(l - s, 0)), o = 0; s < l; s++, o++) s in i && Rc(a, o, i[s]);
            return a.length = o, a
        }
    });
    var Nc = 0,
        jc = (Kn(td, [{
            key: "run",
            value: function(e, t) {
                var a = this;
                this.reset();
                var o, i, n = this.Reveal.getSlides(),
                    r = n.indexOf(t),
                    n = n.indexOf(e);
                e.hasAttribute("data-auto-animate") && t.hasAttribute("data-auto-animate") && e.getAttribute("data-auto-animate-id") === t.getAttribute("data-auto-animate-id") && !(n < r ? t : e).hasAttribute("data-auto-animate-restart") && (this.autoAnimateStyleSheet = this.autoAnimateStyleSheet || lc(), o = this.getAutoAnimateOptions(t), e.dataset.autoAnimate = "pending", t.dataset.autoAnimate = "pending", o.slideDirection = n < r ? "forward" : "backward", i = this.getAutoAnimatableElements(e, t).map(function(e) {
                    return a.autoAnimateElements(e.from, e.to, e.options || {}, o, Nc++)
                }), "false" !== t.dataset.autoAnimateUnmatched && !0 === this.Reveal.getConfig().autoAnimateUnmatched && (n = .8 * o.duration, r = .2 * o.duration, this.getUnmatchedAutoAnimateElements(t).forEach(function(e) {
                    var t = a.getAutoAnimateOptions(e, o),
                        n = "unmatched";
                    t.duration === o.duration && t.delay === o.delay || (n = "unmatched-" + Nc++, i.push('[data-auto-animate="running"] [data-auto-animate-target="'.concat(n, '"] { transition: opacity ').concat(t.duration, "s ease ").concat(t.delay, "s; }"))), e.dataset.autoAnimateTarget = n
                }, this), i.push('[data-auto-animate="running"] [data-auto-animate-target="unmatched"] { transition: opacity '.concat(n, "s ease ").concat(r, "s; }"))), this.autoAnimateStyleSheet.innerHTML = i.join(""), requestAnimationFrame(function() {
                    a.autoAnimateStyleSheet && (getComputedStyle(a.autoAnimateStyleSheet).fontWeight, t.dataset.autoAnimate = "running")
                }), this.Reveal.dispatchEvent({
                    type: "autoanimate",
                    data: {
                        fromSlide: e,
                        toSlide: t,
                        sheet: this.autoAnimateStyleSheet
                    }
                }))
            }
        }, {
            key: "reset",
            value: function() {
                nc(this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=""])').forEach(function(e) {
                    e.dataset.autoAnimate = ""
                }), nc(this.Reveal.getRevealElement(), "[data-auto-animate-target]").forEach(function(e) {
                    delete e.dataset.autoAnimateTarget
                }), this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode && (this.autoAnimateStyleSheet.parentNode.removeChild(this.autoAnimateStyleSheet), this.autoAnimateStyleSheet = null)
            }
        }, {
            key: "autoAnimateElements",
            value: function(e, t, n, a, o) {
                e.dataset.autoAnimateTarget = "", t.dataset.autoAnimateTarget = o;
                var i = this.getAutoAnimateOptions(t, a);
                void 0 !== n.delay && (i.delay = n.delay), void 0 !== n.duration && (i.duration = n.duration), void 0 !== n.easing && (i.easing = n.easing);
                var r, s = this.getAutoAnimatableProperties("from", e, n),
                    l = this.getAutoAnimatableProperties("to", t, n);
                for (r in t.classList.contains("fragment") && (delete l.styles.opacity, e.classList.contains("fragment") && (e.className.match(Ul) || [""])[0] === (t.className.match(Ul) || [""])[0] && "forward" === a.slideDirection && t.classList.add("visible", "disabled")), !1 === n.translate && !1 === n.scale || (t = this.Reveal.getScale(), (u = {
                        x: (s.x - l.x) / t,
                        y: (s.y - l.y) / t,
                        scaleX: s.width / l.width,
                        scaleY: s.height / l.height
                    }).x = Math.round(1e3 * u.x) / 1e3, u.y = Math.round(1e3 * u.y) / 1e3, u.scaleX = Math.round(1e3 * u.scaleX) / 1e3, u.scaleX = Math.round(1e3 * u.scaleX) / 1e3, t = !1 !== n.translate && (0 !== u.x || 0 !== u.y), n = !1 !== n.scale && (0 !== u.scaleX || 0 !== u.scaleY), (t || n) && (p = [], t && p.push("translate(".concat(u.x, "px, ").concat(u.y, "px)")), n && p.push("scale(".concat(u.scaleX, ", ").concat(u.scaleY, ")")), s.styles.transform = p.join(" "), s.styles["transform-origin"] = "top left", l.styles.transform = "none")), l.styles) {
                    var c = l.styles[r],
                        d = s.styles[r];
                    c === d ? delete l.styles[r] : (!0 === c.explicitValue && (l.styles[r] = c.value), !0 === d.explicitValue && (s.styles[r] = d.value))
                }
                var u = "",
                    p = Object.keys(l.styles);
                return 0 < p.length && (s.styles.transition = "none", l.styles.transition = "all ".concat(i.duration, "s ").concat(i.easing, " ").concat(i.delay, "s"), l.styles["transition-property"] = p.join(", "), l.styles["will-change"] = p.join(", "), u = '[data-auto-animate-target="' + o + '"] {' + Object.keys(s.styles).map(function(e) {
                    return e + ": " + s.styles[e] + " !important;"
                }).join("") + '}[data-auto-animate="running"] [data-auto-animate-target="' + o + '"] {' + Object.keys(l.styles).map(function(e) {
                    return e + ": " + l.styles[e] + " !important;"
                }).join("") + "}"), u
            }
        }, {
            key: "getAutoAnimateOptions",
            value: function(e, t) {
                var n, a = {
                        easing: this.Reveal.getConfig().autoAnimateEasing,
                        duration: this.Reveal.getConfig().autoAnimateDuration,
                        delay: 0
                    },
                    a = tc(a, t);
                return e.parentNode && (n = sc(e.parentNode, "[data-auto-animate-target]")) && (a = this.getAutoAnimateOptions(n, a)), e.dataset.autoAnimateEasing && (a.easing = e.dataset.autoAnimateEasing), e.dataset.autoAnimateDuration && (a.duration = parseFloat(e.dataset.autoAnimateDuration)), e.dataset.autoAnimateDelay && (a.delay = parseFloat(e.dataset.autoAnimateDelay)), a
            }
        }, {
            key: "getAutoAnimatableProperties",
            value: function(n, e, t) {
                var a, o = this.Reveal.getConfig(),
                    i = {
                        styles: []
                    };
                !1 === t.translate && !1 === t.scale || (a = "function" == typeof t.measure ? t.measure(e) : o.center ? e.getBoundingClientRect() : (a = this.Reveal.getScale(), {
                    x: e.offsetLeft * a,
                    y: e.offsetTop * a,
                    width: e.offsetWidth * a,
                    height: e.offsetHeight * a
                }), i.x = a.x, i.y = a.y, i.width = a.width, i.height = a.height);
                var r = getComputedStyle(e);
                return (t.styles || o.autoAnimateStyles).forEach(function(e) {
                    var t;
                    "string" == typeof e && (e = {
                        property: e
                    }), "" !== (t = void 0 !== e.from && "from" === n ? {
                        value: e.from,
                        explicitValue: !0
                    } : void 0 !== e.to && "to" === n ? {
                        value: e.to,
                        explicitValue: !0
                    } : r[e.property]) && (i.styles[e.property] = t)
                }), i
            }
        }, {
            key: "getAutoAnimatableElements",
            value: function(e, t) {
                var t = ("function" == typeof this.Reveal.getConfig().autoAnimateMatcher ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs).call(this, e, t),
                    n = [];
                return t.filter(function(e, t) {
                    if (-1 === n.indexOf(e.to)) return n.push(e.to), !0
                })
            }
        }, {
            key: "getAutoAnimatePairs",
            value: function(e, t) {
                var n = this,
                    a = [],
                    o = "h1, h2, h3, h4, h5, h6, p, li";
                return this.findAutoAnimateMatches(a, e, t, "[data-id]", function(e) {
                    return e.nodeName + ":::" + e.getAttribute("data-id")
                }), this.findAutoAnimateMatches(a, e, t, o, function(e) {
                    return e.nodeName + ":::" + e.innerText
                }), this.findAutoAnimateMatches(a, e, t, "img, video, iframe", function(e) {
                    return e.nodeName + ":::" + (e.getAttribute("src") || e.getAttribute("data-src"))
                }), this.findAutoAnimateMatches(a, e, t, "pre", function(e) {
                    return e.nodeName + ":::" + e.innerText
                }), a.forEach(function(e) {
                    rc(e.from, o) ? e.options = {
                        scale: !1
                    } : rc(e.from, "pre") && (e.options = {
                        scale: !1,
                        styles: ["width", "height"]
                    }, n.findAutoAnimateMatches(a, e.from, e.to, ".hljs .hljs-ln-code", function(e) {
                        return e.textContent
                    }, {
                        scale: !1,
                        styles: [],
                        measure: n.getLocalBoundingBox.bind(n)
                    }), n.findAutoAnimateMatches(a, e.from, e.to, ".hljs .hljs-ln-line[data-line-number]", function(e) {
                        return e.getAttribute("data-line-number")
                    }, {
                        scale: !1,
                        styles: ["width"],
                        measure: n.getLocalBoundingBox.bind(n)
                    }))
                }, this), a
            }
        }, {
            key: "getLocalBoundingBox",
            value: function(e) {
                var t = this.Reveal.getScale();
                return {
                    x: Math.round(e.offsetLeft * t * 100) / 100,
                    y: Math.round(e.offsetTop * t * 100) / 100,
                    width: Math.round(e.offsetWidth * t * 100) / 100,
                    height: Math.round(e.offsetHeight * t * 100) / 100
                }
            }
        }, {
            key: "findAutoAnimateMatches",
            value: function(r, e, t, n, s, l) {
                var c = {},
                    d = {};
                [].slice.call(e.querySelectorAll(n)).forEach(function(e, t) {
                    var n = s(e);
                    "string" == typeof n && n.length && (c[n] = c[n] || [], c[n].push(e))
                }), [].slice.call(t.querySelectorAll(n)).forEach(function(e, t) {
                    var n, a, o, i = s(e);
                    d[i] = d[i] || [], d[i].push(e), c[i] && (a = d[i].length - 1, o = c[i].length - 1, c[i][a] ? (n = c[i][a], c[i][a] = null) : c[i][o] && (n = c[i][o], c[i][o] = null)), n && r.push({
                        from: n,
                        to: e,
                        options: l
                    })
                })
            }
        }, {
            key: "getUnmatchedAutoAnimateElements",
            value: function(e) {
                var a = this;
                return [].slice.call(e.children).reduce(function(e, t) {
                    var n = t.querySelector("[data-auto-animate-target]");
                    return t.hasAttribute("data-auto-animate-target") || n || e.push(t), t.querySelector("[data-auto-animate-target]") && (e = e.concat(a.getUnmatchedAutoAnimateElements(t))), e
                }, [])
            }
        }]), td),
        Dc = (Kn(ed, [{
            key: "configure",
            value: function(e, t) {
                !1 === e.fragments ? this.disable() : !1 === t.fragments && this.enable()
            }
        }, {
            key: "disable",
            value: function() {
                nc(this.Reveal.getSlidesElement(), ".fragment").forEach(function(e) {
                    e.classList.add("visible"), e.classList.remove("current-fragment")
                })
            }
        }, {
            key: "enable",
            value: function() {
                nc(this.Reveal.getSlidesElement(), ".fragment").forEach(function(e) {
                    e.classList.remove("visible"), e.classList.remove("current-fragment")
                })
            }
        }, {
            key: "availableRoutes",
            value: function() {
                var e = this.Reveal.getCurrentSlide();
                if (e && this.Reveal.getConfig().fragments) {
                    var t = e.querySelectorAll(".fragment:not(.disabled)"),
                        e = e.querySelectorAll(".fragment:not(.disabled):not(.visible)");
                    return {
                        prev: 0 < t.length - e.length,
                        next: !!e.length
                    }
                }
                return {
                    prev: !1,
                    next: !1
                }
            }
        }, {
            key: "sort",
            value: function(e) {
                var t = 1 < arguments.length && void 0 !== arguments[1] && arguments[1];
                e = Array.from(e);
                var n = [],
                    a = [],
                    o = [];
                e.forEach(function(e) {
                    var t;
                    e.hasAttribute("data-fragment-index") ? (t = parseInt(e.getAttribute("data-fragment-index"), 10), n[t] || (n[t] = []), n[t].push(e)) : a.push([e])
                }), n = n.concat(a);
                var i = 0;
                return n.forEach(function(e) {
                    e.forEach(function(e) {
                        o.push(e), e.setAttribute("data-fragment-index", i)
                    }), i++
                }), !0 === t ? n : o
            }
        }, {
            key: "sortAll",
            value: function() {
                var n = this;
                this.Reveal.getHorizontalSlides().forEach(function(e) {
                    var t = nc(e, "section");
                    t.forEach(function(e, t) {
                        n.sort(e.querySelectorAll(".fragment"))
                    }, n), 0 === t.length && n.sort(e.querySelectorAll(".fragment"))
                })
            }
        }, {
            key: "update",
            value: function(a, e) {
                var o, t, i = this,
                    r = {
                        shown: [],
                        hidden: []
                    },
                    n = this.Reveal.getCurrentSlide();
                return n && this.Reveal.getConfig().fragments && (e = e || this.sort(n.querySelectorAll(".fragment"))).length && (o = 0, "number" == typeof a || (t = this.sort(n.querySelectorAll(".fragment.visible")).pop()) && (a = parseInt(t.getAttribute("data-fragment-index") || 0, 10)), Array.from(e).forEach(function(e, t) {
                    var n;
                    e.hasAttribute("data-fragment-index") && (t = parseInt(e.getAttribute("data-fragment-index"), 10)), o = Math.max(o, t), t <= a ? (n = e.classList.contains("visible"), e.classList.add("visible"), e.classList.remove("current-fragment"), t === a && (i.Reveal.announceStatus(i.Reveal.getStatusText(e)), e.classList.add("current-fragment"), i.Reveal.slideContent.startEmbeddedContent(e)), n || (r.shown.push(e), i.Reveal.dispatchEvent({
                        target: e,
                        type: "visible",
                        bubbles: !1
                    }))) : (n = e.classList.contains("visible"), e.classList.remove("visible"), e.classList.remove("current-fragment"), n && (i.Reveal.slideContent.stopEmbeddedContent(e), r.hidden.push(e), i.Reveal.dispatchEvent({
                        target: e,
                        type: "hidden",
                        bubbles: !1
                    })))
                }), a = "number" == typeof a ? a : -1, a = Math.max(Math.min(a, o), -1), n.setAttribute("data-fragment", a)), r
            }
        }, {
            key: "sync",
            value: function() {
                var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : this.Reveal.getCurrentSlide();
                return this.sort(e.querySelectorAll(".fragment"))
            }
        }, {
            key: "goto",
            value: function(e) {
                var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0,
                    n = this.Reveal.getCurrentSlide();
                if (n && this.Reveal.getConfig().fragments) {
                    var a = this.sort(n.querySelectorAll(".fragment:not(.disabled)"));
                    if (a.length) {
                        "number" != typeof e && (e = (n = this.sort(n.querySelectorAll(".fragment:not(.disabled).visible")).pop()) ? parseInt(n.getAttribute("data-fragment-index") || 0, 10) : -1), e += t;
                        a = this.update(e, a);
                        return a.hidden.length && this.Reveal.dispatchEvent({
                            type: "fragmenthidden",
                            data: {
                                fragment: a.hidden[0],
                                fragments: a.hidden
                            }
                        }), a.shown.length && this.Reveal.dispatchEvent({
                            type: "fragmentshown",
                            data: {
                                fragment: a.shown[0],
                                fragments: a.shown
                            }
                        }), this.Reveal.controls.update(), this.Reveal.progress.update(), this.Reveal.getConfig().fragmentInURL && this.Reveal.location.writeURL(), !(!a.shown.length && !a.hidden.length)
                    }
                }
                return !1
            }
        }, {
            key: "next",
            value: function() {
                return this.goto(null, 1)
            }
        }, {
            key: "prev",
            value: function() {
                return this.goto(null, -1)
            }
        }]), ed),
        Uc = (Kn(Zc, [{
            key: "activate",
            value: function() {
                var e, t = this;
                this.Reveal.getConfig().overview && !this.isActive() && (this.active = !0, this.Reveal.getRevealElement().classList.add("overview"), this.Reveal.cancelAutoSlide(), this.Reveal.getSlidesElement().appendChild(this.Reveal.getBackgroundsElement()), nc(this.Reveal.getRevealElement(), $l).forEach(function(e) {
                    e.classList.contains("stack") || e.addEventListener("click", t.onSlideClicked, !0)
                }), e = this.Reveal.getComputedSlideSize(), this.overviewSlideWidth = e.width + 70, this.overviewSlideHeight = e.height + 70, this.Reveal.getConfig().rtl && (this.overviewSlideWidth = -this.overviewSlideWidth), this.Reveal.updateSlidesVisibility(), this.layout(), this.update(), this.Reveal.layout(), e = this.Reveal.getIndices(), this.Reveal.dispatchEvent({
                    type: "overviewshown",
                    data: {
                        indexh: e.h,
                        indexv: e.v,
                        currentSlide: this.Reveal.getCurrentSlide()
                    }
                }))
            }
        }, {
            key: "layout",
            value: function() {
                var a = this;
                this.Reveal.getHorizontalSlides().forEach(function(e, n) {
                    e.setAttribute("data-index-h", n), ic(e, "translate3d(" + n * a.overviewSlideWidth + "px, 0, 0)"), e.classList.contains("stack") && nc(e, "section").forEach(function(e, t) {
                        e.setAttribute("data-index-h", n), e.setAttribute("data-index-v", t), ic(e, "translate3d(0, " + t * a.overviewSlideHeight + "px, 0)")
                    })
                }), Array.from(this.Reveal.getBackgroundsElement().childNodes).forEach(function(e, t) {
                    ic(e, "translate3d(" + t * a.overviewSlideWidth + "px, 0, 0)"), nc(e, ".slide-background").forEach(function(e, t) {
                        ic(e, "translate3d(0, " + t * a.overviewSlideHeight + "px, 0)")
                    })
                })
            }
        }, {
            key: "update",
            value: function() {
                var e = Math.min(window.innerWidth, window.innerHeight),
                    t = Math.max(e / 5, 150) / e,
                    e = this.Reveal.getIndices();
                this.Reveal.transformSlides({
                    overview: ["scale(" + t + ")", "translateX(" + -e.h * this.overviewSlideWidth + "px)", "translateY(" + -e.v * this.overviewSlideHeight + "px)"].join(" ")
                })
            }
        }, {
            key: "deactivate",
            value: function() {
                var e, t = this;
                this.Reveal.getConfig().overview && (this.active = !1, this.Reveal.getRevealElement().classList.remove("overview"), this.Reveal.getRevealElement().classList.add("overview-deactivating"), setTimeout(function() {
                    t.Reveal.getRevealElement().classList.remove("overview-deactivating")
                }, 1), this.Reveal.getRevealElement().appendChild(this.Reveal.getBackgroundsElement()), nc(this.Reveal.getRevealElement(), $l).forEach(function(e) {
                    ic(e, ""), e.removeEventListener("click", t.onSlideClicked, !0)
                }), nc(this.Reveal.getBackgroundsElement(), ".slide-background").forEach(function(e) {
                    ic(e, "")
                }), this.Reveal.transformSlides({
                    overview: ""
                }), e = this.Reveal.getIndices(), this.Reveal.slide(e.h, e.v), this.Reveal.layout(), this.Reveal.cueAutoSlide(), this.Reveal.dispatchEvent({
                    type: "overviewhidden",
                    data: {
                        indexh: e.h,
                        indexv: e.v,
                        currentSlide: this.Reveal.getCurrentSlide()
                    }
                }))
            }
        }, {
            key: "toggle",
            value: function(e) {
                "boolean" == typeof e ? e ? this.activate() : this.deactivate() : this.isActive() ? this.deactivate() : this.activate()
            }
        }, {
            key: "isActive",
            value: function() {
                return this.active
            }
        }, {
            key: "onSlideClicked",
            value: function(e) {
                if (this.isActive()) {
                    e.preventDefault();
                    for (var t, n = e.target; n && !n.nodeName.match(/section/gi);) n = n.parentNode;
                    n && !n.classList.contains("disabled") && (this.deactivate(), n.nodeName.match(/section/gi)) && (t = parseInt(n.getAttribute("data-index-h"), 10), e = parseInt(n.getAttribute("data-index-v"), 10), this.Reveal.slide(t, e))
                }
            }
        }]), Zc),
        Lc = (Kn(Xc, [{
            key: "configure",
            value: function(e, t) {
                "linear" === e.navigationMode ? (this.shortcuts["&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J"] = "Next slide", this.shortcuts["&#8592;  ,  &#8593;  ,  P  ,  H  ,  K"] = "Previous slide") : (this.shortcuts["N  ,  SPACE"] = "Next slide", this.shortcuts.P = "Previous slide", this.shortcuts["&#8592;  ,  H"] = "Navigate left", this.shortcuts["&#8594;  ,  L"] = "Navigate right", this.shortcuts["&#8593;  ,  K"] = "Navigate up", this.shortcuts["&#8595;  ,  J"] = "Navigate down"), this.shortcuts["Home  ,  Shift &#8592;"] = "First slide", this.shortcuts["End  ,  Shift &#8594;"] = "Last slide", this.shortcuts["B  ,  ."] = "Pause", this.shortcuts.F = "Fullscreen", this.shortcuts["ESC, O"] = "Slide overview"
            }
        }, {
            key: "bind",
            value: function() {
                document.addEventListener("keydown", this.onDocumentKeyDown, !1), document.addEventListener("keypress", this.onDocumentKeyPress, !1)
            }
        }, {
            key: "unbind",
            value: function() {
                document.removeEventListener("keydown", this.onDocumentKeyDown, !1), document.removeEventListener("keypress", this.onDocumentKeyPress, !1)
            }
        }, {
            key: "addKeyBinding",
            value: function(e, t) {
                "object" === zn(e) && e.keyCode ? this.bindings[e.keyCode] = {
                    callback: t,
                    key: e.key,
                    description: e.description
                } : this.bindings[e] = {
                    callback: t,
                    key: null,
                    description: null
                }
            }
        }, {
            key: "removeKeyBinding",
            value: function(e) {
                delete this.bindings[e]
            }
        }, {
            key: "triggerKey",
            value: function(e) {
                this.onDocumentKeyDown({
                    keyCode: e
                })
            }
        }, {
            key: "registerKeyboardShortcut",
            value: function(e, t) {
                this.shortcuts[e] = t
            }
        }, {
            key: "getShortcuts",
            value: function() {
                return this.shortcuts
            }
        }, {
            key: "getBindings",
            value: function() {
                return this.bindings
            }
        }, {
            key: "onDocumentKeyPress",
            value: function(e) {
                e.shiftKey && 63 === e.charCode && this.Reveal.toggleHelp()
            }
        }, {
            key: "onDocumentKeyDown",
            value: function(e) {
                var t = this.Reveal.getConfig();
                if ("function" == typeof t.keyboardCondition && !1 === t.keyboardCondition(e)) return !0;
                if ("focused" === t.keyboardCondition && !this.Reveal.isFocused()) return !0;
                var n = e.keyCode,
                    a = !this.Reveal.isAutoSliding();
                this.Reveal.onUserInput(e);
                var o = document.activeElement && !0 === document.activeElement.isContentEditable,
                    i = document.activeElement && document.activeElement.tagName && /input|textarea/i.test(document.activeElement.tagName),
                    r = document.activeElement && document.activeElement.className && /speaker-notes/i.test(document.activeElement.className),
                    s = e.shiftKey && 32 === e.keyCode,
                    l = e.shiftKey && 37 === n,
                    c = e.shiftKey && 39 === n,
                    s = !s && !l && !c && (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey);
                if (!(o || i || r || s)) {
                    var d, u = [66, 86, 190, 191];
                    if ("object" === zn(t.keyboard))
                        for (d in t.keyboard) "togglePause" === t.keyboard[d] && u.push(parseInt(d, 10));
                    if (this.Reveal.isPaused() && -1 === u.indexOf(n)) return !1;
                    var p, m, s = "linear" === t.navigationMode || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides(),
                        g = !1;
                    if ("object" === zn(t.keyboard))
                        for (d in t.keyboard) parseInt(d, 10) === n && ("function" == typeof(p = t.keyboard[d]) ? p.apply(null, [e]) : "string" == typeof p && "function" == typeof this.Reveal[p] && this.Reveal[p].call(), g = !0);
                    if (!1 === g)
                        for (d in this.bindings) parseInt(d, 10) === n && ("function" == typeof(m = this.bindings[d].callback) ? m.apply(null, [e]) : "string" == typeof m && "function" == typeof this.Reveal[m] && this.Reveal[m].call(), g = !0);
                    !1 === g && (g = !0, 80 === n || 33 === n ? this.Reveal.prev() : 78 === n || 34 === n ? this.Reveal.next() : 72 === n || 37 === n ? l ? this.Reveal.slide(0) : !this.Reveal.overview.isActive() && s ? this.Reveal.prev() : this.Reveal.left() : 76 === n || 39 === n ? c ? this.Reveal.slide(Number.MAX_VALUE) : !this.Reveal.overview.isActive() && s ? this.Reveal.next() : this.Reveal.right() : 75 === n || 38 === n ? !this.Reveal.overview.isActive() && s ? this.Reveal.prev() : this.Reveal.up() : 74 === n || 40 === n ? !this.Reveal.overview.isActive() && s ? this.Reveal.next() : this.Reveal.down() : 36 === n ? this.Reveal.slide(0) : 35 === n ? this.Reveal.slide(Number.MAX_VALUE) : 32 === n ? (this.Reveal.overview.isActive() && this.Reveal.overview.deactivate(), e.shiftKey ? this.Reveal.prev() : this.Reveal.next()) : 58 === n || 59 === n || 66 === n || 86 === n || 190 === n || 191 === n ? this.Reveal.togglePause() : 70 === n ? (s = (c = (t.embedded ? this.Reveal.getViewportElement() : document.documentElement) || document.documentElement).requestFullscreen || c.webkitRequestFullscreen || c.webkitRequestFullScreen || c.mozRequestFullScreen || c.msRequestFullscreen) && s.apply(c) : 65 === n ? t.autoSlideStoppable && this.Reveal.toggleAutoSlide(a) : g = !1), g ? e.preventDefault && e.preventDefault() : 27 !== n && 79 !== n || (!1 === this.Reveal.closeOverlay() && this.Reveal.overview.toggle(), e.preventDefault && e.preventDefault()), this.Reveal.cueAutoSlide()
                }
            }
        }]), Xc),
        Mc = (Kn(Qc, [{
            key: "bind",
            value: function() {
                window.addEventListener("hashchange", this.onWindowHashChange, !1)
            }
        }, {
            key: "unbind",
            value: function() {
                window.removeEventListener("hashchange", this.onWindowHashChange, !1)
            }
        }, {
            key: "readURL",
            value: function() {
                var e, t = this.Reveal.getConfig(),
                    n = this.Reveal.getIndices(),
                    a = this.Reveal.getCurrentSlide(),
                    o = window.location.hash,
                    i = o.slice(2).split("/"),
                    r = o.replace(/#\/?/gi, "");
                if (!/^[0-9]*$/.test(i[0]) && r.length) {
                    /\/[-\d]+$/g.test(r) && (c = parseInt(r.split("/").pop(), 10), c = isNaN(c) ? void 0 : c, r = r.split("/").shift());
                    try {
                        e = document.getElementById(decodeURIComponent(r))
                    } catch (t) {}
                    a = !!a && a.getAttribute("id") === r;
                    e ? a && void 0 === c || (l = this.Reveal.getIndices(e), this.Reveal.slide(l.h, l.v, c)) : this.Reveal.slide(n.h || 0, n.v || 0)
                } else {
                    var s, l = t.hashOneBasedIndex ? 1 : 0,
                        c = parseInt(i[0], 10) - l || 0,
                        l = parseInt(i[1], 10) - l || 0;
                    t.fragmentInURL && (s = parseInt(i[2], 10), isNaN(s) && (s = void 0)), c === n.h && l === n.v && void 0 === s || this.Reveal.slide(c, l, s)
                }
            }
        }, {
            key: "writeURL",
            value: function(e) {
                var t = this.Reveal.getConfig(),
                    n = this.Reveal.getCurrentSlide();
                clearTimeout(this.writeURLTimeout), "number" == typeof e ? this.writeURLTimeout = setTimeout(this.writeURL, e) : n && (n = this.getHash(), t.history ? window.location.hash = n : t.hash && ("/" === n ? window.history.replaceState(null, null, window.location.pathname + window.location.search) : window.history.replaceState(null, null, "#" + n)))
            }
        }, {
            key: "getHash",
            value: function(e) {
                var t = "/",
                    n = e || this.Reveal.getCurrentSlide(),
                    n = (n = n ? n.getAttribute("id") : null) && encodeURIComponent(n),
                    e = this.Reveal.getIndices(e);
                return this.Reveal.getConfig().fragmentInURL || (e.f = void 0), "string" == typeof n && n.length ? t = "/" + n : (n = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0, (0 < e.h || 0 < e.v || 0 <= e.f) && (t += e.h + n), (0 < e.v || 0 <= e.f) && (t += "/" + (e.v + n))), 0 <= e.f && (t += "/" + e.f), t
            }
        }, {
            key: "onWindowHashChange",
            value: function(e) {
                this.readURL()
            }
        }]), Qc),
        _c = (Kn(Wc, [{
            key: "render",
            value: function() {
                var e = this.Reveal.getConfig().rtl,
                    t = this.Reveal.getRevealElement();
                this.element = document.createElement("aside"), this.element.className = "controls", this.element.innerHTML = '<button class="navigate-left" aria-label="'.concat(e ? "next slide" : "previous slide", '"><div class="controls-arrow"></div></button>\n\t\t\t<button class="navigate-right" aria-label="').concat(e ? "previous slide" : "next slide", '"><div class="controls-arrow"></div></button>\n\t\t\t<button class="navigate-up" aria-label="above slide"><div class="controls-arrow"></div></button>\n\t\t\t<button class="navigate-down" aria-label="below slide"><div class="controls-arrow"></div></button>'), this.Reveal.getRevealElement().appendChild(this.element), this.controlsLeft = nc(t, ".navigate-left"), this.controlsRight = nc(t, ".navigate-right"), this.controlsUp = nc(t, ".navigate-up"), this.controlsDown = nc(t, ".navigate-down"), this.controlsPrev = nc(t, ".navigate-prev"), this.controlsNext = nc(t, ".navigate-next"), this.controlsRightArrow = this.element.querySelector(".navigate-right"), this.controlsLeftArrow = this.element.querySelector(".navigate-left"), this.controlsDownArrow = this.element.querySelector(".navigate-down")
            }
        }, {
            key: "configure",
            value: function(e, t) {
                this.element.style.display = e.controls ? "block" : "none", this.element.setAttribute("data-controls-layout", e.controlsLayout), this.element.setAttribute("data-controls-back-arrows", e.controlsBackArrows)
            }
        }, {
            key: "bind",
            value: function() {
                var n = this;
                (uc ? ["touchstart"] : ["touchstart", "click"]).forEach(function(t) {
                    n.controlsLeft.forEach(function(e) {
                        return e.addEventListener(t, n.onNavigateLeftClicked, !1)
                    }), n.controlsRight.forEach(function(e) {
                        return e.addEventListener(t, n.onNavigateRightClicked, !1)
                    }), n.controlsUp.forEach(function(e) {
                        return e.addEventListener(t, n.onNavigateUpClicked, !1)
                    }), n.controlsDown.forEach(function(e) {
                        return e.addEventListener(t, n.onNavigateDownClicked, !1)
                    }), n.controlsPrev.forEach(function(e) {
                        return e.addEventListener(t, n.onNavigatePrevClicked, !1)
                    }), n.controlsNext.forEach(function(e) {
                        return e.addEventListener(t, n.onNavigateNextClicked, !1)
                    })
                })
            }
        }, {
            key: "unbind",
            value: function() {
                var n = this;
                ["touchstart", "click"].forEach(function(t) {
                    n.controlsLeft.forEach(function(e) {
                        return e.removeEventListener(t, n.onNavigateLeftClicked, !1)
                    }), n.controlsRight.forEach(function(e) {
                        return e.removeEventListener(t, n.onNavigateRightClicked, !1)
                    }), n.controlsUp.forEach(function(e) {
                        return e.removeEventListener(t, n.onNavigateUpClicked, !1)
                    }), n.controlsDown.forEach(function(e) {
                        return e.removeEventListener(t, n.onNavigateDownClicked, !1)
                    }), n.controlsPrev.forEach(function(e) {
                        return e.removeEventListener(t, n.onNavigatePrevClicked, !1)
                    }), n.controlsNext.forEach(function(e) {
                        return e.removeEventListener(t, n.onNavigateNextClicked, !1)
                    })
                })
            }
        }, {
            key: "update",
            value: function() {
                var e = this.Reveal.availableRoutes();
                [].concat(Wn(this.controlsLeft), Wn(this.controlsRight), Wn(this.controlsUp), Wn(this.controlsDown), Wn(this.controlsPrev), Wn(this.controlsNext)).forEach(function(e) {
                    e.classList.remove("enabled", "fragmented"), e.setAttribute("disabled", "disabled")
                }), e.left && this.controlsLeft.forEach(function(e) {
                    e.classList.add("enabled"), e.removeAttribute("disabled")
                }), e.right && this.controlsRight.forEach(function(e) {
                    e.classList.add("enabled"), e.removeAttribute("disabled")
                }), e.up && this.controlsUp.forEach(function(e) {
                    e.classList.add("enabled"), e.removeAttribute("disabled")
                }), e.down && this.controlsDown.forEach(function(e) {
                    e.classList.add("enabled"), e.removeAttribute("disabled")
                }), (e.left || e.up) && this.controlsPrev.forEach(function(e) {
                    e.classList.add("enabled"), e.removeAttribute("disabled")
                }), (e.right || e.down) && this.controlsNext.forEach(function(e) {
                    e.classList.add("enabled"), e.removeAttribute("disabled")
                });
                var t, n = this.Reveal.getCurrentSlide();
                n && ((t = this.Reveal.fragments.availableRoutes()).prev && this.controlsPrev.forEach(function(e) {
                    e.classList.add("fragmented", "enabled"), e.removeAttribute("disabled")
                }), t.next && this.controlsNext.forEach(function(e) {
                    e.classList.add("fragmented", "enabled"), e.removeAttribute("disabled")
                }), this.Reveal.isVerticalSlide(n) ? (t.prev && this.controlsUp.forEach(function(e) {
                    e.classList.add("fragmented", "enabled"), e.removeAttribute("disabled")
                }), t.next && this.controlsDown.forEach(function(e) {
                    e.classList.add("fragmented", "enabled"), e.removeAttribute("disabled")
                })) : (t.prev && this.controlsLeft.forEach(function(e) {
                    e.classList.add("fragmented", "enabled"), e.removeAttribute("disabled")
                }), t.next && this.controlsRight.forEach(function(e) {
                    e.classList.add("fragmented", "enabled"), e.removeAttribute("disabled")
                }))), this.Reveal.getConfig().controlsTutorial && (t = this.Reveal.getIndices(), !this.Reveal.hasNavigatedVertically() && e.down ? this.controlsDownArrow.classList.add("highlight") : (this.controlsDownArrow.classList.remove("highlight"), this.Reveal.getConfig().rtl ? !this.Reveal.hasNavigatedHorizontally() && e.left && 0 === t.v ? this.controlsLeftArrow.classList.add("highlight") : this.controlsLeftArrow.classList.remove("highlight") : !this.Reveal.hasNavigatedHorizontally() && e.right && 0 === t.v ? this.controlsRightArrow.classList.add("highlight") : this.controlsRightArrow.classList.remove("highlight")))
            }
        }, {
            key: "onNavigateLeftClicked",
            value: function(e) {
                e.preventDefault(), this.Reveal.onUserInput(), "linear" === this.Reveal.getConfig().navigationMode ? this.Reveal.prev() : this.Reveal.left()
            }
        }, {
            key: "onNavigateRightClicked",
            value: function(e) {
                e.preventDefault(), this.Reveal.onUserInput(), "linear" === this.Reveal.getConfig().navigationMode ? this.Reveal.next() : this.Reveal.right()
            }
        }, {
            key: "onNavigateUpClicked",
            value: function(e) {
                e.preventDefault(), this.Reveal.onUserInput(), this.Reveal.up()
            }
        }, {
            key: "onNavigateDownClicked",
            value: function(e) {
                e.preventDefault(), this.Reveal.onUserInput(), this.Reveal.down()
            }
        }, {
            key: "onNavigatePrevClicked",
            value: function(e) {
                e.preventDefault(), this.Reveal.onUserInput(), this.Reveal.prev()
            }
        }, {
            key: "onNavigateNextClicked",
            value: function(e) {
                e.preventDefault(), this.Reveal.onUserInput(), this.Reveal.next()
            }
        }]), Wc),
        Bc = (Kn(Kc, [{
            key: "render",
            value: function() {
                this.element = document.createElement("div"), this.element.className = "progress", this.Reveal.getRevealElement().appendChild(this.element), this.bar = document.createElement("span"), this.element.appendChild(this.bar)
            }
        }, {
            key: "configure",
            value: function(e, t) {
                this.element.style.display = e.progress ? "block" : "none"
            }
        }, {
            key: "bind",
            value: function() {
                this.Reveal.getConfig().progress && this.element && this.element.addEventListener("click", this.onProgressClicked, !1)
            }
        }, {
            key: "unbind",
            value: function() {
                this.Reveal.getConfig().progress && this.element && this.element.removeEventListener("click", this.onProgressClicked, !1)
            }
        }, {
            key: "update",
            value: function() {
                var e;
                this.Reveal.getConfig().progress && this.bar && (e = this.Reveal.getProgress(), this.Reveal.getTotalSlides() < 2 && (e = 0), this.bar.style.transform = "scaleX(" + e + ")")
            }
        }, {
            key: "getMaxWidth",
            value: function() {
                return this.Reveal.getRevealElement().offsetWidth
            }
        }, {
            key: "onProgressClicked",
            value: function(e) {
                this.Reveal.onUserInput(e), e.preventDefault();
                var t = this.Reveal.getSlides(),
                    n = t.length,
                    e = Math.floor(e.clientX / this.getMaxWidth() * n);
                this.Reveal.getConfig().rtl && (e = n - e);
                e = this.Reveal.getIndices(t[e]);
                this.Reveal.slide(e.h, e.v)
            }
        }]), Kc),
        Fc = (Kn(Jc, [{
            key: "configure",
            value: function(e, t) {
                e.mouseWheel ? (document.addEventListener("DOMMouseScroll", this.onDocumentMouseScroll, !1), document.addEventListener("mousewheel", this.onDocumentMouseScroll, !1)) : (document.removeEventListener("DOMMouseScroll", this.onDocumentMouseScroll, !1), document.removeEventListener("mousewheel", this.onDocumentMouseScroll, !1)), e.hideInactiveCursor ? (document.addEventListener("mousemove", this.onDocumentCursorActive, !1), document.addEventListener("mousedown", this.onDocumentCursorActive, !1)) : (this.showCursor(), document.removeEventListener("mousemove", this.onDocumentCursorActive, !1), document.removeEventListener("mousedown", this.onDocumentCursorActive, !1))
            }
        }, {
            key: "showCursor",
            value: function() {
                this.cursorHidden && (this.cursorHidden = !1, this.Reveal.getRevealElement().style.cursor = "")
            }
        }, {
            key: "hideCursor",
            value: function() {
                !1 === this.cursorHidden && (this.cursorHidden = !0, this.Reveal.getRevealElement().style.cursor = "none")
            }
        }, {
            key: "onDocumentCursorActive",
            value: function(e) {
                this.showCursor(), clearTimeout(this.cursorInactiveTimeout), this.cursorInactiveTimeout = setTimeout(this.hideCursor.bind(this), this.Reveal.getConfig().hideCursorTime)
            }
        }, {
            key: "onDocumentMouseScroll",
            value: function(e) {
                1e3 < Date.now() - this.lastMouseWheelStep && (this.lastMouseWheelStep = Date.now(), 0 < (e = e.detail || -e.wheelDelta) ? this.Reveal.next() : e < 0 && this.Reveal.prev())
            }
        }]), Jc),
        Vc = i,
        Hc = zt,
        zc = p,
        Gc = r.f,
        r = function(s) {
            return function(e) {
                for (var t, n = zc(e), a = Hc(n), o = a.length, i = 0, r = []; i < o;) t = a[i++], Vc && !Gc.call(n, t) || r.push(s ? [t, n[t]] : n[t]);
                return r
            }
        },
        Yc = (r(!0), r(!1));

    function Jc(e) {
        Yn(this, Jc), this.Reveal = e, this.lastMouseWheelStep = 0, this.cursorHidden = !1, this.cursorInactiveTimeout = 0, this.onDocumentCursorActive = this.onDocumentCursorActive.bind(this), this.onDocumentMouseScroll = this.onDocumentMouseScroll.bind(this)
    }

    function Kc(e) {
        Yn(this, Kc), this.Reveal = e, this.onProgressClicked = this.onProgressClicked.bind(this)
    }

    function Wc(e) {
        Yn(this, Wc), this.Reveal = e, this.onNavigateLeftClicked = this.onNavigateLeftClicked.bind(this), this.onNavigateRightClicked = this.onNavigateRightClicked.bind(this), this.onNavigateUpClicked = this.onNavigateUpClicked.bind(this), this.onNavigateDownClicked = this.onNavigateDownClicked.bind(this), this.onNavigatePrevClicked = this.onNavigatePrevClicked.bind(this), this.onNavigateNextClicked = this.onNavigateNextClicked.bind(this)
    }

    function Qc(e) {
        Yn(this, Qc), this.Reveal = e, this.writeURLTimeout = 0, this.onWindowHashChange = this.onWindowHashChange.bind(this)
    }

    function Xc(e) {
        Yn(this, Xc), this.Reveal = e, this.shortcuts = {}, this.bindings = {}, this.onDocumentKeyDown = this.onDocumentKeyDown.bind(this), this.onDocumentKeyPress = this.onDocumentKeyPress.bind(this)
    }

    function Zc(e) {
        Yn(this, Zc), this.Reveal = e, this.active = !1, this.onSlideClicked = this.onSlideClicked.bind(this)
    }

    function ed(e) {
        Yn(this, ed), this.Reveal = e
    }

    function td(e) {
        Yn(this, td), this.Reveal = e
    }
    yt({
        target: "Object",
        stat: !0
    }, {
        values: function(e) {
            return Yc(e)
        }
    });

    function nd(e, t) {
        var n = document.createElement("script");
        n.type = "text/javascript", n.async = !1, n.defer = !1, n.src = e, "function" == typeof t && (n.onload = n.onreadystatechange = function(e) {
            "load" !== e.type && !/loaded|complete/.test(n.readyState) || (n.onload = n.onreadystatechange = n.onerror = null, t())
        }, n.onerror = function(e) {
            n.onload = n.onreadystatechange = n.onerror = null, t(new Error("Failed loading script: " + n.src + "\n" + e))
        }), (e = document.querySelector("head")).insertBefore(n, e.lastChild)
    }
    var ad = (Kn(od, [{
        key: "load",
        value: function(e, i) {
            var r = this;
            return this.state = "loading", e.forEach(this.registerPlugin.bind(this)), new Promise(function(t) {
                var n, a = [],
                    o = 0;
                i.forEach(function(e) {
                    e.condition && !e.condition() || (e.async ? r.asyncDependencies : a).push(e)
                }), a.length ? (o = a.length, n = function(e) {
                    e && "function" == typeof e.callback && e.callback(), 0 == --o && r.initPlugins().then(t)
                }, a.forEach(function(e) {
                    "string" == typeof e.id ? (r.registerPlugin(e), n(e)) : "string" == typeof e.src ? nd(e.src, function() {
                        return n(e)
                    }) : (console.warn("Unrecognized plugin format", e), n())
                })) : r.initPlugins().then(t)
            })
        }
    }, {
        key: "initPlugins",
        value: function() {
            var r = this;
            return new Promise(function(e) {
                var t, n, a, o = Object.values(r.registeredPlugins),
                    i = o.length;
                0 === i ? r.loadAsync().then(e) : (n = function() {
                    0 == --i ? r.loadAsync().then(e) : t()
                }, a = 0, (t = function() {
                    var e, t = o[a++];
                    "function" == typeof t.init && (e = t.init(r.Reveal)) && "function" == typeof e.then ? e.then(n) : n()
                })())
            })
        }
    }, {
        key: "loadAsync",
        value: function() {
            return this.state = "loaded", this.asyncDependencies.length && this.asyncDependencies.forEach(function(e) {
                nd(e.src, e.callback)
            }), Promise.resolve()
        }
    }, {
        key: "registerPlugin",
        value: function(e) {
            2 === arguments.length && "string" == typeof arguments[0] ? (e = arguments[1]).id = arguments[0] : "function" == typeof e && (e = e());
            var t = e.id;
            "string" != typeof t ? console.warn("Unrecognized plugin format; can't find plugin.id", e) : void 0 === this.registeredPlugins[t] ? (this.registeredPlugins[t] = e, "loaded" === this.state && "function" == typeof e.init && e.init(this.Reveal)) : console.warn('reveal.js: "' + t + '" plugin has already been registered')
        }
    }, {
        key: "hasPlugin",
        value: function(e) {
            return !!this.registeredPlugins[e]
        }
    }, {
        key: "getPlugin",
        value: function(e) {
            return this.registeredPlugins[e]
        }
    }, {
        key: "getRegisteredPlugins",
        value: function() {
            return this.registeredPlugins
        }
    }]), od);

    function od(e) {
        Yn(this, od), this.Reveal = e, this.state = "idle", this.registeredPlugins = {}, this.asyncDependencies = []
    }! function() {
        var t = function(r) {
            var l, e = Object.prototype,
                c = e.hasOwnProperty,
                t = "function" == typeof Symbol ? Symbol : {},
                a = t.iterator || "@@iterator",
                n = t.asyncIterator || "@@asyncIterator",
                o = t.toStringTag || "@@toStringTag";

            function i(e, t, n) {
                return Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }), e[t]
            }
            try {
                i({}, "")
            } catch (r) {
                i = function(e, t, n) {
                    return e[t] = n
                }
            }

            function s(e, t, n, a) {
                var o, i, r, s, t = t && t.prototype instanceof f ? t : f,
                    t = Object.create(t.prototype),
                    a = new A(a || []);
                return t._invoke = (o = e, i = n, r = a, s = u, function(e, t) {
                    if (s === m) throw new Error("Generator is already running");
                    if (s === g) {
                        if ("throw" === e) throw t;
                        return E()
                    }
                    for (r.method = e, r.arg = t;;) {
                        var n = r.delegate;
                        if (n) {
                            var a = function e(t, n) {
                                var a = t.iterator[n.method];
                                if (a === l) {
                                    if (n.delegate = null, "throw" === n.method) {
                                        if (t.iterator.return && (n.method = "return", n.arg = l, e(t, n), "throw" === n.method)) return h;
                                        n.method = "throw", n.arg = new TypeError("The iterator does not provide a 'throw' method")
                                    }
                                    return h
                                }
                                a = d(a, t.iterator, n.arg);
                                if ("throw" === a.type) return n.method = "throw", n.arg = a.arg, n.delegate = null, h;
                                var a = a.arg;
                                return a ? a.done ? (n[t.resultName] = a.value, n.next = t.nextLoc, "return" !== n.method && (n.method = "next", n.arg = l), n.delegate = null, h) : a : (n.method = "throw", n.arg = new TypeError("iterator result is not an object"), n.delegate = null, h)
                            }(n, r);
                            if (a) {
                                if (a === h) continue;
                                return a
                            }
                        }
                        if ("next" === r.method) r.sent = r._sent = r.arg;
                        else if ("throw" === r.method) {
                            if (s === u) throw s = g, r.arg;
                            r.dispatchException(r.arg)
                        } else "return" === r.method && r.abrupt("return", r.arg);
                        s = m;
                        a = d(o, i, r);
                        if ("normal" === a.type) {
                            if (s = r.done ? g : p, a.arg === h) continue;
                            return {
                                value: a.arg,
                                done: r.done
                            }
                        }
                        "throw" === a.type && (s = g, r.method = "throw", r.arg = a.arg)
                    }
                }), t
            }

            function d(e, t, n) {
                try {
                    return {
                        type: "normal",
                        arg: e.call(t, n)
                    }
                } catch (e) {
                    return {
                        type: "throw",
                        arg: e
                    }
                }
            }
            r.wrap = s;
            var u = "suspendedStart",
                p = "suspendedYield",
                m = "executing",
                g = "completed",
                h = {};

            function f() {}

            function v() {}

            function y() {}
            var b = {};
            b[a] = function() {
                return this
            };
            t = Object.getPrototypeOf, t = t && t(t(x([])));
            t && t !== e && c.call(t, a) && (b = t);
            var C = y.prototype = f.prototype = Object.create(b);

            function w(e) {
                ["next", "throw", "return"].forEach(function(t) {
                    i(e, t, function(e) {
                        return this._invoke(t, e)
                    })
                })
            }

            function k(r, s) {
                var t;
                this._invoke = function(n, a) {
                    function e() {
                        return new s(function(e, t) {
                            ! function t(e, n, a, o) {
                                e = d(r[e], r, n);
                                if ("throw" !== e.type) {
                                    var i = e.arg,
                                        n = i.value;
                                    return n && "object" == typeof n && c.call(n, "__await") ? s.resolve(n.__await).then(function(e) {
                                        t("next", e, a, o)
                                    }, function(e) {
                                        t("throw", e, a, o)
                                    }) : s.resolve(n).then(function(e) {
                                        i.value = e, a(i)
                                    }, function(e) {
                                        return t("throw", e, a, o)
                                    })
                                }
                                o(e.arg)
                            }(n, a, e, t)
                        })
                    }
                    return t = t ? t.then(e, e) : e()
                }
            }

            function S(e) {
                var t = {
                    tryLoc: e[0]
                };
                1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t)
            }

            function T(e) {
                var t = e.completion || {};
                t.type = "normal", delete t.arg, e.completion = t
            }

            function A(e) {
                this.tryEntries = [{
                    tryLoc: "root"
                }], e.forEach(S, this), this.reset(!0)
            }

            function x(t) {
                if (t) {
                    var e = t[a];
                    if (e) return e.call(t);
                    if ("function" == typeof t.next) return t;
                    if (!isNaN(t.length)) {
                        var n = -1,
                            e = function e() {
                                for (; ++n < t.length;)
                                    if (c.call(t, n)) return e.value = t[n], e.done = !1, e;
                                return e.value = l, e.done = !0, e
                            };
                        return e.next = e
                    }
                }
                return {
                    next: E
                }
            }

            function E() {
                return {
                    value: l,
                    done: !0
                }
            }
            return ((v.prototype = C.constructor = y).constructor = v).displayName = i(y, o, "GeneratorFunction"), r.isGeneratorFunction = function(e) {
                e = "function" == typeof e && e.constructor;
                return !!e && (e === v || "GeneratorFunction" === (e.displayName || e.name))
            }, r.mark = function(e) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(e, y) : (e.__proto__ = y, i(e, o, "GeneratorFunction")), e.prototype = Object.create(C), e
            }, r.awrap = function(e) {
                return {
                    __await: e
                }
            }, w(k.prototype), k.prototype[n] = function() {
                return this
            }, r.AsyncIterator = k, r.async = function(e, t, n, a, o) {
                void 0 === o && (o = Promise);
                var i = new k(s(e, t, n, a), o);
                return r.isGeneratorFunction(t) ? i : i.next().then(function(e) {
                    return e.done ? e.value : i.next()
                })
            }, w(C), i(C, o, "Generator"), C[a] = function() {
                return this
            }, C.toString = function() {
                return "[object Generator]"
            }, r.keys = function(n) {
                var e, a = [];
                for (e in n) a.push(e);
                return a.reverse(),
                    function e() {
                        for (; a.length;) {
                            var t = a.pop();
                            if (t in n) return e.value = t, e.done = !1, e
                        }
                        return e.done = !0, e
                    }
            }, r.values = x, A.prototype = {
                constructor: A,
                reset: function(e) {
                    if (this.prev = 0, this.next = 0, this.sent = this._sent = l, this.done = !1, this.delegate = null, this.method = "next", this.arg = l, this.tryEntries.forEach(T), !e)
                        for (var t in this) "t" === t.charAt(0) && c.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = l)
                },
                stop: function() {
                    this.done = !0;
                    var e = this.tryEntries[0].completion;
                    if ("throw" === e.type) throw e.arg;
                    return this.rval
                },
                dispatchException: function(n) {
                    if (this.done) throw n;
                    var a = this;

                    function e(e, t) {
                        return i.type = "throw", i.arg = n, a.next = e, t && (a.method = "next", a.arg = l), !!t
                    }
                    for (var t = this.tryEntries.length - 1; 0 <= t; --t) {
                        var o = this.tryEntries[t],
                            i = o.completion;
                        if ("root" === o.tryLoc) return e("end");
                        if (o.tryLoc <= this.prev) {
                            var r = c.call(o, "catchLoc"),
                                s = c.call(o, "finallyLoc");
                            if (r && s) {
                                if (this.prev < o.catchLoc) return e(o.catchLoc, !0);
                                if (this.prev < o.finallyLoc) return e(o.finallyLoc)
                            } else if (r) {
                                if (this.prev < o.catchLoc) return e(o.catchLoc, !0)
                            } else {
                                if (!s) throw new Error("try statement without catch or finally");
                                if (this.prev < o.finallyLoc) return e(o.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function(e, t) {
                    for (var n = this.tryEntries.length - 1; 0 <= n; --n) {
                        var a = this.tryEntries[n];
                        if (a.tryLoc <= this.prev && c.call(a, "finallyLoc") && this.prev < a.finallyLoc) {
                            var o = a;
                            break
                        }
                    }
                    o && ("break" === e || "continue" === e) && o.tryLoc <= t && t <= o.finallyLoc && (o = null);
                    var i = o ? o.completion : {};
                    return i.type = e, i.arg = t, o ? (this.method = "next", this.next = o.finallyLoc, h) : this.complete(i)
                },
                complete: function(e, t) {
                    if ("throw" === e.type) throw e.arg;
                    return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), h
                },
                finish: function(e) {
                    for (var t = this.tryEntries.length - 1; 0 <= t; --t) {
                        var n = this.tryEntries[t];
                        if (n.finallyLoc === e) return this.complete(n.completion, n.afterLoc), T(n), h
                    }
                },
                catch: function(e) {
                    for (var t = this.tryEntries.length - 1; 0 <= t; --t) {
                        var n = this.tryEntries[t];
                        if (n.tryLoc === e) {
                            var a, o = n.completion;
                            return "throw" === o.type && (a = o.arg, T(n)), a
                        }
                    }
                    throw new Error("illegal catch attempt")
                },
                delegateYield: function(e, t, n) {
                    return this.delegate = {
                        iterator: x(e),
                        resultName: t,
                        nextLoc: n
                    }, "next" === this.method && (this.arg = l), h
                }
            }, r
        }({});
        try {
            regeneratorRuntime = t
        } catch (e) {
            Function("r", "regeneratorRuntime = r")(t)
        }
    }();
    var id, rd, sd = (Kn(Cd, [{
            key: "setupPDF",
            value: (id = regeneratorRuntime.mark(function e() {
                var d, t, u, n, p, m, g, h, f, v, a, o = this;
                return regeneratorRuntime.wrap(function(e) {
                    for (;;) switch (e.prev = e.next) {
                        case 0:
                            return d = this.Reveal.getConfig(), t = nc(this.Reveal.getRevealElement(), $l), u = d.slideNumber && /all|print/i.test(d.showSlideNumber), n = this.Reveal.getComputedSlideSize(window.innerWidth, window.innerHeight), p = Math.floor(n.width * (1 + d.margin)), m = Math.floor(n.height * (1 + d.margin)), g = n.width, h = n.height, e.next = 8, new Promise(requestAnimationFrame);
                        case 8:
                            return lc("@page{size:" + p + "px " + m + "px; margin: 0px;}"), lc(".reveal section>img, .reveal section>video, .reveal section>iframe{max-width: " + g + "px; max-height:" + h + "px}"), document.documentElement.classList.add("print-pdf"), document.body.style.width = p + "px", document.body.style.height = m + "px", e.next = 15, new Promise(requestAnimationFrame);
                        case 15:
                            return this.Reveal.layoutSlideContents(g, h), t.forEach(function(e) {
                                return o.Reveal.slideContent.layout(e)
                            }), e.next = 19, new Promise(requestAnimationFrame);
                        case 19:
                            return f = t.map(function(e) {
                                return e.scrollHeight
                            }), v = [], a = t[0].parentNode, t.forEach(function(e, t) {
                                var n, a, o, i, r, s, l, c;
                                !1 === e.classList.contains("stack") && (n = (p - g) / 2, s = (m - h) / 2, a = f[t], o = Math.max(Math.ceil(a / m), 1), (1 === (o = Math.min(o, d.pdfMaxPagesPerSlide)) && d.center || e.classList.contains("center")) && (s = Math.max((m - a) / 2, 0)), i = document.createElement("div"), v.push(i), i.className = "pdf-page", i.style.height = (m + d.pdfPageHeightOffset) * o + "px", i.appendChild(e), e.style.left = n + "px", e.style.top = s + "px", e.style.width = g + "px", e.slideBackgroundElement && i.insertBefore(e.slideBackgroundElement, e), d.showNotes && (r = this.Reveal.getSlideNotes(e)) && (s = "string" == typeof d.showNotes ? d.showNotes : "inline", (e = document.createElement("div")).classList.add("speaker-notes"), e.classList.add("speaker-notes-pdf"), e.setAttribute("data-layout", s), e.innerHTML = r, "separate-page" === s ? v.push(e) : (e.style.left = "8px", e.style.bottom = "8px", e.style.width = p - 16 + "px", i.appendChild(e))), u && (t = t + 1, (c = document.createElement("div")).classList.add("slide-number"), c.classList.add("slide-number-pdf"), c.innerHTML = t, i.appendChild(c)), d.pdfSeparateFragments ? ((c = this.Reveal.fragments.sort(i.querySelectorAll(".fragment"), !0)).forEach(function(e) {
                                    l && l.forEach(function(e) {
                                        e.classList.remove("current-fragment")
                                    }), e.forEach(function(e) {
                                        e.classList.add("visible", "current-fragment")
                                    }, this);
                                    var t = i.cloneNode(!0);
                                    v.push(t), l = e
                                }, this), c.forEach(function(e) {
                                    e.forEach(function(e) {
                                        e.classList.remove("visible", "current-fragment")
                                    })
                                })) : nc(i, ".fragment:not(.fade-out)").forEach(function(e) {
                                    e.classList.add("visible")
                                }))
                            }, this), e.next = 25, new Promise(requestAnimationFrame);
                        case 25:
                            v.forEach(function(e) {
                                return a.appendChild(e)
                            }), this.Reveal.dispatchEvent({
                                type: "pdf-ready"
                            });
                        case 27:
                        case "end":
                            return e.stop()
                    }
                }, e, this)
            }), rd = function() {
                var e = this,
                    r = arguments;
                return new Promise(function(t, n) {
                    var a = id.apply(e, r);

                    function o(e) {
                        Gn(a, t, n, o, i, "next", e)
                    }

                    function i(e) {
                        Gn(a, t, n, o, i, "throw", e)
                    }
                    o(void 0)
                })
            }, function() {
                return rd.apply(this, arguments)
            })
        }, {
            key: "isPrintingPDF",
            value: function() {
                return /print-pdf/gi.test(window.location.search)
            }
        }]), Cd),
        ld = (Kn(bd, [{
            key: "bind",
            value: function() {
                var e = this.Reveal.getRevealElement();
                "onpointerdown" in window ? (e.addEventListener("pointerdown", this.onPointerDown, !1), e.addEventListener("pointermove", this.onPointerMove, !1), e.addEventListener("pointerup", this.onPointerUp, !1)) : window.navigator.msPointerEnabled ? (e.addEventListener("MSPointerDown", this.onPointerDown, !1), e.addEventListener("MSPointerMove", this.onPointerMove, !1), e.addEventListener("MSPointerUp", this.onPointerUp, !1)) : (e.addEventListener("touchstart", this.onTouchStart, !1), e.addEventListener("touchmove", this.onTouchMove, !1), e.addEventListener("touchend", this.onTouchEnd, !1))
            }
        }, {
            key: "unbind",
            value: function() {
                var e = this.Reveal.getRevealElement();
                e.removeEventListener("pointerdown", this.onPointerDown, !1), e.removeEventListener("pointermove", this.onPointerMove, !1), e.removeEventListener("pointerup", this.onPointerUp, !1), e.removeEventListener("MSPointerDown", this.onPointerDown, !1), e.removeEventListener("MSPointerMove", this.onPointerMove, !1), e.removeEventListener("MSPointerUp", this.onPointerUp, !1), e.removeEventListener("touchstart", this.onTouchStart, !1), e.removeEventListener("touchmove", this.onTouchMove, !1), e.removeEventListener("touchend", this.onTouchEnd, !1)
            }
        }, {
            key: "isSwipePrevented",
            value: function(e) {
                if (rc(e, "video, audio")) return !0;
                for (; e && "function" == typeof e.hasAttribute;) {
                    if (e.hasAttribute("data-prevent-swipe")) return !0;
                    e = e.parentNode
                }
                return !1
            }
        }, {
            key: "onTouchStart",
            value: function(e) {
                if (this.isSwipePrevented(e.target)) return !0;
                this.touchStartX = e.touches[0].clientX, this.touchStartY = e.touches[0].clientY, this.touchStartCount = e.touches.length
            }
        }, {
            key: "onTouchMove",
            value: function(e) {
                if (this.isSwipePrevented(e.target)) return !0;
                var t, n, a, o = this.Reveal.getConfig();
                this.touchCaptured ? uc && e.preventDefault() : (this.Reveal.onUserInput(e), n = e.touches[0].clientX, a = e.touches[0].clientY, 1 === e.touches.length && 2 !== this.touchStartCount && (t = this.Reveal.availableRoutes({
                    includeFragments: !0
                }), n = n - this.touchStartX, a = a - this.touchStartY, 40 < n && Math.abs(n) > Math.abs(a) ? (this.touchCaptured = !0, "linear" === o.navigationMode ? o.rtl ? this.Reveal.next() : this.Reveal.prev() : this.Reveal.left()) : n < -40 && Math.abs(n) > Math.abs(a) ? (this.touchCaptured = !0, "linear" === o.navigationMode ? o.rtl ? this.Reveal.prev() : this.Reveal.next() : this.Reveal.right()) : 40 < a && t.up ? (this.touchCaptured = !0, "linear" === o.navigationMode ? this.Reveal.prev() : this.Reveal.up()) : a < -40 && t.down && (this.touchCaptured = !0, "linear" === o.navigationMode ? this.Reveal.next() : this.Reveal.down()), o.embedded && !this.touchCaptured && !this.Reveal.isVerticalSlide() || e.preventDefault()))
            }
        }, {
            key: "onTouchEnd",
            value: function(e) {
                this.touchCaptured = !1
            }
        }, {
            key: "onPointerDown",
            value: function(e) {
                e.pointerType !== e.MSPOINTER_TYPE_TOUCH && "touch" !== e.pointerType || (e.touches = [{
                    clientX: e.clientX,
                    clientY: e.clientY
                }], this.onTouchStart(e))
            }
        }, {
            key: "onPointerMove",
            value: function(e) {
                e.pointerType !== e.MSPOINTER_TYPE_TOUCH && "touch" !== e.pointerType || (e.touches = [{
                    clientX: e.clientX,
                    clientY: e.clientY
                }], this.onTouchMove(e))
            }
        }, {
            key: "onPointerUp",
            value: function(e) {
                e.pointerType !== e.MSPOINTER_TYPE_TOUCH && "touch" !== e.pointerType || (e.touches = [{
                    clientX: e.clientX,
                    clientY: e.clientY
                }], this.onTouchEnd(e))
            }
        }]), bd),
        cd = "focus",
        dd = (Kn(yd, [{
            key: "configure",
            value: function(e, t) {
                e.embedded ? this.blur() : (this.focus(), this.unbind())
            }
        }, {
            key: "bind",
            value: function() {
                this.Reveal.getConfig().embedded && this.Reveal.getRevealElement().addEventListener("pointerdown", this.onRevealPointerDown, !1)
            }
        }, {
            key: "unbind",
            value: function() {
                this.Reveal.getRevealElement().removeEventListener("pointerdown", this.onRevealPointerDown, !1), document.removeEventListener("pointerdown", this.onDocumentPointerDown, !1)
            }
        }, {
            key: "focus",
            value: function() {
                this.state !== cd && (this.Reveal.getRevealElement().classList.add("focused"), document.addEventListener("pointerdown", this.onDocumentPointerDown, !1)), this.state = cd
            }
        }, {
            key: "blur",
            value: function() {
                "blur" !== this.state && (this.Reveal.getRevealElement().classList.remove("focused"), document.removeEventListener("pointerdown", this.onDocumentPointerDown, !1)), this.state = "blur"
            }
        }, {
            key: "isFocused",
            value: function() {
                return this.state === cd
            }
        }, {
            key: "onRevealPointerDown",
            value: function(e) {
                this.focus()
            }
        }, {
            key: "onDocumentPointerDown",
            value: function(e) {
                e = sc(e.target, ".reveal");
                e && e === this.Reveal.getRevealElement() || this.blur()
            }
        }]), yd),
        ud = (Kn(vd, [{
            key: "render",
            value: function() {
                this.element = document.createElement("div"), this.element.className = "speaker-notes", this.element.setAttribute("data-prevent-swipe", ""), this.element.setAttribute("tabindex", "0"), this.Reveal.getRevealElement().appendChild(this.element)
            }
        }, {
            key: "configure",
            value: function(e, t) {
                e.showNotes && this.element.setAttribute("data-layout", "string" == typeof e.showNotes ? e.showNotes : "inline")
            }
        }, {
            key: "update",
            value: function() {
                this.Reveal.getConfig().showNotes && this.element && this.Reveal.getCurrentSlide() && !this.Reveal.print.isPrintingPDF() && (this.element.innerHTML = this.getSlideNotes() || '<span class="notes-placeholder">No hay notas en esta diapositiva.</span>')
            }
        }, {
            key: "updateVisibility",
            value: function() {
                this.Reveal.getConfig().showNotes && this.hasNotes() && !this.Reveal.print.isPrintingPDF() ? this.Reveal.getRevealElement().classList.add("show-notes") : this.Reveal.getRevealElement().classList.remove("show-notes")
            }
        }, {
            key: "hasNotes",
            value: function() {
                return 0 < this.Reveal.getSlidesElement().querySelectorAll("[data-notes], aside.notes").length
            }
        }, {
            key: "isSpeakerNotesWindow",
            value: function() {
                return !!window.location.search.match(/receiver/gi)
            }
        }, {
            key: "getSlideNotes",
            value: function() {
                var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : this.Reveal.getCurrentSlide();
                if (e.hasAttribute("data-notes")) return e.getAttribute("data-notes");
                e = e.querySelector("aside.notes");
                return e ? e.innerHTML : null
            }
        }]), vd),
        pd = h,
        md = ze,
        gd = He,
        se = se,
        F = F,
        hd = re("unscopables"),
        fd = Array.prototype;

    function vd(e) {
        Yn(this, vd), this.Reveal = e
    }

    function yd(e) {
        Yn(this, yd), this.Reveal = e, this.onRevealPointerDown = this.onRevealPointerDown.bind(this), this.onDocumentPointerDown = this.onDocumentPointerDown.bind(this)
    }

    function bd(e) {
        Yn(this, bd), this.Reveal = e, this.touchStartX = 0, this.touchStartY = 0, this.touchStartCount = 0, this.touchCaptured = !1, this.onPointerDown = this.onPointerDown.bind(this), this.onPointerMove = this.onPointerMove.bind(this), this.onPointerUp = this.onPointerUp.bind(this), this.onTouchStart = this.onTouchStart.bind(this), this.onTouchMove = this.onTouchMove.bind(this), this.onTouchEnd = this.onTouchEnd.bind(this)
    }

    function Cd(e) {
        Yn(this, Cd), this.Reveal = e
    }
    null == fd[hd] && F.f(fd, hd, {
        configurable: !0,
        value: se(null)
    });
    yt({
        target: "Array",
        proto: !0
    }, {
        fill: function(e) {
            for (var t = pd(this), n = gd(t.length), a = arguments.length, o = md(1 < a ? arguments[1] : void 0, n), a = 2 < a ? arguments[2] : void 0, i = void 0 === a ? n : md(a, n); o < i;) t[o++] = e;
            return t
        }
    }), fd[hd].fill = !0;
    var wd = (Kn(Sd, [{
            key: "setPlaying",
            value: function(e) {
                var t = this.playing;
                this.playing = e, !t && this.playing ? this.animate() : this.render()
            }
        }, {
            key: "animate",
            value: function() {
                var e = this.progress;
                this.progress = this.progressCheck(), .8 < e && this.progress < .2 && (this.progressOffset = this.progress), this.render(), this.playing && requestAnimationFrame(this.animate.bind(this))
            }
        }, {
            key: "render",
            value: function() {
                var e = this.playing ? this.progress : 0,
                    t = this.diameter2 - this.thickness,
                    n = this.diameter2,
                    a = this.diameter2;
                this.progressOffset += .1 * (1 - this.progressOffset);
                var o = -Math.PI / 2 + e * (2 * Math.PI),
                    e = -Math.PI / 2 + this.progressOffset * (2 * Math.PI);
                this.context.save(), this.context.clearRect(0, 0, this.diameter, this.diameter), this.context.beginPath(), this.context.arc(n, a, 4 + t, 0, 2 * Math.PI, !1), this.context.fillStyle = "rgba( 0, 0, 0, 0.4 )", this.context.fill(), this.context.beginPath(), this.context.arc(n, a, t, 0, 2 * Math.PI, !1), this.context.lineWidth = this.thickness, this.context.strokeStyle = "rgba( 255, 255, 255, 0.2 )", this.context.stroke(), this.playing && (this.context.beginPath(), this.context.arc(n, a, t, e, o, !1), this.context.lineWidth = this.thickness, this.context.strokeStyle = "#fff", this.context.stroke()), this.context.translate(n - 14, a - 14), this.playing ? (this.context.fillStyle = "#fff", this.context.fillRect(0, 0, 10, 28), this.context.fillRect(18, 0, 10, 28)) : (this.context.beginPath(), this.context.translate(4, 0), this.context.moveTo(0, 0), this.context.lineTo(24, 14), this.context.lineTo(0, 28), this.context.fillStyle = "#fff", this.context.fill()), this.context.restore()
            }
        }, {
            key: "on",
            value: function(e, t) {
                this.canvas.addEventListener(e, t, !1)
            }
        }, {
            key: "off",
            value: function(e, t) {
                this.canvas.removeEventListener(e, t, !1)
            }
        }, {
            key: "destroy",
            value: function() {
                this.playing = !1, this.canvas.parentNode && this.container.removeChild(this.canvas)
            }
        }]), Sd),
        kd = {
            width: 960,
            height: 700,
            margin: .04,
            minScale: .2,
            maxScale: 2,
            controls: !0,
            controlsTutorial: !0,
            controlsLayout: "bottom-right",
            controlsBackArrows: "faded",
            progress: !0,
            slideNumber: !1,
            showSlideNumber: "all",
            hashOneBasedIndex: !1,
            hash: !1,
            respondToHashChanges: !0,
            history: !1,
            keyboard: !0,
            keyboardCondition: null,
            disableLayout: !1,
            overview: !0,
            center: !0,
            touch: !0,
            loop: !1,
            rtl: !1,
            navigationMode: "default",
            shuffle: !1,
            fragments: !0,
            fragmentInURL: !0,
            embedded: !1,
            help: !0,
            pause: !0,
            showNotes: !1,
            showHiddenSlides: !1,
            autoPlayMedia: null,
            preloadIframes: null,
            autoAnimate: !0,
            autoAnimateMatcher: null,
            autoAnimateEasing: "ease",
            autoAnimateDuration: 1,
            autoAnimateUnmatched: !0,
            autoAnimateStyles: ["opacity", "color", "background-color", "padding", "font-size", "line-height", "letter-spacing", "border-width", "border-color", "border-radius", "outline", "outline-offset"],
            autoSlide: 0,
            autoSlideStoppable: !0,
            autoSlideMethod: null,
            defaultTiming: null,
            mouseWheel: !1,
            previewLinks: !1,
            postMessage: !0,
            postMessageEvents: !1,
            focusBodyOnPageVisibilityChange: !0,
            transition: "slide",
            transitionSpeed: "default",
            backgroundTransition: "fade",
            parallaxBackgroundImage: "",
            parallaxBackgroundSize: "",
            parallaxBackgroundRepeat: "",
            parallaxBackgroundPosition: "",
            parallaxBackgroundHorizontal: null,
            parallaxBackgroundVertical: null,
            pdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,
            pdfSeparateFragments: !0,
            pdfPageHeightOffset: -1,
            viewDistance: 3,
            mobileViewDistance: 2,
            display: "block",
            hideInactiveCursor: !0,
            hideCursorTime: 5e3,
            dependencies: [],
            plugins: []
        };

    function Sd(e, t) {
        Yn(this, Sd), this.diameter = 100, this.diameter2 = this.diameter / 2, this.thickness = 6, this.playing = !1, this.progress = 0, this.progressOffset = 1, this.container = e, this.progressCheck = t, this.canvas = document.createElement("canvas"), this.canvas.className = "playback", this.canvas.width = this.diameter, this.canvas.height = this.diameter, this.canvas.style.width = this.diameter2 + "px", this.canvas.style.height = this.diameter2 + "px", this.context = this.canvas.getContext("2d"), this.container.appendChild(this.canvas), this.render()
    }

    function Td(a, t) {
        arguments.length < 2 && (t = arguments[0], a = document.querySelector(".reveal"));
        var u, p, m, g, o, n = {},
            h = {},
            e = !1,
            i = {
                hasNavigatedHorizontally: !1,
                hasNavigatedVertically: !1
            },
            f = [],
            r = 1,
            s = {
                layout: "",
                overview: ""
            },
            v = {},
            y = "idle",
            l = 0,
            c = 0,
            d = -1,
            b = !1,
            C = new fc(n),
            w = new vc(n),
            k = new jc(n),
            S = new yc(n),
            T = new Dc(n),
            A = new Uc(n),
            x = new Lc(n),
            E = new Mc(n),
            q = new _c(n),
            I = new Bc(n),
            R = new Fc(n),
            P = new ad(n),
            O = new sd(n),
            $ = new dd(n),
            N = new ld(n),
            j = new ud(n);

        function D() {
            e = !0, h.showHiddenSlides || nc(v.wrapper, 'section[data-visibility="hidden"]').forEach(function(e) {
                e.parentNode.removeChild(e)
            }), v.slides.classList.add("no-transition"), dc ? v.wrapper.classList.add("no-hover") : v.wrapper.classList.remove("no-hover"), S.render(), w.render(), q.render(), I.render(), j.render(), v.pauseOverlay = function(e, t, n) {
                for (var a = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : "", o = e.querySelectorAll("." + n), i = 0; i < o.length; i++) {
                    var r = o[i];
                    if (r.parentNode === e) return r
                }
                t = document.createElement(t);
                return t.className = n, t.innerHTML = a, e.appendChild(t), t
            }(v.wrapper, "div", "pause-overlay", h.controls ? '<button class="resume-button">Resume presentation</button>' : null), v.statusElement = function() {
                var e = v.wrapper.querySelector(".aria-status");
                return e || ((e = document.createElement("div")).style.position = "absolute", e.style.height = "1px", e.style.width = "1px", e.style.overflow = "hidden", e.style.clip = "rect( 1px, 1px, 1px, 1px )", e.classList.add("aria-status"), e.setAttribute("aria-live", "polite"), e.setAttribute("aria-atomic", "true"), v.wrapper.appendChild(e)), e
            }(), v.wrapper.setAttribute("role", "application"), h.postMessage && window.addEventListener("message", function(e) {
                var t = e.data;
                "string" == typeof t && "{" === t.charAt(0) && "}" === t.charAt(t.length - 1) && (t = JSON.parse(t)).method && "function" == typeof n[t.method] && (!1 === Dl.test(t.method) ? (e = n[t.method].apply(n, t.args), G("callback", {
                    method: t.method,
                    result: e
                })) : console.warn('reveal.js: "' + t.method + '" is is blacklisted from the postMessage API'))
            }, !1), setInterval(function() {
                0 === v.wrapper.scrollTop && 0 === v.wrapper.scrollLeft || (v.wrapper.scrollTop = 0, v.wrapper.scrollLeft = 0)
            }, 1e3), Ce().forEach(function(e) {
                nc(e, "section").forEach(function(e, t) {
                    0 < t && (e.classList.remove("present"), e.classList.remove("past"), e.classList.add("future"), e.setAttribute("aria-hidden", "true"))
                })
            }), M(), E.readURL(), S.update(!0), setTimeout(function() {
                v.slides.classList.remove("no-transition"), v.wrapper.classList.add("ready"), z({
                    type: "ready",
                    data: {
                        indexh: u,
                        indexv: p,
                        currentSlide: g
                    }
                })
            }, 1), O.isPrintingPDF() && (B(), "complete" === document.readyState ? O.setupPDF() : window.addEventListener("load", function() {
                O.setupPDF()
            }))
        }

        function U(e) {
            v.statusElement.textContent = e
        }

        function L(e) {
            var t, n, a = "";
            return 3 === e.nodeType ? a += e.textContent : 1 === e.nodeType && (t = e.getAttribute("aria-hidden"), n = "none" === window.getComputedStyle(e).display, "true" === t || n || Array.from(e.childNodes).forEach(function(e) {
                a += L(e)
            })), "" === (a = a.trim()) ? "" : a + " "
        }

        function M(e) {
            var t = Hn({}, h);
            "object" === zn(e) && tc(h, e), !1 !== n.isReady() && (e = v.wrapper.querySelectorAll($l).length, v.wrapper.classList.remove(t.transition), v.wrapper.classList.add(h.transition), v.wrapper.setAttribute("data-transition-speed", h.transitionSpeed), v.wrapper.setAttribute("data-background-transition", h.backgroundTransition), v.viewport.style.setProperty("--slide-width", h.width + "px"), v.viewport.style.setProperty("--slide-height", h.height + "px"), h.shuffle && me(), ac(v.wrapper, "embedded", h.embedded), ac(v.wrapper, "rtl", h.rtl), ac(v.wrapper, "center", h.center), !1 === h.pause && le(), h.previewLinks ? (Y(), J("[data-preview-link=false]")) : (J(), Y("[data-preview-link]:not([data-preview-link=false])")), k.reset(), o && (o.destroy(), o = null), 1 < e && h.autoSlide && h.autoSlideStoppable && ((o = new wd(v.wrapper, function() {
                return Math.min(Math.max((Date.now() - d) / l, 0), 1)
            })).on("click", Be), b = !1), "default" !== h.navigationMode ? v.wrapper.setAttribute("data-navigation-mode", h.navigationMode) : v.wrapper.removeAttribute("data-navigation-mode"), j.configure(h, t), $.configure(h, t), R.configure(h, t), q.configure(h, t), I.configure(h, t), x.configure(h, t), T.configure(h, t), w.configure(h, t), pe())
        }

        function _() {
            window.addEventListener("resize", Le, !1), h.touch && N.bind(), h.keyboard && x.bind(), h.progress && I.bind(), h.respondToHashChanges && E.bind(), q.bind(), $.bind(), v.slides.addEventListener("transitionend", Ue, !1), v.pauseOverlay.addEventListener("click", le, !1), h.focusBodyOnPageVisibilityChange && document.addEventListener("visibilitychange", Me, !1)
        }

        function B() {
            N.unbind(), $.unbind(), x.unbind(), q.unbind(), I.unbind(), E.unbind(), window.removeEventListener("resize", Le, !1), v.slides.removeEventListener("transitionend", Ue, !1), v.pauseOverlay.removeEventListener("click", le, !1)
        }

        function F(e, t, n) {
            a.addEventListener(e, t, n)
        }

        function V(e, t, n) {
            a.removeEventListener(e, t, n)
        }

        function H(e) {
            "string" == typeof e.layout && (s.layout = e.layout), "string" == typeof e.overview && (s.overview = e.overview), s.layout ? ic(v.slides, s.layout + " " + s.overview) : ic(v.slides, s.overview)
        }

        function z(e) {
            var t = e.target,
                n = void 0 === t ? v.wrapper : t,
                a = e.type,
                o = e.data,
                t = e.bubbles,
                e = void 0 === t || t,
                t = document.createEvent("HTMLEvents", 1, 2);
            t.initEvent(a, e, !0), tc(t, o), n.dispatchEvent(t), n === v.wrapper && G(a)
        }

        function G(e, t) {
            h.postMessageEvents && window.parent !== window.self && (e = {
                namespace: "reveal",
                eventName: e,
                state: xe()
            }, tc(e, t), window.parent.postMessage(JSON.stringify(e), "*"))
        }

        function Y(e) {
            e = 0 < arguments.length && void 0 !== e ? e : "a";
            Array.from(v.wrapper.querySelectorAll(e)).forEach(function(e) {
                /^(http|www)/gi.test(e.getAttribute("href")) && e.addEventListener("click", _e, !1)
            })
        }

        function J(e) {
            e = 0 < arguments.length && void 0 !== e ? e : "a";
            Array.from(v.wrapper.querySelectorAll(e)).forEach(function(e) {
                /^(http|www)/gi.test(e.getAttribute("href")) && e.removeEventListener("click", _e, !1)
            })
        }

        function K(e) {
            Q(), v.overlay = document.createElement("div"), v.overlay.classList.add("overlay"), v.overlay.classList.add("overlay-preview"), v.wrapper.appendChild(v.overlay), v.overlay.innerHTML = '<header>\n\t\t\t\t<a class="close" href="#"><span class="icon"></span></a>\n\t\t\t\t<a class="external" href="'.concat(e, '" target="_blank"><span class="icon"></span></a>\n\t\t\t</header>\n\t\t\t<div class="spinner"></div>\n\t\t\t<div class="viewport">\n\t\t\t\t<iframe src="').concat(e, '"></iframe>\n\t\t\t\t<small class="viewport-inner">\n\t\t\t\t\t<span class="x-frame-error">Unable to load iframe. This is likely due to the site\'s policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>'), v.overlay.querySelector("iframe").addEventListener("load", function(e) {
                v.overlay.classList.add("loaded")
            }, !1), v.overlay.querySelector(".close").addEventListener("click", function(e) {
                Q(), e.preventDefault()
            }, !1), v.overlay.querySelector(".external").addEventListener("click", function(e) {
                Q()
            }, !1)
        }

        function W() {
            if (h.help) {
                Q(), v.overlay = document.createElement("div"), v.overlay.classList.add("overlay"), v.overlay.classList.add("overlay-help"), v.wrapper.appendChild(v.overlay);
                var e, t, n = '<p class="title">Atajos de teclado</p><br/>',
                    a = x.getShortcuts(),
                    o = x.getBindings();
                for (e in n += "<table><th>KEY</th><th>ACTION</th>", a) n += "<tr><td>".concat(e, "</td><td>").concat(a[e], "</td></tr>");
                for (t in o) o[t].key && o[t].description && (n += "<tr><td>".concat(o[t].key, "</td><td>").concat(o[t].description, "</td></tr>"));
                n += "</table>", v.overlay.innerHTML = '\n\t\t\t\t<header>\n\t\t\t\t\t<a class="close" href="#"><span class="icon"></span></a>\n\t\t\t\t</header>\n\t\t\t\t<div class="viewport">\n\t\t\t\t\t<div class="viewport-inner">'.concat(n, "</div>\n\t\t\t\t</div>\n\t\t\t"), v.overlay.querySelector(".close").addEventListener("click", function(e) {
                    Q(), e.preventDefault()
                }, !1)
            }
        }

        function Q() {
            return !!v.overlay && (v.overlay.parentNode.removeChild(v.overlay), !(v.overlay = null))
        }

        function X() {
            if (v.wrapper && !O.isPrintingPDF()) {
                if (!h.disableLayout) {
                    dc && !h.embedded && document.documentElement.style.setProperty("--vh", .01 * window.innerHeight + "px");
                    var e = ee(),
                        t = r;
                    Z(h.width, h.height), v.slides.style.width = e.width + "px", v.slides.style.height = e.height + "px", r = Math.min(e.presentationWidth / e.width, e.presentationHeight / e.height), r = Math.max(r, h.minScale), 1 === (r = Math.min(r, h.maxScale)) ? (v.slides.style.zoom = "", v.slides.style.left = "", v.slides.style.top = "", v.slides.style.bottom = "", H({
                        layout: v.slides.style.right = ""
                    })) : 1 < r && pc && window.devicePixelRatio < 2 ? (v.slides.style.zoom = r, v.slides.style.left = "", v.slides.style.top = "", v.slides.style.bottom = "", H({
                        layout: v.slides.style.right = ""
                    })) : (v.slides.style.zoom = "", v.slides.style.left = "50%", v.slides.style.top = "50%", v.slides.style.bottom = "auto", v.slides.style.right = "auto", H({
                        layout: "translate(-50%, -50%) scale(" + r + ")"
                    }));
                    for (var n = Array.from(v.wrapper.querySelectorAll($l)), a = 0, o = n.length; a < o; a++) {
                        var i = n[a];
                        "none" !== i.style.display && (h.center || i.classList.contains("center") ? i.classList.contains("stack") ? i.style.top = 0 : i.style.top = Math.max((e.height - i.scrollHeight) / 2, 0) + "px" : i.style.top = "")
                    }
                    t !== r && z({
                        type: "resize",
                        data: {
                            oldScale: t,
                            scale: r,
                            size: e
                        }
                    })
                }
                I.update(), S.updateParallax(), A.isActive() && A.update()
            }
        }

        function Z(i, r) {
            nc(v.slides, "section > .stretch, section > .r-stretch").forEach(function(e) {
                var t, n, a, o = function(e) {
                    var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0;
                    if (e) {
                        var n, a = e.style.height;
                        return e.style.height = "0px", e.parentNode.style.height = "auto", n = t - e.parentNode.offsetHeight, e.style.height = a + "px", e.parentNode.style.removeProperty("height"), n
                    }
                    return t
                }(e, r);
                /(img|video)/gi.test(e.nodeName) ? (t = e.naturalWidth || e.videoWidth, n = e.naturalHeight || e.videoHeight, a = Math.min(i / t, o / n), e.style.width = t * a + "px", e.style.height = n * a + "px") : (e.style.width = i + "px", e.style.height = o + "px")
            })
        }

        function ee(e, t) {
            t = {
                width: h.width,
                height: h.height,
                presentationWidth: e || v.wrapper.offsetWidth,
                presentationHeight: t || v.wrapper.offsetHeight
            };
            return t.presentationWidth -= t.presentationWidth * h.margin, t.presentationHeight -= t.presentationHeight * h.margin, "string" == typeof t.width && /%$/.test(t.width) && (t.width = parseInt(t.width, 10) / 100 * t.presentationWidth), "string" == typeof t.height && /%$/.test(t.height) && (t.height = parseInt(t.height, 10) / 100 * t.presentationHeight), t
        }

        function te(e, t) {
            "object" === zn(e) && "function" == typeof e.setAttribute && e.setAttribute("data-previous-indexv", t || 0)
        }

        function ne(e) {
            if ("object" === zn(e) && "function" == typeof e.setAttribute && e.classList.contains("stack")) {
                var t = e.hasAttribute("data-start-indexv") ? "data-start-indexv" : "data-previous-indexv";
                return parseInt(e.getAttribute(t) || 0, 10)
            }
            return 0
        }

        function ae() {
            var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : g;
            return e && e.parentNode && !!e.parentNode.nodeName.match(/section/i)
        }

        function oe() {
            return !(!g || !ae(g) || g.nextElementSibling)
        }

        function ie() {
            return 0 === u && 0 === p
        }

        function re() {
            return !(!g || g.nextElementSibling || ae(g) && g.parentNode.nextElementSibling)
        }

        function se() {
            var e;
            h.pause && (e = v.wrapper.classList.contains("paused"), qe(), v.wrapper.classList.add("paused"), !1 === e && z({
                type: "paused"
            }))
        }

        function le() {
            var e = v.wrapper.classList.contains("paused");
            v.wrapper.classList.remove("paused"), Ee(), e && z({
                type: "resumed"
            })
        }

        function ce(e) {
            ("boolean" == typeof e ? e ? se : le : de() ? le : se)()
        }

        function de() {
            return v.wrapper.classList.contains("paused")
        }

        function ue(e, t, n, a) {
            m = g;
            var o = v.wrapper.querySelectorAll(Nl);
            if (0 !== o.length) {
                void 0 !== t || A.isActive() || (t = ne(o[e])), m && m.parentNode && m.parentNode.classList.contains("stack") && te(m.parentNode, p);
                var i = f.concat();
                f.length = 0;
                var r = u || 0,
                    s = p || 0;
                u = ge(Nl, void 0 === e ? u : e), p = ge(jl, void 0 === t ? p : t);
                e = u !== r || p !== s;
                e || (m = null);
                t = o[u], o = t.querySelectorAll("section");
                g = o[p] || t;
                t = !1;
                e && m && g && !A.isActive() && (m.hasAttribute("data-auto-animate") && g.hasAttribute("data-auto-animate") && m.getAttribute("data-auto-animate-id") === g.getAttribute("data-auto-animate-id") && !(r < u || s < p ? g : m).hasAttribute("data-auto-animate-restart") && (t = !0, v.slides.classList.add("disable-slide-transitions")), y = "running"), he(), X(), A.isActive() && A.update(), void 0 !== n && T.goto(n), m && m !== g && (m.classList.remove("present"), m.setAttribute("aria-hidden", "true"), ie() && setTimeout(function() {
                    nc(v.wrapper, ".slides>section.stack").forEach(function(e) {
                        te(e, 0)
                    })
                }, 0));
                e: for (var l = 0, c = f.length; l < c; l++) {
                    for (var d = 0; d < i.length; d++)
                        if (i[d] === f[l]) {
                            i.splice(d, 1);
                            continue e
                        }
                    v.viewport.classList.add(f[l]), z({
                        type: f[l]
                    })
                }
                for (; i.length;) v.viewport.classList.remove(i.pop());
                e && z({
                    type: "slidechanged",
                    data: {
                        indexh: u,
                        indexv: p,
                        previousSlide: m,
                        currentSlide: g,
                        origin: a
                    }
                }), !e && m || (C.stopEmbeddedContent(m), C.startEmbeddedContent(g)), requestAnimationFrame(function() {
                    U(L(g))
                }), I.update(), q.update(), j.update(), S.update(), S.updateParallax(), w.update(), T.update(), E.writeURL(), Ee(), t && (setTimeout(function() {
                    v.slides.classList.remove("disable-slide-transitions")
                }, 0), h.autoAnimate && k.run(m, g))
            }
        }

        function pe() {
            B(), _(), X(), l = h.autoSlide, Ee(), S.create(), E.writeURL(), T.sortAll(), q.update(), I.update(), he(), j.update(), j.updateVisibility(), S.update(!0), w.update(), C.formatEmbeddedContent(), !1 === h.autoPlayMedia ? C.stopEmbeddedContent(g, {
                unloadIframes: !1
            }) : C.startEmbeddedContent(g), A.isActive() && A.layout()
        }

        function me() {
            var a = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : Ce();
            a.forEach(function(e, t) {
                var n = a[Math.floor(Math.random() * a.length)];
                n.parentNode === e.parentNode && e.parentNode.insertBefore(e, n);
                e = e.querySelectorAll("section");
                e.length && me(e)
            })
        }

        function ge(e, t) {
            var n = nc(v.wrapper, e),
                a = n.length,
                o = O.isPrintingPDF();
            if (a) {
                h.loop && (t %= a) < 0 && (t = a + t), t = Math.max(Math.min(t, a - 1), 0);
                for (var i = 0; i < a; i++) {
                    var r = n[i],
                        s = h.rtl && !ae(r);
                    r.classList.remove("past"), r.classList.remove("present"), r.classList.remove("future"), r.setAttribute("hidden", ""), r.setAttribute("aria-hidden", "true"), r.querySelector("section") && r.classList.add("stack"), o ? r.classList.add("present") : i < t ? (r.classList.add(s ? "future" : "past"), h.fragments && nc(r, ".fragment").forEach(function(e) {
                        e.classList.add("visible"), e.classList.remove("current-fragment")
                    })) : t < i && (r.classList.add(s ? "past" : "future"), h.fragments && nc(r, ".fragment.visible").forEach(function(e) {
                        e.classList.remove("visible", "current-fragment")
                    }))
                }
                var l = n[t],
                    e = l.classList.contains("present");
                l.classList.add("present"), l.removeAttribute("hidden"), l.removeAttribute("aria-hidden"), e || z({
                    target: l,
                    type: "visible",
                    bubbles: !1
                });
                l = l.getAttribute("data-state");
                l && (f = f.concat(l.split(" ")))
            } else t = 0;
            return t
        }

        function he() {
            var e = Ce(),
                t = e.length;
            if (t && void 0 !== u) {
                var n = A.isActive() ? 10 : h.viewDistance;
                dc && (n = A.isActive() ? 6 : h.mobileViewDistance), O.isPrintingPDF() && (n = Number.MAX_VALUE);
                for (var a = 0; a < t; a++) {
                    var o = e[a],
                        i = nc(o, "section"),
                        r = i.length,
                        s = Math.abs((u || 0) - a) || 0;
                    if (h.loop && (s = Math.abs(((u || 0) - a) % (t - n)) || 0), s < n ? C.load(o) : C.unload(o), r)
                        for (var l = ne(o), c = 0; c < r; c++) {
                            var d = i[c];
                            s + (a === (u || 0) ? Math.abs((p || 0) - c) : Math.abs(c - l)) < n ? C.load(d) : C.unload(d)
                        }
                }
                Se() ? v.wrapper.classList.add("has-vertical-slides") : v.wrapper.classList.remove("has-vertical-slides"), ke() ? v.wrapper.classList.add("has-horizontal-slides") : v.wrapper.classList.remove("has-horizontal-slides")
            }
        }

        function fe() {
            var e, t = (0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}).includeFragments,
                n = void 0 !== t && t,
                a = v.wrapper.querySelectorAll(Nl),
                o = v.wrapper.querySelectorAll(jl),
                t = {
                    left: 0 < u,
                    right: u < a.length - 1,
                    up: 0 < p,
                    down: p < o.length - 1
                };
            return h.loop && (1 < a.length && (t.left = !0, t.right = !0), 1 < o.length && (t.up = !0, t.down = !0)), 1 < a.length && "linear" === h.navigationMode && (t.right = t.right || t.down, t.left = t.left || t.up), !0 === n && (e = T.availableRoutes(), t.left = t.left || e.prev, t.up = t.up || e.prev, t.down = t.down || e.next, t.right = t.right || e.next), h.rtl && (e = t.left, t.left = t.right, t.right = e), t
        }

        function ve() {
            var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : g,
                t = Ce(),
                n = 0;
            e: for (var a = 0; a < t.length; a++) {
                for (var o = t[a], i = o.querySelectorAll("section"), r = 0; r < i.length; r++) {
                    if (i[r] === e) break e;
                    "uncounted" !== i[r].dataset.visibility && n++
                }
                if (o === e) break;
                !1 === o.classList.contains("stack") && "uncounted" !== o.dataset.visibility && n++
            }
            return n
        }

        function ye(e) {
            var t, n, a, o, i = u,
                r = p;
            return e && (n = (t = ae(e)) ? e.parentNode : e, a = Ce(), i = Math.max(a.indexOf(n), 0), r = void 0, t && (r = Math.max(nc(e.parentNode, "section").indexOf(e), 0))), !e && g && 0 < g.querySelectorAll(".fragment").length && (o = (o = g.querySelector(".current-fragment")) && o.hasAttribute("data-fragment-index") ? parseInt(o.getAttribute("data-fragment-index"), 10) : g.querySelectorAll(".fragment.visible").length - 1), {
                h: i,
                v: r,
                f: o
            }
        }

        function be() {
            return nc(v.wrapper, '.slides section:not(.stack):not([data-visibility="uncounted"])')
        }

        function Ce() {
            return nc(v.wrapper, Nl)
        }

        function we() {
            return nc(v.wrapper, ".slides>section>section")
        }

        function ke() {
            return 1 < Ce().length
        }

        function Se() {
            return 1 < we().length
        }

        function Te() {
            return be().length
        }

        function Ae(e, t) {
            var n = Ce()[e],
                e = n && n.querySelectorAll("section");
            return e && e.length && "number" == typeof t ? e ? e[t] : void 0 : n
        }

        function xe() {
            var e = ye();
            return {
                indexh: e.h,
                indexv: e.v,
                indexf: e.f,
                paused: de(),
                overview: A.isActive()
            }
        }

        function Ee() {
            var e, t, n;
            qe(), g && !1 !== h.autoSlide && (e = (n = (n = g.querySelector(".current-fragment")) || g.querySelector(".fragment")) ? n.getAttribute("data-autoslide") : null, t = g.parentNode ? g.parentNode.getAttribute("data-autoslide") : null, n = g.getAttribute("data-autoslide"), e ? l = parseInt(e, 10) : n ? l = parseInt(n, 10) : t ? l = parseInt(t, 10) : (l = h.autoSlide, 0 === g.querySelectorAll(".fragment").length && nc(g, "video, audio").forEach(function(e) {
                e.hasAttribute("data-autoplay") && l && 1e3 * e.duration / e.playbackRate > l && (l = 1e3 * e.duration / e.playbackRate + 1e3)
            })), !l || b || de() || A.isActive() || re() && !T.availableRoutes().next && !0 !== h.loop || (c = setTimeout(function() {
                "function" == typeof h.autoSlideMethod ? h.autoSlideMethod() : De(), Ee()
            }, l), d = Date.now()), o && o.setPlaying(-1 !== c))
        }

        function qe() {
            clearTimeout(c), c = -1
        }

        function Ie() {
            l && !b && (b = !0, z({
                type: "autoslidepaused"
            }), clearTimeout(c), o && o.setPlaying(!1))
        }

        function Re() {
            l && b && (b = !1, z({
                type: "autoslideresumed"
            }), Ee())
        }

        function Pe() {
            i.hasNavigatedHorizontally = !0, h.rtl ? (A.isActive() || !1 === T.next()) && fe().left && ue(u + 1, "grid" === h.navigationMode ? p : void 0) : (A.isActive() || !1 === T.prev()) && fe().left && ue(u - 1, "grid" === h.navigationMode ? p : void 0)
        }

        function Oe() {
            i.hasNavigatedHorizontally = !0, h.rtl ? (A.isActive() || !1 === T.prev()) && fe().right && ue(u - 1, "grid" === h.navigationMode ? p : void 0) : (A.isActive() || !1 === T.next()) && fe().right && ue(u + 1, "grid" === h.navigationMode ? p : void 0)
        }

        function $e() {
            (A.isActive() || !1 === T.prev()) && fe().up && ue(u, p - 1)
        }

        function Ne() {
            i.hasNavigatedVertically = !0, (A.isActive() || !1 === T.next()) && fe().down && ue(u, p + 1)
        }

        function je() {
            var e;
            !1 === T.prev() && (fe().up ? $e() : (e = (h.rtl ? nc(v.wrapper, ".slides>section.future") : nc(v.wrapper, ".slides>section.past")).pop()) && (e = e.querySelectorAll("section").length - 1 || void 0, ue(u - 1, e)))
        }

        function De() {
            var e;
            i.hasNavigatedHorizontally = !0, !(i.hasNavigatedVertically = !0) === T.next() && ((e = fe()).down && e.right && h.loop && oe() && (e.down = !1), (e.down ? Ne : h.rtl ? Pe : Oe)())
        }

        function Ue(e) {
            "running" === y && /section/gi.test(e.target.nodeName) && (y = "idle", z({
                type: "slidetransitionend",
                data: {
                    indexh: u,
                    indexv: p,
                    previousSlide: m,
                    currentSlide: g
                }
            }))
        }

        function Le(e) {
            X()
        }

        function Me(e) {
            !1 === document.hidden && document.activeElement !== document.body && ("function" == typeof document.activeElement.blur && document.activeElement.blur(), document.body.focus())
        }

        function _e(e) {
            var t;
            e.currentTarget && e.currentTarget.hasAttribute("href") && ((t = e.currentTarget.getAttribute("href")) && (K(t), e.preventDefault()))
        }

        function Be(e) {
            re() && !1 === h.loop ? (ue(0, 0), Re()) : (b ? Re : Ie)()
        }
        var Fe = {
            VERSION: "4.1.2",
            initialize: function(e) {
                return v.wrapper = a, v.slides = a.querySelector(".slides"), !0 === (h = Hn(Hn(Hn(Hn(Hn({}, kd), h), t), e), cc())).embedded ? v.viewport = sc(a, ".reveal-viewport") || a : (v.viewport = document.body, document.documentElement.classList.add("reveal-full-page")), v.viewport.classList.add("reveal-viewport"), window.addEventListener("load", X, !1), P.load(h.plugins, h.dependencies).then(D), new Promise(function(e) {
                    return n.on("ready", e)
                })
            },
            configure: M,
            sync: pe,
            syncSlide: function() {
                var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : g;
                S.sync(e), T.sync(e), C.load(e), S.update(), j.update()
            },
            syncFragments: T.sync.bind(T),
            slide: ue,
            left: Pe,
            right: Oe,
            up: $e,
            down: Ne,
            prev: je,
            next: De,
            navigateLeft: Pe,
            navigateRight: Oe,
            navigateUp: $e,
            navigateDown: Ne,
            navigatePrev: je,
            navigateNext: De,
            navigateFragment: T.goto.bind(T),
            prevFragment: T.prev.bind(T),
            nextFragment: T.next.bind(T),
            on: F,
            off: V,
            addEventListener: F,
            removeEventListener: V,
            layout: X,
            shuffle: me,
            availableRoutes: fe,
            availableFragments: T.availableRoutes.bind(T),
            toggleHelp: function(e) {
                ("boolean" == typeof e ? e ? W : Q : v.overlay ? Q : W)()
            },
            toggleOverview: A.toggle.bind(A),
            togglePause: ce,
            toggleAutoSlide: function(e) {
                ("boolean" == typeof e ? e ? Re : Ie : b ? Re : Ie)()
            },
            isFirstSlide: ie,
            isLastSlide: re,
            isLastVerticalSlide: oe,
            isVerticalSlide: ae,
            isPaused: de,
            isAutoSliding: function() {
                return !(!l || b)
            },
            isSpeakerNotes: j.isSpeakerNotesWindow.bind(j),
            isOverview: A.isActive.bind(A),
            isFocused: $.isFocused.bind($),
            isPrintingPDF: O.isPrintingPDF.bind(O),
            isReady: function() {
                return e
            },
            loadSlide: C.load.bind(C),
            unloadSlide: C.unload.bind(C),
            showPreview: K,
            hidePreview: Q,
            addEventListeners: _,
            removeEventListeners: B,
            dispatchEvent: z,
            getState: xe,
            setState: function(e) {
                var t;
                "object" === zn(e) && (ue(oc(e.indexh), oc(e.indexv), oc(e.indexf)), t = oc(e.paused), e = oc(e.overview), "boolean" == typeof t && t !== de() && ce(t), "boolean" == typeof e && e !== A.isActive() && A.toggle(e))
            },
            getProgress: function() {
                var e, t = Te(),
                    n = ve();
                return !g || 0 < (e = g.querySelectorAll(".fragment")).length && (n += g.querySelectorAll(".fragment.visible").length / e.length * .9), Math.min(n / (t - 1), 1)
            },
            getIndices: ye,
            getSlidesAttributes: function() {
                return be().map(function(e) {
                    for (var t = {}, n = 0; n < e.attributes.length; n++) {
                        var a = e.attributes[n];
                        t[a.name] = a.value
                    }
                    return t
                })
            },
            getSlidePastCount: ve,
            getTotalSlides: Te,
            getSlide: Ae,
            getPreviousSlide: function() {
                return m
            },
            getCurrentSlide: function() {
                return g
            },
            getSlideBackground: function(e, t) {
                if (e = "number" == typeof e ? Ae(e, t) : e) return e.slideBackgroundElement
            },
            getSlideNotes: j.getSlideNotes.bind(j),
            getSlides: be,
            getHorizontalSlides: Ce,
            getVerticalSlides: we,
            hasHorizontalSlides: ke,
            hasVerticalSlides: Se,
            hasNavigatedHorizontally: function() {
                return i.hasNavigatedHorizontally
            },
            hasNavigatedVertically: function() {
                return i.hasNavigatedVertically
            },
            addKeyBinding: x.addKeyBinding.bind(x),
            removeKeyBinding: x.removeKeyBinding.bind(x),
            triggerKey: x.triggerKey.bind(x),
            registerKeyboardShortcut: x.registerKeyboardShortcut.bind(x),
            getComputedSlideSize: ee,
            getScale: function() {
                return r
            },
            getConfig: function() {
                return h
            },
            getQueryHash: cc,
            getRevealElement: function() {
                return a
            },
            getSlidesElement: function() {
                return v.slides
            },
            getViewportElement: function() {
                return v.viewport
            },
            getBackgroundsElement: function() {
                return S.element
            },
            registerPlugin: P.registerPlugin.bind(P),
            hasPlugin: P.hasPlugin.bind(P),
            getPlugin: P.getPlugin.bind(P),
            getPlugins: P.getRegisteredPlugins.bind(P)
        };
        return tc(n, Hn(Hn({}, Fe), {}, {
            announceStatus: U,
            getStatusText: L,
            print: O,
            focus: $,
            progress: I,
            controls: q,
            location: E,
            overview: A,
            fragments: T,
            slideContent: C,
            slideNumber: w,
            onUserInput: function(e) {
                h.autoSlideStoppable && Ie()
            },
            closeOverlay: Q,
            updateSlidesVisibility: he,
            layoutSlideContents: Z,
            transformSlides: H,
            cueAutoSlide: Ee,
            cancelAutoSlide: qe
        })), Fe
    }
    var Ad = Td,
        xd = [];
    return Ad.initialize = function(e) {
        return Object.assign(Ad, new Td(document.querySelector(".reveal"), e)), xd.map(function(e) {
            return e(Ad)
        }), Ad.initialize()
    }, ["configure", "on", "off", "addEventListener", "removeEventListener", "registerPlugin"].forEach(function(a) {
        Ad[a] = function() {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
            xd.push(function(e) {
                return (e = e[a]).call.apply(e, [null].concat(t))
            })
        }
    }), Ad.isReady = function() {
        return !1
    }, Ad.VERSION = "4.1.2", Ad
});
var re_weburl = new RegExp("^(?:(?:https?|ftp)://)(?:\\S+(?::\\S*)?@)?(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))\\.?|(?:localhost))(?::\\d{2,5})?(?:[/?#]\\S*)?$", "i"),
    urlpattern = {
        host: new RegExp("^(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))\\.?|(?:localhost))(?::\\d{2,5})?$", "i"),
        http: new RegExp("((http|https):){1}"),
        javascriptStringRegex: "^(?:(?:https?|ftp)://)(?:\\S+(?::\\S*)?@)?(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))\\.?|(?:localhost))(?::\\d{2,5})?(?:[/?#]\\S*)?$"
    },
    jiraRestApi = "/rest/api/latest",
    jiraApiPrefix = "/rest/api/latest/issue",
    jiraApiIssueType = "/rest/api/latest/issuetype",
    jiraApiProject = "/rest/api/latest/project",
    jiraAttachment = "/attachments",
    securityCATTestApi = "/scanapi/tests",
    jiraComment = "/comment",
    jiraBrowseUrlPathName = "browse",
    importPrefix = window.location.origin ? window.location.origin + "/?file=" : window.location.protocol + "//" + window.location.hostname + (window.location.port ? ":" + window.location.port : "") + "/?file=",
    localStorageKey = "backup";

function escape(e) {
    return e = (e = (e = (e = e.replace(/&/g, "&amp;")).replace(/</g, "&lt;")).replace(/>/g, "&gt;")).replace(/"/g, "&quot;")
}

function diffString(e, t) {
    e = e.replace(/\s+$/, ""), t = t.replace(/\s+$/, "");
    var n = diff("" == e ? [] : e.split(/\s+/), "" == t ? [] : t.split(/\s+/)),
        a = "",
        o = e.match(/\s+/g);
    null == o ? o = ["\n"] : o.push("\n");
    var i = t.match(/\s+/g);
    if (null == i ? i = ["\n"] : i.push("\n"), 0 == n.n.length)
        for (var r = 0; r < n.o.length; r++) a += "<del>" + escape(n.o[r]) + o[r] + "</del>";
    else {
        if (null == n.n[0].text)
            for (t = 0; t < n.o.length && null == n.o[t].text; t++) a += "<del>" + escape(n.o[t]) + o[t] + "</del>";
        for (r = 0; r < n.n.length; r++)
            if (null == n.n[r].text) a += "<ins>" + escape(n.n[r]) + i[r] + "</ins>";
            else {
                var s = "";
                for (t = n.n[r].row + 1; t < n.o.length && null == n.o[t].text; t++) s += "<del>" + escape(n.o[t]) + o[t] + "</del>";
                a += " " + n.n[r].text + i[r] + s
            }
    }
    return a
}

function diffString2(e, t) {
    e = e.replace(/\s+$/, ""), t = t.replace(/\s+$/, "");
    var n = diff("" == e ? [] : e.split(/\s+/), "" == t ? [] : t.split(/\s+/)),
        a = e.match(/\s+/g);
    null == a ? a = ["\n"] : a.push("\n");
    var o = t.match(/\s+/g);
    null == o ? o = ["\n"] : o.push("\n");
    for (var i = "", r = 0; r < n.o.length; r++) null != n.o[r].text ? i += "<span>" + escape(n.o[r].text) + a[r] + "</span>" : i += '<span style="background-color:rgb(255, 128, 128); text-decoration:line-through">' + escape(n.o[r]) + a[r] + "</span>";
    for (var s = "", r = 0; r < n.n.length; r++) null != n.n[r].text ? s += "<span>" + escape(n.n[r].text) + o[r] + "</span>" : s += '<span style="background-color:rgb(144,238,144)">' + escape(n.n[r]) + o[r] + "</span>";
    return {
        o: i,
        n: s
    }
}

function diff(e, t) {
    for (var n = new Object, a = new Object, o = 0; o < t.length; o++) null == n[t[o]] && (n[t[o]] = {
        rows: new Array,
        o: null
    }), n[t[o]].rows.push(o);
    for (o = 0; o < e.length; o++) null == a[e[o]] && (a[e[o]] = {
        rows: new Array,
        n: null
    }), a[e[o]].rows.push(o);
    for (o in n) 1 == n[o].rows.length && void 0 !== a[o] && 1 == a[o].rows.length && (t[n[o].rows[0]] = {
        text: t[n[o].rows[0]],
        row: a[o].rows[0]
    }, e[a[o].rows[0]] = {
        text: e[a[o].rows[0]],
        row: n[o].rows[0]
    });
    for (o = 0; o < t.length - 1; o++) null != t[o].text && null == t[o + 1].text && t[o].row + 1 < e.length && null == e[t[o].row + 1].text && t[o + 1] == e[t[o].row + 1] && (t[o + 1] = {
        text: t[o + 1],
        row: t[o].row + 1
    }, e[t[o].row + 1] = {
        text: e[t[o].row + 1],
        row: o + 1
    });
    for (o = t.length - 1; 0 < o; o--) null != t[o].text && null == t[o - 1].text && 0 < t[o].row && null == e[t[o].row - 1].text && t[o - 1] == e[t[o].row - 1] && (t[o - 1] = {
        text: t[o - 1],
        row: t[o].row - 1
    }, e[t[o].row - 1] = {
        text: e[t[o].row - 1],
        row: o - 1
    });
    return {
        o: e,
        n: t
    }
}
angular.module("sdlctoolApp", ["LocalStorageModule", "ui.bootstrap", "ngResource", "ui.router", "ngCookies", "ngCacheBuster", "ngFileUpload", "infinite-scroll", "ngAnimate", "ngRoute", "ngSanitize", "ui.sortable", "angularjs-dropdown-multiselect", "angular-confirm", "angularSpinner", "hc.marked", "disableAll", "frapontillo.bootstrap-switch", "ui.indeterminate"]).run(["$rootScope", "$location", "$window", "$http", "$state", "Auth", "Principal", "ENV", "VERSION", "Account", "$confirm", function(d, e, r, t, u, p, m, n, a, o, g) {
    d.ENV = n, d.VERSION = a, d.AUTHENTICATIONTYPE = "", d.REGISTRATIONTYPE = "", t.get("api/authentication_config").then(function(e) {
        d.AUTHENTICATIONTYPE = "CAS" === e.data.type, d.REGISTRATIONTYPE = e.data.registration, "CAS" === e.data.type && (d.CASLOGOUTURL = e.data.casLogout)
    }), d.back = function() {
        -1 !== ["activate", "logout", "finishReset", "requestReset"].indexOf(d.previousStateName) || null === u.get(d.previousStateName) ? u.go("editor") : u.go(d.previousStateName, d.previousStateParams)
    }, d.$on("$stateChangeStart", function(e, t, n, a, o) {
        var i, r, s, l, c;
        angular.isDefined(o.isDirty) && o.isDirty ? (e.preventDefault(), g({
            text: "You have unsaved Changes. Are you sure you want to leave the page without saving?",
            title: "Confirm",
            isDirty: o.isDirty,
            ok: "Ignore Changes",
            cancel: "Cancel"
        }, {
            templateUrl: "scripts/app/editor/confirm-modal.html"
        }).then(function() {
            o.isDirty = !1, u.go(t.name, n)
        }, function() {
            e.preventDefault()
        })) : (r = t, s = n, l = m, c = p, (i = d).toState = r, i.toStateParams = s, null !== (s = document.getElementById("redirect")) && document.body.removeChild(s), l.isIdentityResolved() && c.authorize())
    }), d.$on("$stateChangeSuccess", function(e, t, n, a, o) {
        var i = "SecurityRAT";
        d.previousStateName = a.name, d.previousStateParams = o, t.data.pageTitle && (i = t.data.pageTitle), r.document.title = i
    })
}]).config(["$stateProvider", "$urlRouterProvider", "$httpProvider", "$locationProvider", "httpRequestInterceptorCacheBusterProvider", "$provide", "markedProvider", "localStorageServiceProvider", "appConfig", function(e, t, n, a, o, i, r, s, l) {
    var c, d;
    (d = new XMLHttpRequest).open("GET", "admin-api/configConstants", !0), d.setRequestHeader("Accept", "application/json, text/plain, */*"), d.onreadystatechange = function() {
        4 === this.readyState && 200 === this.status && (c = JSON.parse(this.responseText), angular.forEach(c, function(e) {
            "customRequirementName" === e.name ? l.customRequirement = e.value : l[e.name] = e.value
        }))
    }, d.send(null), a.html5Mode({
        enabled: !0
    }), s.setPrefix("sdlc"), n.defaults.xsrfCookieName = "CSRF-TOKEN", n.defaults.xsrfHeaderName = "X-CSRF-TOKEN", o.setMatchlist([/.*api.*/, /.*protected.*/], !0), t.otherwise("/"), e.state("site", {
        abstract: !0,
        views: {
            "navbar@": {
                templateUrl: "scripts/components/navbar/navbar.html",
                controller: "NavbarController"
            }
        },
        resolve: {
            authorize: ["Auth", function(e) {
                return e.authorize()
            }]
        }
    }), n.interceptors.push("errorHandlerInterceptor"), n.interceptors.push("authExpiredInterceptor"), n.interceptors.push("notificationInterceptor"), i.decorator("$state", ["$delegate", "$stateParams", function(e, t) {
        return e.forceReload = function() {
            return e.go(e.current, t, {
                reload: !0,
                inherit: !1,
                notify: !0
            })
        }, e
    }]), r.setOptions({
        gfm: !0,
        highlight: function(e, t) {
            return (t ? hljs.highlight(t, e, !0) : hljs.highlightAuto(e)).value
        }
    }), r.setRenderer({
        link: function(e, t, n) {
            return "<a href='" + e + "'" + (t ? " title='" + t + "'" : "") + " target='_blank'>" + n + "</a>"
        }
    })
}]).factory("apiFactory", ["$http", "$q", "SDLCToolExceptionService", "$timeout", "appConfig", function(i, r, s, e, l) {
    var t = {},
        a = "/frontend-api/",
        c = !1;
    return t.testRequirementApi = function(e, t, n, a, o, i) {
        var r = "";
        return re_weburl.test(t) || (r = (r = angular.isDefined(i) && "" !== i ? i : l.securityCAT).endsWith("/") ? r.substr(0, r.length - 1) : r), r += t, c = o, this.execute(e, r, n, a.config, a.withCredentials)
    }, t.getJIRAInfo = function(e) {
        return this.execute("GET", e)
    }, t.postExport = function(e, t, n) {
        return this.execute("POST", e, t, n)
    }, t.putExport = function(e, t, n) {
        return this.execute("PUT", e, t, n)
    }, t.deleteExport = function(e, t, n) {
        return this.execute("DELETE", e, t, n)
    }, t.getAll = function(e) {
        return this.execute("GET", a + e)
    }, t.getDetails = function(e, t, n) {
        return this.execute("GET", a + e + "/" + t + "/" + n)
    }, t.getById = function(e, t) {
        return this.execute("GET", a + e + "/" + t)
    }, t.getByQuery = function(e, t, n) {
        return this.execute("GET", a + e + "/" + t + "?" + n)
    }, t.execute = function(e, t, n, a, o) {
        return i({
            method: e,
            url: t,
            data: n,
            withCredentials: !angular.isDefined(o) || o,
            headers: a
        }).then(function(e) {
            return c ? e : e.data
        }, function(e) {
            return 400 === parseInt(e.status, 10) ? e.errorException = s.showWarning("Solicitud incorrecta", "El servidor no pudo entender la solicitud debido a una sintaxis incorrecta.", s.DANGER) : 401 === parseInt(e.status, 10) || -1 === e.status || 403 === parseInt(e.status, 10) ? self.blockRequests = !0 : 404 === parseInt(e.status, 10) ? e.errorException = s.showWarning("Solicitud incorrecta", "El recurso que ingresÃ³ no se encontrÃ³ en el servidor. Cambie el recurso a uno vÃ¡lido.", s.DANGER) : 408 === parseInt(e.status, 10) ? e.errorException = s.showWarning("Se agotÃ³ el tiempo de espera de la conexiÃ³n", "Se agotÃ³ el tiempo de espera del servidor esperando la solicitud. Repita la solicitud sin modificaciones en cualquier momento posterior.", s.DANGER) : 500 === parseInt(e.status, 10) ? e.errorException = s.showWarning("Error interno del servidor", "El servidor encontrÃ³ una condiciÃ³n inesperada que le impidiÃ³ cumplir con la solicitud.", s.DANGER) : 0 === parseInt(e.status, 10) || (e.errorException = s.showWarning("Servicio no disponible", "El servicio no estÃ¡ disponible por el momento. Por favor, intÃ©ntelo de nuevo mÃ¡s tarde.", s.DANGER)), r.reject(e)
        })
    }, t
}]).constant("appConfig", {
    jiraApiPrefix: jiraApiPrefix,
    jiraAttachment: jiraAttachment,
    jiraApiIssueType: jiraApiIssueType,
    importPrefix: importPrefix,
    jiraComment: jiraComment,
    jiraApiProject: jiraApiProject,
    jiraRestApi: jiraRestApi,
    jiraBrowseUrlPathName: jiraBrowseUrlPathName,
    localStorageKey: localStorageKey,
    securityCATTestApi: securityCATTestApi
}).service("sharedProperties", function() {
    var t;
    return {
        getProperty: function() {
            return t
        },
        setProperty: function(e) {
            t = e
        }
    }
}).service("getRequirementsFromImport", ["$q", function(n) {
    var a;
    return {
        getProperty: function() {
            return a
        },
        setProperty: function(e) {
            var t = n.defer();
            return a = e, t.resolve("Requirements imported."), t.promise
        }
    }
}]).service("authenticatorService", ["$uibModal", "$q", "$interval", "$uibModalStack", "$timeout", "SDLCToolExceptionService", function(n, a, s, e, o, i) {
    return {
        runAuthenticator: function(e) {
            var t = a.defer();
            return "" !== e.url ? n.open({
                size: "lg",
                backdrop: "static",
                templateUrl: "scripts/app/editor/authenticator.modal.html",
                controller: "AuthenticatorController",
                resolve: {
                    jira: function() {
                        return e
                    }
                }
            }).result.then(function() {
                t.resolve("start")
            }, function() {
                t.reject("Ex001")
            }) : t.reject("Ex001"), t.promise
        },
        startCountdown: function(e, t, n) {
            return "" !== n.url ? o(function() {
                s.cancel(e.interval), t.showSpinner = !1, angular.isDefined(t.authenticating) && (t.authenticating = !1), void 0 !== e.runningModalPromise && e.runningModalPromise.close(), e.derefer && e.derefer.reject("Authentication failed"), i.showWarning("Ocurrio un error al autenticarse", "Â¡No pudo autenticarse dentro del intervalo de tiempo! Por favor intente mas tarde.", i.DANGER)
            }, 61e3) : o(function() {
                s.cancel(e.interval)
            }, 9e4)
        },
        cancelPromises: function(e) {
            angular.isDefined(e.interval) && s.cancel(e.interval), angular.isDefined(e.timeout) && o.cancel(e.timeout), void 0 !== e.runningModalPromise && void 0 !== e.runningModalPromise.close && e.runningModalPromise.close()
        },
        startCheckAuthenticationProcess: function(t, n, a, o, i) {
            var r = this;
            !angular.isUndefined(o.interval) && 0 === o.interval.$$state.status || r.runAuthenticator(n).then(function(e) {
                angular.isDefined(a.authenticating) && (a.authenticating = !0), o.interval = s(function() {
                    i(t, n, a, o)
                }, 1e4), o.timeout = r.startCountdown(o, a, n), "start" === e && (a.showSpinner = !0, angular.isDefined(o.runningModalPromise) && (o.runningModalPromise = o.runningModalPromise()))
            }, function(e) {
                angular.isDefined(a.authenticating) && (a.authenticating = !1), a.showSpinner = !1, o.derefer.reject(e), r.cancelPromises(o)
            })
        }
    }
}]).service("helperService", function() {
    return {
        unique: function(e, t) {
            var n = [],
                a = {};
            return angular.forEach(e, function(e) {
                a[e[t]] || (n.push(e), a[e[t]] = e)
            }), n
        }
    }
}).service("SDLCToolExceptionService", ["$uibModal", function(a) {
    return {
        SUCCESS: "success",
        INFO: "info",
        WARNING: "warning",
        DANGER: "danger",
        showWarning: function(e, t, n) {
            return a.open({
                templateUrl: "scripts/app/editor/modal-alert.html",
                controller: "ModalAlertController",
                resolve: {
                    headerText: function() {
                        return e
                    },
                    message: function() {
                        return t
                    },
                    type: function() {
                        return n
                    }
                }
            })
        },
        showPersistentWarning: function(e, t, n) {
            return a.open({
                templateUrl: "scripts/app/editor/persistent-warning.html",
                controller: "ModalAlertController",
                resolve: {
                    headerText: function() {
                        return e
                    },
                    message: function() {
                        return t
                    },
                    type: function() {
                        return n
                    }
                }
            })
        }
    }
}]).filter("filterByTags", function() {
    return function(e, t) {
        return 0 === t.length ? e : -1 < t.indexOf("ERROR") ? e = [] : t
    }
}).filter("filterByCategories", function() {
    return function(e, n) {
        if (0 === n.length) return e;
        var a = [];
        return angular.forEach(e, function(t) {
            angular.forEach(n, function(e) {
                e.id === t.categoryId && a.push(t)
            })
        }), a
    }
}).filter("filterByTagForReqSkeletons", function() {
    return function(e, t) {
        if (0 === t.length) return e;
        var a = [];
        return angular.forEach(t, function(n) {
            angular.forEach(e, function(t) {
                angular.forEach(t.tagInstances, function(e) {
                    n.id === e.id && -1 === a.indexOf(t) && a.push(t)
                })
            })
        }), a
    }
}).filter("filterByCollsForReqSkeletons", function() {
    return function(e, t) {
        if (0 === t.length) return e;
        var a = [];
        return angular.forEach(t, function(n) {
            angular.forEach(e, function(t) {
                angular.forEach(t.collectionInstances, function(e) {
                    n.id === e.id && -1 === a.indexOf(t) && a.push(t)
                })
            })
        }), a
    }
}).filter("filterByTypesForReqSkeletons", function() {
    return function(e, t) {
        if (0 === t.length) return e;
        var a = [];
        return angular.forEach(t, function(n) {
            angular.forEach(e, function(t) {
                angular.forEach(t.projectTypes, function(e) {
                    n.id === e.id && -1 === a.indexOf(t) && a.push(t)
                })
            })
        }), a
    }
}).filter("filterByStatus", ["$filter", function(s) {
    return function(e, a, t) {
        for (var n = !1, o = 0; o < t.length; o++) {
            var i = t[o];
            if (i.isEnum && 0 < a[i.id].length) {
                n = !0;
                break
            }
        }
        if (n) {
            var r = [];
            return angular.forEach(e, function(e) {
                for (var t = 0; t < e.statusColumns.length; t++) {
                    var n = e.statusColumns[t];
                    if (n.isEnum && 0 < s("filter")(a[n.id], {
                            id: n.valueId
                        }).length) {
                        r.push(e);
                        break
                    }
                }
            }), r
        }
        return e
    }
}]).filter("filterTicketStatus", ["$filter", function(i) {
    return function(e, a) {
        if (0 === a.length) return e;
        var o = [];
        return angular.forEach(e, function(e) {
            for (var t = 0; t < a.length; t++) {
                var n = a[t];
                if (angular.equals(n.name.toLowerCase(), "no ticket")) {
                    if (angular.isUndefined(e.linkStatus) || angular.isDefined(e.linkStatus) && 0 === e.linkStatus.ticketStatus.length) {
                        o.push(e);
                        break
                    }
                } else if (angular.isDefined(e.linkStatus) && 0 < i("filter")(e.linkStatus.ticketStatus, {
                        name: n.name
                    }).length) {
                    o.push(e);
                    break
                }
            }
        }), o
    }
}]).filter("filterUpdates", function() {
    return function(e, t) {
        if (0 !== e.length && t) {
            var n = [];
            return angular.forEach(e, function(e) {
                angular.isDefined(e.needsUpdate) && e.needsUpdate && n.push(e)
            }), n
        }
        return e
    }
}).filter("filterCategoryByCategory", function() {
    return function(e, n) {
        if (0 === n.length) return e;
        var a = [];
        return angular.forEach(e, function(t) {
            angular.forEach(n, function(e) {
                t.id === e.id && a.push(t)
            })
        }), a
    }
}).filter("filterCategoryForEntities", function() {
    return function(e, n, a) {
        if (0 === n.length) return e;
        var o = [];
        return angular.forEach(e, function(t) {
            angular.forEach(n, function(e) {
                angular.equals(t[a].id, e.id) && o.push(t)
            })
        }), o
    }
}).filter("filterCategoryForEntitiesObject", function() {
    return function(e, t, a) {
        if (0 === t.length) return e;
        var o = [];
        return angular.forEach(e, function(n) {
            angular.forEach(t, function(e, t) {
                angular.equals(n[a].id, e) && o.push(n)
            })
        }), o
    }
}).filter("trusted", ["$sce", "marked", function(e, t) {
    return function(e) {
        if (angular.isDefined(e) && null !== e) return t(e)
    }
}]).filter("filterOptColumnByText", ["$filter", function(r) {
    return function(e, a, t) {
        if (!$.isEmptyObject(a) && 0 < e.length)
            for (var n = 0; n < t.length; n++) {
                var o = t[n];
                if (angular.isDefined(a[o.id]) && "" !== a[o.id]) {
                    var i = [];
                    return angular.forEach(e, function(e) {
                        for (var t = 0; t < e.optionColumns.length; t++) {
                            var n = e.optionColumns[t];
                            if (angular.isDefined(a[n.showOrder]) && "" !== a[n.id] && 0 < r("filter")(n.content, {
                                    content: a[n.showOrder]
                                }).length) {
                                i.push(e);
                                break
                            }
                        }
                    }), i
                }
            }
        return e
    }
}]).filter("filterStatusColumnByText", ["$filter", function(e) {
    return function(e, a, t) {
        if (!$.isEmptyObject(a) && 0 < e.length)
            for (var n = 0; n < t.length; n++) {
                var o = t[n];
                if (!o.isEnum && angular.isDefined(a[o.id]) && "" !== a[o.id]) {
                    var i = [];
                    return angular.forEach(e, function(e) {
                        for (var t = 0; t < e.statusColumns.length; t++) {
                            var n = e.statusColumns[t];
                            if (!n.isEnum && angular.isDefined(a[n.id]) && "" !== a[n.id] && -1 !== n.value.indexOf(a[n.id])) {
                                i.push(e);
                                break
                            }
                        }
                    }), i
                }
            }
        return e
    }
}]).filter("sanitizeMarked", ["$sanitize", function(t) {
    return function(e) {
        return t(e)
    }
}]), angular.module("sdlctoolApp").constant("ENV", "prod").constant("VERSION", "1.8.4"), angular.module("sdlctoolApp").constant("ENV", "dev").constant("VERSION", "1.8.4-SNAPSHOT"), angular.module("sdlctoolApp").service("Helper", ["$uibModal", "appConfig", function(t, l) {
    return {
        searchArrayByValue: function(n, e) {
            var a = !1;
            return angular.forEach(e, function(e) {
                angular.forEach(e, function(e, t) {
                    e === n && (a = !0)
                })
            }), a
        },
        removeMarkdown: function(e, t) {
            return e = "export" === t ? (e = (e = (e = (e = (e = (e = (e = (e = (e = e.replace(/(\*)/g, "")).replace(/(\s+-\s)/g, "\n")).replace(/(-\s)/g, "")).replace(/(\s+1\.\s)/g, "\n")).replace(/(1\.\s)/g, "")).replace(/#/g, "")).replace(/`/g, "")).replace(/([\[]\S+[\]])/g, "")).replace(/(mailto:)/g, "")).replace(/([\n])+/g, "\n") : (e = (e = (e = (e = (e = (e = (e = e.replace(/(\*\s)/g, "- ")).replace(/(\*)/g, "")).replace(/(1\.\s)/g, "- ")).replace(/#/g, "")).replace(/`/g, "")).replace(/(\s{3,})/g, "\n")).replace(/([\[]\S+[\]])/g, "")).replace(/(mailto:)/g, "")
        },
        validateURLQueueValue: function(e) {
            return !e || (e.startsWith("http") ? new RegExp(urlpattern.javascriptStringRegex, "i") : new RegExp("^[A-Z]+$")).test(e.trim())
        },
        validateURLTicketValue: function(e) {
            return !e || (e.startsWith("http") ? new RegExp(urlpattern.javascriptStringRegex, "i") : new RegExp("^[A-Z]+-\\d+$")).test(e.trim())
        },
        buildJiraUrl: function(e) {
            for (var t = {
                    ticketKey: [],
                    path: []
                }, n = !1, a = 0; a < e.length; a++) angular.equals(e[a], "") ? (e.splice(a, 1), a--) : urlpattern.http.test(e[a]) ? angular.extend(t, {
                http: e[a]
            }) : urlpattern.host.test(e[a]) && !n ? (n = !0, angular.extend(t, {
                host: e[a]
            })) : -1 < e[a].indexOf("-") ? t.ticketKey.push(e[a]) : a < e.length - 1 && t.path.push(e[a]);
            var o = e.length,
                i = e.pop();
            angular.isUndefined(t.projectKey) && 4 <= o && (0 <= i.indexOf("-") ? angular.extend(t, {
                projectKey: i.slice(0, i.indexOf("-"))
            }) : angular.extend(t, {
                projectKey: i
            })), t.jiraUrl = t.http + "//" + t.host;
            for (var r = 0; r < t.path.length; r++) {
                var s = t.path[r];
                if (s === l.jiraBrowseUrlPathName) break;
                t.jiraUrl += "/" + s
            }
            for (t.cachedUrl = t.jiraUrl; r < t.path.length; r++) t.cachedUrl += "/" + t.path[r];
            return t.cachedUrl += "/", t
        },
        buildYAMLFile: function(e) {
            var a = this,
                o = {},
                t = 0,
                n = "",
                i = {};
            return angular.isDefined(e.ticket.url) && (i.url = e.ticket.url), angular.isDefined(e.ticket.key) && (i.key = e.ticket.key), angular.forEach(e.projectType, function(e) {
                t = e.projectTypeId, n = e.name
            }), angular.extend(o, {
                name: e.name,
                ticket: i,
                projectType: [{
                    projectTypeId: t,
                    projectTypeName: n
                }],
                collections: e.collections,
                generatedOn: e.generatedOn,
                lastChanged: e.lastChanged,
                requirementCategories: []
            }), angular.forEach(e.requirements, function(n) {
                var e, t;
                angular.forEach(n.optionColumns, function(e) {
                    angular.forEach(e.content, function(e) {
                        angular.isDefined(e.diffContent) && delete e.diffContent
                    })
                }), a.searchArrayByValue(n.category, o.requirementCategories) ? angular.forEach(o.requirementCategories, function(e) {
                    var t;
                    e.category === n.category && (t = {
                        id: n.id,
                        shortName: n.shortName,
                        showOrder: n.order,
                        universalId: n.universalId,
                        description: n.description,
                        tickets: n.tickets,
                        tagInstances: n.tagInstances,
                        optColumns: n.optionColumns,
                        statusColumns: n.statusColumns
                    }, JSON.parse(l.showProperties.toLowerCase()) && (t.collectionInstances = n.collectionInstances), e.requirements.push(t))
                }) : (e = [], t = {
                    id: n.id,
                    shortName: n.shortName,
                    showOrder: n.order,
                    universalId: n.universalId,
                    description: n.description,
                    tickets: n.tickets,
                    tagInstances: n.tagInstances,
                    optColumns: n.optionColumns,
                    statusColumns: n.statusColumns
                }, JSON.parse(l.showProperties.toLowerCase()) && (t.collectionInstances = n.collectionInstances), e.push(t), o.requirementCategories.push({
                    categoryId: n.categoryId,
                    category: n.category,
                    categoryOrder: n.categoryOrder,
                    requirements: e
                }))
            }), o
        },
        getCurrentDate: function() {
            var e = new Date,
                t = e.getDate(),
                n = e.getMonth() + 1;
            return n < 10 && (n = "0" + n), t < 10 && (t = "0" + t), t + "-" + n + "-" + e.getFullYear()
        },
        getDetailedCurrentDate: function() {
            var e = new Date,
                t = e.getHours(),
                n = e.getMinutes(),
                a = e.getSeconds(),
                o = e.getDate(),
                i = e.getMonth() + 1,
                e = e.getFullYear();
            return t < 10 && (t = "0" + t.toString()), n < 10 && (n = "0" + n.toString()), a < 10 && (a = "0" + a.toString()), o + "-" + i + "-" + e + "_" + t + n + a
        },
        addCheckAuthenticationModal: function(e) {
            angular.extend(e, {
                runningModalPromise: function() {
                    return t.open({
                        template: '<div class="modal-body"><div id="UsSpinner1" class=" text-center col-sm-1" id="UsSpinner" spinner-on="true" us-spinner="{radius:6, width:4, length:6, lines:9}"></div><br/><h4 class="text-center"> JIRA Authentication running...</h4></div>',
                        controller: function() {},
                        size: "sm"
                    })
                }
            })
        }
    }
}]), angular.module("sdlctoolApp").factory("JiraService", ["Helper", "apiFactory", "appConfig", "$q", "SDLCToolExceptionService", function(i, r, s, l, c) {
    var d = s.JIRAIssueLinkTypeName,
        u = s.JIRARemoteIssueLinkRelationshipName;

    function p(e, t) {
        var n = t.jiraUrl + s.jiraApiPrefix + "/",
            a = "";
        switch (e) {
            case "ticket":
                a = t.jiraUrl + s.jiraApiPrefix;
                break;
            case "attachment":
                a = n + t.ticketKey[0] + s.jiraAttachment;
                break;
            case "comment":
                a = n + t.ticketKey[0] + s.jiraComment;
                break;
            case "issueType":
                a = t.jiraUrl + s.jiraApiIssueType;
                break;
            case "project":
                a = t.jiraUrl + s.jiraApiProject;
                break;
            case "issueKey":
                a = n + t.ticketKey[0];
                break;
            case "search":
                a = t.jiraUrl + s.jiraRestApi + "/search";
                break;
            case "issueLink":
                a = t.jiraUrl + s.jiraRestApi + "/issueLink";
                break;
            case "remotelink":
                a = n + t.ticketKey[0] + "/remotelink";
                break;
            case "field":
                a = t.jiraUrl + s.jiraRestApi + "/field"
        }
        return a
    }

    function m(e, t, n) {
        n = {
            object: {
                url: n.url,
                title: t,
                summary: n.fields.summary,
                icon: {
                    url16x16: n.fields.issuetype.iconUrl,
                    title: n.fields.issuetype.description
                },
                status: {
                    icon: {
                        url16x16: n.fields.status.iconUrl,
                        title: n.fields.status.name
                    }
                }
            },
            relationship: u
        };
        return r.postExport(e, n, {
            "X-Atlassian-Token": "nocheck",
            "Content-Type": "application/json"
        })
    }
    return {
        buildUrlCall: p,
        addAttachmentAndComment: function(n, a) {
            try {
                var e = jsyaml.safeDump(a.content),
                    o = s.filenamePrefix + "_" + a.artifactName + "_" + i.getDetailedCurrentDate() + ".yml",
                    t = new Blob([e], {
                        type: "application/x-yaml"
                    }),
                    e = new FormData;
                return e.append("file", t, o), r.postExport(p("attachment", n.apiUrl), e, {
                    "X-Atlassian-Token": "nocheck",
                    "Content-Type": void 0
                }).then(function(e) {
                    var t = s.ticketComment;
                    return t = (t = (t = t.replace("Â§artifact_nameÂ§", a.artifactName)).replace("Â§import_linkÂ§", s.importPrefix + encodeURIComponent(e[0].self) + ".\n")).replace("Â§filenameÂ§", o), e = n, t = {
                        body: t = t
                    }, r.postExport(p("comment", e.apiUrl), t, {
                        "X-Atlassian-Token": "nocheck",
                        "Content-Type": "application/json"
                    })
                }, function(e) {
                    angular.isDefined(a.errorHandlingProperty) && (a.errorHandlingProperty.spinnerProperty.showSpinner = !1), 403 === e.status && c.showWarning("No se pudo agregar el archivo adjunto", "No se pudo adjuntar el archivo YAML al ticket principal. Verifique si el ticket no estÃ¡ cerrado y si tiene permiso para adjuntar archivos.", c.DANGER)
                })
            } catch (e) {
                angular.isDefined(a.errorHandlingProperty) && (a.errorHandlingProperty.spinnerProperty.showSpinner = !1), c.showWarning("No se pudo agregar el archivo adjunto", "No se pudo adjuntar el archivo YAML al ticket principal debido a un error en el anÃ¡lisis del archivo. PÃ³ngase en contacto con los administradores.", c.DANGER)
            }
        },
        addIssueLinks: function(t, e) {
            var n, a = p("issueLink", e.apiUrl),
                o = [],
                i = {
                    type: {
                        name: d
                    },
                    inwardIssue: {
                        key: t.key
                    },
                    outwardIssue: {
                        key: e.key
                    }
                };
            return angular.equals(t.apiUrl.host, e.apiUrl.host) ? o.push(r.postExport(a, i, {
                "X-Atlassian-Token": "nocheck",
                "Content-Type": "application/json"
            })) : (i = p("remotelink", t.apiUrl), o.push(m(i, e.key, e)), n = p("remotelink", e.apiUrl), angular.isUndefined(t.fields) ? o.push(r.getJIRAInfo(p("issueKey", t.apiUrl)).then(function(e) {
                return t.fields = e.fields, m(n, t.key, t)
            })) : o.push(m(n, t.key, t))), Promise.all(o)
        },
        removeIssueLinks: function(a, o) {
            var e = {};
            if (angular.equals(a.apiUrl.host, o.apiUrl.host)) {
                for (var t = l.defer(), n = 0; n < a.fields.issuelinks.length; n++)
                    if (a.fields.issuelinks[n].outwardIssue.key === o.key && a.fields.issuelinks[n].type.name === d) return r.deleteExport(p("issueLink", a.apiUrl) + "/" + a.fields.issuelinks[n].id, {}, {
                        "X-Atlassian-Token": "nocheck"
                    });
                return e.status = 404, t.reject(e), t
            }
            Promise.all([r.getJIRAInfo(p("remotelink", a.apiUrl)), r.getJIRAInfo(p("remotelink", o.apiUrl))]).then(function(e) {
                for (var t = [], n = 0; n < e[0].length; n++) e[0][n].object.title === o.key && e[0].relationship === u && t.push(r.deleteExport(p("remotelink", a.apiUrl) + "/" + e[0].id, {}, {
                    "X-Atlassian-Token": "nocheck"
                }));
                for (n = 0; n < e[1].length; n++) e[1][n].object.title === a.key && e[1].relationship === u && t.push(r.deleteExport(p("remotelink", o.apiUrl) + "/" + e[1].id, {}, {
                    "X-Atlassian-Token": "nocheck"
                }));
                return Promise.all(t)
            }).catch()
        },
        buildJiraUrl: function(e) {
            var t = "";
            return e.startsWith("http") ? t = e : (t = s.defaultJIRAHost, s.defaultJIRAHost.endsWith("/") || (t += "/"), t += "browse/" + e), t
        }
    }
}]), angular.module("sdlctoolApp").service("testAutomation", ["appConfig", "apiFactory", "authenticatorService", function(o, i, r) {
    var s = {
        config: {
            "X-Securitycat-Csrf": "nocheck",
            "Content-Type": "application/json"
        },
        withCredentials: !1
    };

    function e(e, a) {
        return new Promise(function(t, n) {
            i.testRequirementApi("POST", o.securityCATTestApi, e, s, !0, a).then(function(e) {
                e = {
                    location: e.headers().location,
                    config: s
                };
                angular.isDefined(e.location) ? t(e) : n("error")
            }).catch(function(e) {
                n(e)
            })
        })
    }
    return {
        stopTest: function(e, t, n) {
            return e = o.securityCATTestApi + "/" + e, i.testRequirementApi("DELETE", e, "", t, !1, n)
        },
        startTest: e,
        fetchResult: function(e, t) {
            return i.testRequirementApi("GET", e, "", {
                withCredentials: t.withCredentials
            }, !1)
        },
        checkAuthentication: function t(n, a, o, i) {
            return s.withCredentials = !0, e(n, a.url).then(function(e) {
                302 === e.status ? r.startCheckAuthenticationProcess(n, a, o, i, t) : (o.showSpinner = !1, i.derefer.resolve(e), r.cancelPromises(i))
            }).catch(function(e) {
                401 === e.status || 302 === e.status || -1 === e.status ? r.startCheckAuthenticationProcess(n, a, o, i, t) : (o.showSpinner = !1, i.derefer.reject(e), r.cancelPromises(i))
            }), i.derefer.promise
        },
        headerConfig: s
    }
}]), angular.module("sdlctoolApp").factory("checkAuthentication", ["authenticatorService", "apiFactory", function(r, e) {
    return {
        jiraAuth: function t(n, a, o, i) {
            return e.getJIRAInfo(n).then(function(e) {
                0 === e.length ? r.startCheckAuthenticationProcess(n, a, o, i, t) : (angular.isDefined(o.authenticating) && (o.authenticating = !1), o.showSpinner = !1, i.derefer.resolve(e), r.cancelPromises(i))
            }).catch(function(e) {
                401 === e.status || 403 === e.status && -1 !== n.indexOf("attachment/") ? (angular.isDefined(e.errorException) && 0 === e.errorException.opened.$$state.status && (e.errorException.opened.$$state.value = !1, e.errorException.opened.$$state.status = 1), r.startCheckAuthenticationProcess(n, a, o, i, t)) : (angular.isDefined(o.authenticating) && (o.authenticating = !1), o.showSpinner = !1, i.derefer.reject(e), r.cancelPromises(i))
            }), i.derefer.promise
        }
    }
}]), angular.module("sdlctoolApp").factory("Auth", ["$rootScope", "$state", "$q", "Principal", "AuthServerProvider", "Account", "Register", "Activate", "Password", "PasswordResetInit", "PasswordResetFinish", "ConfirmPassword", "$uibModalStack", function(t, n, o, i, r, a, s, l, c, d, u, p, e) {
    return {
        login: function(e, t) {
            var n = t || angular.noop,
                a = o.defer();
            return r.login(e).then(function(t) {
                return i.identity(!0).then(function(e) {
                    a.resolve(t)
                }), n()
            }).catch(function(e) {
                return this.logout(), a.reject(e), n(e)
            }.bind(this)), a.promise
        },
        logout: function() {
            r.logout(), i.authenticate(null), e.dismissAll("dismiss modal")
        },
        authorize: function(e) {
            return i.identity(e).then(function() {
                var e = i.isAuthenticated();
                t.toState.data.roles && 0 < t.toState.data.roles.length && !i.isInAnyRole(t.toState.data.roles) ? e ? n.go("accessdenied") : (t.returnToState = t.toState, t.returnToStateParams = t.toStateParams, n.go("login")) : "login" === t.toState.name && e && n.go("editor")
            })
        },
        createAccount: function(e, t) {
            var n = t || angular.noop;
            return s.save(e, function() {
                return n(e)
            }, function(e) {
                return this.logout(), n(e)
            }.bind(this)).$promise
        },
        updateAccount: function(e, t) {
            var n = t || angular.noop;
            return a.save(e, function() {
                return n(e)
            }, function(e) {
                return n(e)
            }.bind(this)).$promise
        },
        activateAccount: function(e, t) {
            var n = t || angular.noop;
            return l.get(e, function(e) {
                return n(e)
            }, function(e) {
                return n(e)
            }.bind(this)).$promise
        },
        changePassword: function(e, t) {
            var n = t || angular.noop;
            return c.save(e, function() {
                return n()
            }, function(e) {
                return n(e)
            }).$promise
        },
        resetPasswordInit: function(e, t) {
            var n = t || angular.noop;
            return d.save(e, function() {
                return n()
            }, function(e) {
                return n(e)
            }).$promise
        },
        resetPasswordFinish: function(e, t) {
            var n = t || angular.noop;
            return u.save(e, function() {
                return n()
            }, function(e) {
                return n(e)
            }).$promise
        },
        confirmPassword: function(e, t) {
            var n = t || angular.noop;
            return p.save(e, function() {
                return n()
            }, function(e) {
                return n(e)
            }).$promise
        }
    }
}]), angular.module("sdlctoolApp").factory("Principal", ["$q", "Account", function(n, a) {
    var o, i = !1;
    return {
        isIdentityResolved: function() {
            return angular.isDefined(o)
        },
        isAuthenticated: function() {
            return i
        },
        isInRole: function(t) {
            return !!i && this.identity().then(function(e) {
                return e.roles && -1 !== e.roles.indexOf(t)
            }, function(e) {
                return !1
            })
        },
        isInAnyRole: function(e) {
            if (!i || !o || !o.roles) return !1;
            for (var t = 0; t < e.length; t++)
                if (this.isInRole(e[t])) return !0;
            return !1
        },
        authenticate: function(e) {
            i = null !== (o = e)
        },
        identity: function(e) {
            var t = n.defer();
            return !0 === e && (o = void 0), angular.isDefined(o) ? t.resolve(o) : a.get().$promise.then(function(e) {
                o = e.data, i = !0, t.resolve(o)
            }).catch(function() {
                o = null, i = !1, t.resolve(o)
            }), t.promise
        }
    }
}]), angular.module("sdlctoolApp").directive("hasAnyRole", ["Principal", function(r) {
    return {
        restrict: "A",
        link: function(e, t, n) {
            function a() {
                t.removeClass("hidden")
            }

            function o() {
                t.addClass("hidden")
            }
            var i = n.hasAnyRole.replace(/\s+/g, "").split(",");
            0 < i.length && (0 || a(), r.isAuthenticated() ? r.identity().then(function(e) {
                o();
                for (var t = 0; t < i.length; t++) e.roles && 0 <= e.roles.indexOf(i[t]) && a()
            }) : o())
        }
    }
}]).directive("hasRole", ["Principal", function(i) {
    return {
        restrict: "A",
        link: function(e, t, n) {
            function a() {
                t.removeClass("hidden")
            }
            var o = n.hasRole.replace(/\s+/g, "");
            0 < o.length && (0 || a(), i.isInRole(o).then(function(e) {
                e ? a() : t.addClass("hidden")
            }))
        }
    }
}]), angular.module("sdlctoolApp").directive("splitArray", function() {
    "use strict";
    return {
        restrict: "A",
        require: "ngModel",
        link: function(e, t, n, o) {
            var i = JSON.parse(n.splitArray);

            function a(t) {
                var n = [],
                    a = 0;
                if (!angular.isUndefined(t) && "array" === i.type)
                    if (Array.isArray(t) && "user" === i.itemType) {
                        for (; t[a];) {
                            try {
                                n.push(JSON.parse(t[a]).name)
                            } catch (e) {
                                n.push(t[a].name)
                            }
                            a++
                        }
                        return n.join(", ")
                    }
            }
            o.$validators.validCharacters = function(e, t) {
                t = a(e) || t;
                return "user" === i.itemType && /^(\w+,\s*)*\w*$/.test(t)
            }, o.$parsers.push(function(e) {
                if (e) switch (i.type) {
                    case "array":
                        var t = e.split(","),
                            n = [];
                        if ("user" !== i.itemType) break;
                        for (var a = 0; a < t.length; a++) n.push(JSON.stringify({
                            name: t[a].trim()
                        }));
                        return n
                }
            }), o.$formatters.push(a), e.$watchCollection(n.ngModel, function(e, t) {
                if (t !== e) {
                    var n = o.$formatters,
                        a = n.length;
                    for (o.$modelValue = e; a--;) e = n[a](e);
                    o.$viewValue !== e && (o.$viewValue = e, o.$render())
                }
            })
        }
    }
}).directive("actionWithSelected", function() {
    "use strict";
    return {
        scope: {
            enabled: "=actionWithSelected"
        },
        restrict: "A",
        link: function(t, e, n) {
            e.bind("click", function(e) {
                t.enabled || e.off()
            })
        }
    }
}), angular.module("sdlctoolApp").factory("Account", ["$resource", function(e) {
    return e("api/account", {}, {
        get: {
            method: "GET",
            params: {},
            isArray: !1,
            interceptor: {
                response: function(e) {
                    return e
                }
            }
        }
    })
}]), angular.module("sdlctoolApp").factory("Activate", ["$resource", function(e) {
    return e("api/activate", {}, {
        get: {
            method: "GET",
            params: {},
            isArray: !1
        }
    })
}]), angular.module("sdlctoolApp").factory("Password", ["$resource", function(e) {
    return e("api/account/change_password", {}, {})
}]), angular.module("sdlctoolApp").factory("PasswordResetInit", ["$resource", function(e) {
    return e("api/account/reset_password/init", {}, {})
}]), angular.module("sdlctoolApp").factory("PasswordResetFinish", ["$resource", function(e) {
    return e("api/account/reset_password/finish", {}, {})
}]), angular.module("sdlctoolApp").factory("ConfirmPassword", ["$resource", function(e) {
    return e("api/account/confirm_password", {}, {})
}]), angular.module("sdlctoolApp").factory("Register", ["$resource", function(e) {
    return e("api/register", {}, {})
}]), angular.module("sdlctoolApp").directive("showValidation", function() {
    return {
        restrict: "A",
        require: "form",
        link: function(n, e) {
            e.find(".form-group").each(function() {
                var t = $(this),
                    e = t.find("input[ng-model],textarea[ng-model],select[ng-model]");
                0 < e.length && e.each(function() {
                    var e = $(this);
                    n.$watch(function() {
                        return e.hasClass("ng-invalid") && e.hasClass("ng-dirty")
                    }, function(e) {
                        t.toggleClass("has-error", e)
                    })
                })
            })
        }
    }
}), angular.module("sdlctoolApp").directive("maxbytes", ["$q", function(e) {
    function t(e, t) {
        return -1 !== t.indexOf(e, t.length - e.length)
    }

    function o(e) {
        return e.length / 4 * 3 - (t("==", e = e) ? 2 : t("=", e) ? 1 : 0)
    }
    return {
        restrict: "A",
        require: "?ngModel",
        link: function(e, t, n, a) {
            a && (a.$validators.maxbytes = function(e) {
                return a.$isEmpty(e) || o(e) <= n.maxbytes
            })
        }
    }
}]), angular.module("sdlctoolApp").directive("minbytes", ["$q", function(e) {
    function t(e, t) {
        return -1 !== t.indexOf(e, t.length - e.length)
    }

    function o(e) {
        return e.length / 4 * 3 - (t("==", e = e) ? 2 : t("=", e) ? 1 : 0)
    }
    return {
        restrict: "A",
        require: "?ngModel",
        link: function(e, t, n, a) {
            a && (a.$validators.minbytes = function(e) {
                return a.$isEmpty(e) || o(e) >= n.minbytes
            })
        }
    }
}]), angular.module("sdlctoolApp").directive("sdlctoolAppPager", function() {
    return {
        templateUrl: "scripts/components/form/pager.html"
    }
}), angular.module("sdlctoolApp").directive("sdlctoolAppPagination", function() {
    return {
        templateUrl: "scripts/components/form/pagination.html"
    }
}), angular.module("sdlctoolApp").factory("AuditsService", ["$http", function(a) {
    return {
        findAll: function() {
            return a.get("api/audits/all").then(function(e) {
                return e.data
            })
        },
        findByDates: function(e, t) {
            function n(e) {
                return void 0 === e || angular.isString(e) ? e : e.getYear() + "-" + e.getMonth() + "-" + e.getDay()
            }
            return a.get("api/audits/byDates", {
                params: {
                    fromDate: n(e),
                    toDate: n(t)
                }
            }).then(function(e) {
                return e.data
            })
        }
    }
}]), angular.module("sdlctoolApp").factory("LogsService", ["$resource", function(e) {
    return e("api/logs", {}, {
        findAll: {
            method: "GET",
            isArray: !0
        },
        changeLevel: {
            method: "PUT"
        }
    })
}]), angular.module("sdlctoolApp").factory("ConfigurationService", ["$rootScope", "$filter", "$http", function(e, n, t) {
    return {
        get: function() {
            return t.get("configprops").then(function(e) {
                var t = [];
                return angular.forEach(e.data, function(e) {
                    t.push(e)
                }), n("orderBy")(t, "prefix")
            })
        }
    }
}]), angular.module("sdlctoolApp").factory("MonitoringService", ["$rootScope", "$http", function(e, t) {
    return {
        getMetrics: function() {
            return t.get("management/jhimetrics").then(function(e) {
                return e.data
            })
        },
        checkHealth: function() {
            return t.get("management/health").then(function(e) {
                return e.data
            })
        },
        threadDump: function() {
            return t.get("management/threaddump").then(function(e) {
                return e.data
            })
        }
    }
}]), angular.module("sdlctoolApp").factory("ConfigConstant", ["$resource", "DateUtils", function(e, t) {
    return e("admin-api/configConstants/:id", {}, {
        query: {
            method: "GET",
            isArray: !0
        },
        get: {
            method: "GET",
            transformResponse: function(e) {
                return e = angular.fromJson(e)
            }
        },
        update: {
            method: "PUT"
        }
    })
}]), angular.module("sdlctoolApp").factory("ConfigConstantSearch", ["$resource", function(e) {
    return e("admin-api/_search/configConstants/:query", {}, {
        query: {
            method: "GET",
            isArray: !0
        }
    })
}]), angular.module("sdlctoolApp").factory("UserManagement", ["$resource", "DateUtils", function(e, t) {
    return e("admin-api/userAuthorities/:id", {}, {
        query: {
            method: "GET",
            isArray: !0
        },
        get: {
            method: "GET",
            transformResponse: function(e) {
                return e = angular.fromJson(e)
            }
        },
        update: {
            method: "PUT"
        }
    })
}]), angular.module("sdlctoolApp").factory("UserManagementSearch", ["$resource", function(e) {
    return e("admin-api/_search/users/:query", {}, {
        query: {
            method: "GET",
            isArray: !0
        }
    })
}]), angular.module("sdlctoolApp").factory("Authorities", ["$resource", "DateUtils", function(e, t) {
    return e("admin-api/authorities/:id", {}, {
        query: {
            method: "GET",
            isArray: !0
        }
    })
}]), angular.module("sdlctoolApp").factory("authExpiredInterceptor", ["$rootScope", "$q", "$injector", "localStorageService", function(i, r, s, e) {
    return {
        responseError: function(e) {
            var t, n, a, o;
            return 401 == e.status && void 0 !== e.data.path && -1 == e.data.path.indexOf("/api/account") && (t = s.get("Auth"), n = s.get("$state"), a = i.toState, o = i.toStateParams, t.logout(), i.returnToState = a, i.returnToStateParams = o, n.go("login")), r.reject(e)
        }
    }
}]), angular.module("sdlctoolApp").factory("errorHandlerInterceptor", ["$q", "$rootScope", "$timeout", function(a, o, i) {
    return {
        responseError: function(t) {
            var e, n;
            return 401 == t.status && void 0 !== t.data.path && 0 == t.data.path.indexOf("/api/account") || o.$emit("sdlctoolApp.httpError", t), -1 === t.status && null === t.data && (0 < ["frontend-api/", "api/", "admin-api/", "script/app"].filter(function(e) {
                return t.config.url.startsWith(e)
            }).length || -1 !== t.config.url.indexOf(window.location.host)) && null === document.getElementById("redirect") && (e = window.location.origin || window.location.protocol + "//" + window.location.hostname + (window.location.port ? ":" + window.location.port : ""), alert("Your Session has expired. The link " + e + " will be opened in a new tab to refresh your session."), (n = document.createElement("a")).id = "redirect", n.href = e, n.target = "_blank", document.body.appendChild(n), i(function() {
                n.click()
            })), a.reject(t)
        }
    }
}]), angular.module("sdlctoolApp").factory("notificationInterceptor", ["$q", "AlertService", function(e, n) {
    return {
        response: function(e) {
            var t = e.headers("X-sdlctoolApp-alert");
            return angular.isString(t) && n.success(t, {
                param: e.headers("X-sdlctoolApp-params")
            }), e
        }
    }
}]), angular.module("sdlctoolApp").directive("activeLink", ["location", function(i) {
    return {
        restrict: "A",
        link: function(e, t, n) {
            var a = n.activeLink,
                o = (o = n.href).substring(1);
            e.location = i, e.$watch("location.path()", function(e) {
                o === e ? t.addClass(a) : t.removeClass(a)
            })
        }
    }
}]), angular.module("sdlctoolApp").controller("NavbarController", ["$scope", "$state", "Principal", "ENV", "appConfig", function(e, t, n, a, o) {
    e.isAuthenticated = n.isAuthenticated, e.$state = t, e.inProduction = "prod" === a, e.showAssistant = JSON.parse(o.showImportAssistant.toLowerCase())
}]), angular.module("sdlctoolApp").factory("User", ["$resource", function(e) {
    return e("admin-api/users/:login", {}, {
        query: {
            method: "GET",
            isArray: !0
        },
        get: {
            method: "GET",
            transformResponse: function(e) {
                return e = angular.fromJson(e)
            }
        },
        update: {
            method: "PUT"
        }
    })
}]), angular.module("sdlctoolApp").directive("selectAll", ["$filter", function(e) {
    return {
        restrict: "E",
        transclude: !0,
        scope: {
            performSelection: "&onChange",
            filterLength: "@",
            selectedLength: "@"
        },
        template: '<input type="checkbox" id="selectAll" data-ng-model="selection.value" ui-indeterminate="selection.indeterminate" data-ng-change="performSelection({selectionValue: selection.value})">',
        link: function(e, t, n) {
            function a() {
                e.selection = {
                    value: !1,
                    indeterminate: !1
                }, 0 < e.filterLength && (e.selectedLength == e.filterLength ? e.selection.value = !0 : 0 < e.selectedLength && e.selectedLength != e.filterLength && (e.selection.indeterminate = !0))
            }
            e.$watch("filterLength", function(e) {
                a()
            }), e.$watch("selectedLength", function(e) {
                a()
            })
        }
    }
}]), angular.module("sdlctoolApp").service("ProgressBar", ["$interval", "$timeout", function(t, n) {
    this.startProgressbar = function(e) {
        e.intervalPromise = t(function() {
            e.barValue += 1
        }, 150, 95), e.hide = !1, e.showContent = !1
    }, this.finishProgressbar = function(e) {
        angular.isDefined(e.intervalPromise) && (t.cancel(e.intervalPromise), e.intervalPromise = void 0), e.barValue = 100, n(function() {
            e.barValue = 0, e.hide = !0, e.showContent = !0
        }, 2500)
    }
}]), angular.module("sdlctoolApp").filter("characters", function() {
    return function(e, t, n) {
        if (isNaN(t)) return e;
        if (t <= 0) return "";
        if (e && e.length > t) {
            if (e = e.substring(0, t), n)
                for (;
                    " " === e.charAt(e.length - 1);) e = e.substr(0, e.length - 1);
            else {
                n = e.lastIndexOf(" "); - 1 !== n && (e = e.substr(0, n))
            }
            return e + "..."
        }
        return e
    }
}).filter("words", function() {
    return function(e, t) {
        return isNaN(t) ? e : t <= 0 ? "" : (!e || (n = e.split(/\s+/)).length > t && (e = n.slice(0, t).join(" ") + "..."), e);
        var n
    }
}), angular.module("sdlctoolApp").service("Base64", function() {
    var d = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
    this.encode = function(e) {
        for (var t, n, a, o, i, r = "", s = "", l = "", c = 0; c < e.length;) a = (t = e.charCodeAt(c++)) >> 2, o = (3 & t) << 4 | (n = e.charCodeAt(c++)) >> 4, i = (15 & n) << 2 | (s = e.charCodeAt(c++)) >> 6, l = 63 & s, isNaN(n) ? i = l = 64 : isNaN(s) && (l = 64), r = r + d.charAt(a) + d.charAt(o) + d.charAt(i) + d.charAt(l), i = l = s = "";
        return r
    }, this.decode = function(e) {
        var t, n, a, o, i = "",
            r = 0;
        for (e = e.replace(/[^A-Za-z0-9\+\/\=]/g, ""); r < e.length;) t = d.indexOf(e.charAt(r++)) << 2 | (n = d.indexOf(e.charAt(r++))) >> 4, n = (15 & n) << 4 | (a = d.indexOf(e.charAt(r++))) >> 2, i = (3 & a) << 6 | (o = d.indexOf(e.charAt(r++))), String.fromCharCode(t), 64 !== a && String.fromCharCode(n), 64 !== o && String.fromCharCode(i), n = i = ""
    }
}).factory("StorageService", ["$window", function(n) {
    return {
        get: function(e) {
            return JSON.parse(n.localStorage.getItem(e))
        },
        save: function(e, t) {
            n.localStorage.setItem(e, JSON.stringify(t))
        },
        remove: function(e) {
            n.localStorage.removeItem(e)
        },
        clearAll: function() {
            n.localStorage.clear()
        }
    }
}]), angular.module("sdlctoolApp").factory("AlertService", ["$timeout", "$sce", function(n, t) {
    var a = {
            factory: function(e) {
                return i.push({
                    type: e.type,
                    msg: t.trustAsHtml(e.msg),
                    id: e.alertId,
                    timeout: e.timeout,
                    close: function() {
                        return a.closeAlert(this.id)
                    }
                })
            },
            add: function(e) {
                e.alertId = o++;
                var t = this;
                this.factory(e), e.timeout && 0 < e.timeout && n(function() {
                    t.closeAlert(e.alertId)
                }, e.timeout)
            },
            closeAlert: function(e) {
                return this.closeAlertByIndex(i.map(function(e) {
                    return e.id
                }).indexOf(e))
            },
            closeAlertByIndex: function(e) {
                return i.splice(e, 1)
            },
            clear: function() {
                i = []
            },
            get: function() {
                return i
            },
            success: function(e, t) {
                this.add({
                    type: "success",
                    msg: e,
                    params: t,
                    timeout: r
                })
            },
            error: function(e, t) {
                this.add({
                    type: "danger",
                    msg: e,
                    params: t,
                    timeout: r
                })
            },
            info: function(e, t) {
                this.add({
                    type: "info",
                    msg: e,
                    params: t,
                    timeout: r
                })
            },
            warning: function(e, t) {
                this.add({
                    type: "warning",
                    msg: e,
                    params: t,
                    timeout: r
                })
            }
        },
        o = 0,
        i = [],
        r = 5e3;
    return a
}]), angular.module("sdlctoolApp").directive("jhAlert", ["AlertService", function(t) {
    return {
        restrict: "E",
        template: '<div class="alerts" ng-cloak=""><uib-alert ng-cloak="" ng-repeat="alert in alerts" type="{{alert.type}}" close="alert.close()"><pre>{{ alert.msg }}</pre></uib-alert></div>',
        controller: ["$scope", function(e) {
            e.alerts = t.get(), e.$on("$destroy", function() {
                e.alerts = []
            })
        }]
    }
}]).directive("jhAlertError", ["AlertService", "$rootScope", function(a, n) {
    return {
        restrict: "E",
        template: '<div class="alerts" ng-cloak=""><uib-alert ng-cloak="" ng-repeat="alert in alerts" type="{{alert.type}}" close="alert.close()"><pre>{{ alert.msg }}</pre></uib-alert></div>',
        controller: ["$scope", function(e) {
            e.alerts = a.get();
            var t = n.$on("sdlctoolApp.httpError", function(e, t) {
                var n;
                switch (e.stopPropagation(), t.status) {
                    case 0:
                        i("Server not reachable", "error.serverNotReachable");
                        break;
                    case 400:
                        if (t.data && t.data.fieldErrors)
                            for (n = 0; n < t.data.fieldErrors.length; n++) {
                                var a = t.data.fieldErrors[n],
                                    o = a.field.replace(/\[\d*\]/g, "[]"),
                                    o = o.charAt(0).toUpperCase() + o.slice(1);
                                i("Field " + o + " cannot be empty", "error." + a.message, {
                                    fieldName: o
                                })
                            } else t.data && t.data.message ? i(t.data.message, t.data.message, t.data) : i(t.data);
                        break;
                    default:
                        t.data && t.data.message ? i(t.data.message) : i(JSON.stringify(t))
                }
            });
            e.$on("$destroy", function() {
                null != t && t()
            });
            var i = function(e, t, n) {
                a.error(e)
            }
        }]
    }
}]), angular.module("sdlctoolApp").service("ParseLinks", function() {
    this.parse = function(e) {
        if (0 == e.length) throw new Error("input must not be of zero length");
        var e = e.split(","),
            n = {};
        return angular.forEach(e, function(e) {
            var t = e.split(";");
            if (2 != t.length) throw new Error("section could not be split on ';'");
            var e = t[0].replace(/<(.*)>/, "$1").trim(),
                o = {};
            e.replace(new RegExp("([^?=&]+)(=([^&]*))?", "g"), function(e, t, n, a) {
                o[t] = a
            });
            e = o.page;
            angular.isString(e) && (e = parseInt(e));
            t = t[1].replace(/rel="(.*)"/, "$1").trim();
            n[t] = e
        }), n
    }
}), angular.module("sdlctoolApp").service("DateUtils", function() {
    this.convertLocaleDateToServer = function(e) {
        if (e) {
            var t = new Date;
            return t.setUTCDate(e.getDate()), t.setUTCMonth(e.getMonth()), t.setUTCFullYear(e.getFullYear()), t
        }
        return null
    }, this.convertLocaleDateFromServer = function(e) {
        if (e) {
            e = e.split("-");
            return new Date(e[0], e[1] - 1, e[2])
        }
        return null
    }, this.convertDateTimeFromServer = function(e) {
        return e ? new Date(e) : null
    }
}), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("account", {
        abstract: !0,
        parent: "site"
    })
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("activate", {
        parent: "account",
        url: "/activate?key",
        data: {
            roles: [],
            pageTitle: "Activation"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/account/activate/activate.html",
                controller: "ActivationController"
            }
        },
        resolve: {}
    })
}]), angular.module("sdlctoolApp").controller("ActivationController", ["$scope", "$stateParams", "Auth", function(e, t, n) {
    n.activateAccount({
        key: t.key
    }).then(function() {
        e.error = null, e.success = "OK"
    }).catch(function() {
        e.success = null, e.error = "ERROR"
    })
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("login", {
        parent: "account",
        url: "/login",
        data: {
            roles: [],
            pageTitle: "Authentication"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/account/login/login.html",
                controller: "LoginController"
            }
        },
        resolve: {}
    })
}]), angular.module("sdlctoolApp").controller("LoginController", ["$rootScope", "$scope", "$state", "$timeout", "Auth", function(t, n, a, e, o) {
    n.user = {}, n.errors = {}, n.rememberMe = !0, $("#username").focus(), e(function() {
        $("#username").focus()
    }), n.login = function(e) {
        e.preventDefault(), o.login({
            username: n.username,
            password: n.password,
            rememberMe: n.rememberMe
        }).then(function() {
            n.authenticationError = !1, "register" === t.previousStateName ? a.go("editor") : t.back()
        }).catch(function() {
            n.authenticationError = !0
        })
    }
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("logout", {
        parent: "account",
        url: "/logout",
        data: {
            roles: []
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/account/logout/logout.html",
                controller: "LogoutController"
            }
        }
    })
}]), angular.module("sdlctoolApp").controller("LogoutController", ["Auth", function(e) {
    e.logout()
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("password", {
        parent: "account",
        url: "/password",
        data: {
            roles: ["ROLE_FRONTEND_USER", "ROLE_USER", "ROLE_ADMIN"],
            pageTitle: "Password"
        },
        params: {
            confirmed: !1
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/account/password/password.html",
                controller: "PasswordController"
            }
        },
        onEnter: ["$state", "$stateParams", "$timeout", function(e, t, n) {
            t.confirmed || n(function() {
                e.go("confirmPassword")
            })
        }],
        resolve: {}
    })
}]), angular.module("sdlctoolApp").controller("PasswordController", ["$scope", "Auth", "Principal", "$state", function(t, e, n, a) {
    t.passwordPattern = new RegExp("^(?=[A-Z\\da-z\\!\"\\#\\$\\%\\&\\'\\(\\)\\*\\.\\-\\,\\/\\:\\;\\<\\=\\>\\?\\@\\[\\]\\^\\_\\`\\{\\}\\|\\~\\+]*[a-z])(?=[A-Z\\da-z\\!\"\\#\\$\\%\\&\\'\\(\\)\\*\\.\\-\\,\\/\\:\\;\\<\\=\\>\\?\\@\\[\\]\\^\\_\\`\\{\\}\\|\\~\\+]*[A-Z])(?=[A-Z\\da-z\\!\"\\#\\$\\%\\&\\'\\(\\)\\*\\.\\-\\,\\/\\:\\;\\<\\=\\>\\?\\@\\[\\]\\^\\_\\`\\{\\}\\|\\~\\+]*\\d)(?=[A-Z\\da-z\\!\"\\#\\$\\%\\&\\'\\(\\)\\*\\.\\-\\,\\/\\:\\;\\<\\=\\>\\?\\@\\[\\]\\^\\_\\`\\{\\}\\|\\~\\+]*[\\!\"\\#\\$\\%\\&\\'\\(\\)\\*\\.\\-\\,\\/\\:\\;\\<\\=\\>\\?\\@\\[\\]\\^\\_\\`\\{\\}\\|\\~\\+])[A-Z\\da-z\\!\"\\#\\$\\%\\&\\'\\(\\)\\*\\.\\-\\,\\/\\:\\;\\<\\=\\>\\?\\@\\[\\]\\^\\_\\`\\{\\}\\|\\~\\+]+$"), n.identity().then(function(e) {
        t.account = e
    }), t.success = null, t.error = null, t.doNotMatch = null, t.changePassword = function() {
        t.password !== t.confirmPassword ? t.doNotMatch = "ERROR" : (t.doNotMatch = null, e.changePassword(t.password).then(function() {
            t.error = null, t.success = "OK", a.go("editor")
        }).catch(function() {
            t.success = null, t.error = "ERROR"
        }))
    }
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("confirmPassword", {
        parent: "account",
        url: "/confirmPassword",
        data: {
            roles: ["ROLE_FRONTEND_USER", "ROLE_USER", "ROLE_ADMIN"],
            pageTitle: "Confirm Password"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/account/confirmPassword/confirmPassword.html",
                controller: "ConfirmPasswordController"
            }
        },
        resolve: {}
    })
}]), angular.module("sdlctoolApp").controller("ConfirmPasswordController", ["$rootScope", "$scope", "Auth", "$state", "$timeout", function(t, n, a, o, e) {
    e(function() {
        angular.element('[ng-model="password"]').focus()
    }), n.confirm = function(e) {
        a.confirmPassword(n.password).then(function() {
            n.authenticationError = !1, o.go(t.previousStateName, {
                confirmed: !0
            })
        }).catch(function() {
            n.authenticationError = !0
        })
    }
}]), angular.module("sdlctoolApp").directive("passwordStrengthBar", function() {
    return {
        replace: !0,
        restrict: "E",
        template: '<div id="strength"><small translate="global.messages.validate.newpassword.strength">Seguridad de la contraseÃ±a:</small><ul id="strengthBar"><li class="point"></li><li class="point"></li><li class="point"></li><li class="point"></li><li class="point"></li></ul></div>',
        link: function(e, t, n) {
            var a = {
                colors: ["#F00", "#F90", "#FF0", "#9F0", "#0F0"],
                mesureStrength: function(e) {
                    var t = 0,
                        n = [/[a-z]+/.test(e), /[A-Z]+/.test(e), /[0-9]+/.test(e), /[#%$'()*+,.;<=>@|}/:-?{-~!"^_`\[\]]/g.test(e)],
                        n = $.grep(n, function(e) {
                            return !0 === e
                        }).length;
                    return t += 2 * e.length + (10 <= e.length ? 1 : 0), t += 10 * n, t = e.length <= 8 ? Math.min(t, 35) : t, t = 1 === n ? Math.min(t, 10) : t, t = 2 === n ? Math.min(t, 20) : t, t = 3 === n ? Math.min(t, 40) : t
                },
                getColor: function(e) {
                    var t = 0;
                    return {
                        idx: (t = e <= 10 ? 0 : e <= 20 ? 1 : e <= 35 ? 2 : e <= 60 ? 3 : 4) + 1,
                        col: this.colors[t]
                    }
                }
            };
            e.$watch(n.passwordToCheck, function(e) {
                e ? (e = a.getColor(a.mesureStrength(e)), t.removeClass("ng-hide"), t.find("ul").children("li").css({
                    background: "#DDD"
                }).slice(0, e.idx).css({
                    background: e.col
                })) : t.find("ul").children("li").css("background-color", "#DDD")
            })
        }
    }
}), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("register", {
        parent: "account",
        url: "/register",
        data: {
            roles: [],
            pageTitle: "Registration"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/account/register/register.html",
                controller: "RegisterController"
            }
        },
        resolve: {}
    })
}]), angular.module("sdlctoolApp").controller("RegisterController", ["$scope", "$timeout", "Auth", function(t, e, n) {
    t.success = null, t.error = null, t.doNotMatch = null, t.errorUserExists = null;
    t.passwordPattern = new RegExp("^(?=[\\w\\!\"\\#\\$\\%\\&\\'\\(\\)\\*\\.\\-\\,\\/\\:\\;\\<\\=\\>\\?\\@\\[\\]\\^\\`\\{\\}\\|\\~\\+]*[a-z])(?=[\\w\\!\"\\#\\$\\%\\&\\'\\(\\)\\*\\.\\-\\,\\/\\:\\;\\<\\=\\>\\?\\@\\[\\]\\^\\`\\{\\}\\|\\~\\+]*[A-Z])(?=[\\w\\!\"\\#\\$\\%\\&\\'\\(\\)\\*\\.\\-\\,\\/\\:\\;\\<\\=\\>\\?\\@\\[\\]\\^\\`\\{\\}\\|\\~\\+]*\\d)(?=[\\w\\!\"\\#\\$\\%\\&\\'\\(\\)\\*\\.\\-\\,\\/\\:\\;\\<\\=\\>\\?\\@\\[\\]\\^\\`\\{\\}\\|\\~\\+]*[\\!\"\\#\\$\\%\\&\\'\\(\\)\\*\\.\\-\\,\\/\\:\\;\\<\\=\\>\\?\\@\\[\\]\\^\\_\\`\\{\\}\\|\\~\\+])[\\w\\!\"\\#\\$\\%\\&\\'\\(\\)\\*\\.\\-\\,\\/\\:\\;\\<\\=\\>\\?\\@\\[\\]\\^\\`\\{\\}\\|\\~\\+]+$"), t.registerAccount = {}, e(function() {
        angular.element('[ng-model="registerAccount.login"]').focus()
    }), t.register = function() {
        t.registerAccount.password !== t.confirmPassword ? t.doNotMatch = "ERROR" : (t.registerAccount.langKey = "en", t.doNotMatch = null, t.error = null, t.errorUserExists = null, t.errorEmailExists = null, n.createAccount(t.registerAccount).then(function() {
            t.success = "OK"
        }).catch(function(e) {
            t.success = null, 400 === e.status && "login already in use" === e.data ? t.errorUserExists = "ERROR" : 400 === e.status && "e-mail address already in use" === e.data ? t.errorEmailExists = "ERROR" : t.error = "ERROR"
        }))
    }
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("settings", {
        parent: "account",
        url: "/settings",
        data: {
            roles: ["ROLE_FRONTEND_USER", "ROLE_USER", "ROLE_ADMIN"],
            pageTitle: "Settings"
        },
        params: {
            confirmed: !1
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/account/settings/settings.html",
                controller: "SettingsController"
            }
        },
        onEnter: ["$state", "$stateParams", "$timeout", function(e, t, n) {
            t.confirmed || n(function() {
                e.go("confirmPassword")
            })
        }],
        resolve: {}
    })
}]), angular.module("sdlctoolApp").controller("SettingsController", ["$scope", "Principal", "Auth", function(t, e, n) {
    t.success = null, t.error = null, e.identity(!0).then(function(e) {
        t.settingsAccount = e
    }), t.save = function() {
        n.updateAccount(t.settingsAccount).then(function() {
            t.error = null, t.success = "OK", e.identity().then(function(e) {
                t.settingsAccount = e
            })
        }).catch(function() {
            t.success = null, 400 === response.status && "login already in use" === response.data ? t.errorUserExists = "ERROR" : 400 === response.status && "e-mail address already in use" === response.data ? t.errorEmailExists = "ERROR" : t.error = "ERROR"
        })
    }
}]), angular.module("sdlctoolApp").controller("ResetFinishController", ["$scope", "$stateParams", "$timeout", "Auth", function(t, e, n, a) {
    t.keyMissing = void 0 === e.key, t.doNotMatch = null;
    t.passwordPattern = new RegExp("^(?=[A-Z\\da-z\\!\"\\#\\$\\%\\&\\'\\(\\)\\*\\.\\-\\,\\/\\:\\;\\<\\=\\>\\?\\@\\[\\]\\^\\_\\`\\{\\}\\|\\~\\+]*[a-z])(?=[A-Z\\da-z\\!\"\\#\\$\\%\\&\\'\\(\\)\\*\\.\\-\\,\\/\\:\\;\\<\\=\\>\\?\\@\\[\\]\\^\\_\\`\\{\\}\\|\\~\\+]*[A-Z])(?=[A-Z\\da-z\\!\"\\#\\$\\%\\&\\'\\(\\)\\*\\.\\-\\,\\/\\:\\;\\<\\=\\>\\?\\@\\[\\]\\^\\_\\`\\{\\}\\|\\~\\+]*\\d)(?=[A-Z\\da-z\\!\"\\#\\$\\%\\&\\'\\(\\)\\*\\.\\-\\,\\/\\:\\;\\<\\=\\>\\?\\@\\[\\]\\^\\_\\`\\{\\}\\|\\~\\+]*[\\!\"\\#\\$\\%\\&\\'\\(\\)\\*\\.\\-\\,\\/\\:\\;\\<\\=\\>\\?\\@\\[\\]\\^\\_\\`\\{\\}\\|\\~\\+])[A-Z\\da-z\\!\"\\#\\$\\%\\&\\'\\(\\)\\*\\.\\-\\,\\/\\:\\;\\<\\=\\>\\?\\@\\[\\]\\^\\_\\`\\{\\}\\|\\~\\+]+$"), t.resetAccount = {}, n(function() {
        angular.element('[ng-model="resetAccount.password"]').focus()
    }), t.finishReset = function() {
        t.resetAccount.password !== t.confirmPassword ? t.doNotMatch = "ERROR" : a.resetPasswordFinish({
            key: e.key,
            newPassword: t.resetAccount.password
        }).then(function() {
            t.success = "OK"
        }).catch(function(e) {
            t.success = null, t.error = "ERROR"
        })
    }
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("finishReset", {
        parent: "account",
        url: "/reset/finish?key",
        data: {
            roles: []
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/account/reset/finish/reset.finish.html",
                controller: "ResetFinishController"
            }
        },
        resolve: {}
    })
}]), angular.module("sdlctoolApp").controller("RequestResetController", ["$scope", "$state", "$timeout", "Auth", function(t, e, n, a) {
    t.success = null, t.error = null, t.errorEmailNotExists = null, t.resetAccount = {}, n(function() {
        angular.element('[ng-model="resetAccount.email"]').focus()
    }), t.requestReset = function() {
        t.error = null, t.errorEmailNotExists = null, a.resetPasswordInit(t.resetAccount.email).then(function() {
            t.success = "OK"
        }).catch(function(e) {
            t.success = null, 400 === e.status && "e-mail address not registered" === e.data ? t.errorEmailNotExists = "ERROR" : t.error = "ERROR"
        })
    }
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("requestReset", {
        parent: "account",
        url: "/reset/request",
        data: {
            roles: []
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/account/reset/request/reset.request.html",
                controller: "RequestResetController"
            }
        },
        resolve: {}
    })
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("admin", {
        abstract: !0,
        parent: "site"
    })
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("audits", {
        parent: "admin",
        url: "/audits",
        data: {
            roles: ["ROLE_ADMIN"],
            pageTitle: "Audits"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/admin/audits/audits.html",
                controller: "AuditsController"
            }
        },
        resolve: {}
    })
}]), angular.module("sdlctoolApp").controller("AuditsController", ["$scope", "$filter", "AuditsService", function(n, a, o) {
    n.onChangeDate = function() {
        var e = "yyyy-MM-dd",
            t = a("date")(n.fromDate, e),
            e = a("date")(n.toDate, e);
        o.findByDates(t, e).then(function(e) {
            n.audits = e
        })
    }, n.today = function() {
        var e = new Date;
        n.toDate = new Date(e.getFullYear(), e.getMonth(), e.getDate() + 1)
    }, n.previousMonth = function() {
        var e = 0 === (e = new Date).getMonth() ? new Date(e.getFullYear() - 1, 0, e.getDate()) : new Date(e.getFullYear(), e.getMonth() - 1, e.getDate());
        n.fromDate = e
    }, n.today(), n.previousMonth(), n.onChangeDate()
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("configuration", {
        parent: "admin",
        url: "/configuration",
        data: {
            roles: ["ROLE_ADMIN"],
            pageTitle: "Configuration"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/admin/configuration/configuration.html",
                controller: "ConfigurationController"
            }
        },
        resolve: {}
    })
}]), angular.module("sdlctoolApp").controller("ConfigurationController", ["$scope", "ConfigurationService", function(t, e) {
    e.get().then(function(e) {
        t.configuration = e
    })
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("docs", {
        parent: "admin",
        url: "/docs",
        data: {
            roles: ["ROLE_ADMIN"],
            pageTitle: "API"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/admin/docs/docs.html"
            }
        }
    })
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("health", {
        parent: "admin",
        url: "/apphealth",
        data: {
            roles: ["ROLE_ADMIN"],
            pageTitle: "Health checks"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/admin/health/health.html",
                controller: "HealthController"
            }
        },
        resolve: {}
    })
}]), angular.module("sdlctoolApp").controller("HealthController", ["$scope", "MonitoringService", "$uibModal", function(s, e, t) {
    s.updatingHealth = !0, s.separator = ".", s.refresh = function() {
        s.updatingHealth = !0, e.checkHealth().then(function(e) {
            s.healthData = s.transformHealthData(e), s.updatingHealth = !1
        }, function(e) {
            s.healthData = s.transformHealthData(e.data), s.updatingHealth = !1
        })
    }, s.refresh(), s.getLabelClass = function(e) {
        return "UP" === e ? "label-success" : "label-danger"
    }, s.transformHealthData = function(e) {
        var t = [];
        return s.flattenHealthData(t, null, e), t
    }, s.flattenHealthData = function(n, a, e) {
        var t = e;
        return e.hasOwnProperty("components") && (t = e.components), angular.forEach(t, function(e, t) {
            s.isHealthObject(e) && (s.hasSubSystem(e) ? (s.addHealthObject(n, !1, e.details, s.getModuleName(a, t)), s.flattenHealthData(n, s.getModuleName(a, t), e.details)) : s.addHealthObject(n, !0, e, s.getModuleName(a, t)))
        }), n
    }, s.getModuleName = function(e, t) {
        t = e && t ? e + s.separator + t : e || t || "";
        return t
    }, s.showHealth = function(e) {
        t.open({
            templateUrl: "scripts/app/admin/health/health.modal.html",
            controller: "HealthModalController",
            size: "lg",
            resolve: {
                currentHealth: function() {
                    return e
                },
                baseName: function() {
                    return s.baseName
                },
                subSystemName: function() {
                    return s.subSystemName
                }
            }
        })
    }, s.addHealthObject = function(e, t, n, a) {
        var o = {
                name: a
            },
            i = {},
            r = !1;
        return angular.forEach(n, function(e, t) {
            "status" === t || "error" === t ? o[t] = e : s.isHealthObject(e) || (i[t] = e, r = !0)
        }), r && angular.extend(o, {
            details: i
        }), (t || r || o.error) && e.push(o), o
    }, s.hasSubSystem = function(e) {
        var t = !1;
        return angular.forEach(e, function(e) {
            e && e.status && (t = !0)
        }), t
    }, s.isHealthObject = function(e) {
        var n = !1;
        return angular.forEach(e, function(e, t) {
            "status" === t && (n = !0)
        }), n
    }, s.baseName = function(e) {
        if (e) return e.split(".")[0]
    }, s.subSystemName = function(e) {
        if (e) {
            e = e.split(".");
            e.splice(0, 1);
            e = e.join(".");
            return e ? " - " + e : ""
        }
    }
}]), angular.module("sdlctoolApp").controller("HealthModalController", ["$scope", "$uibModalInstance", "currentHealth", "baseName", "subSystemName", function(e, t, n, a, o) {
    e.currentHealth = n, e.baseName = a, e.subSystemName = o, e.cancel = function() {
        t.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("metrics", {
        parent: "admin",
        url: "/appmetrics",
        data: {
            roles: ["ROLE_ADMIN"],
            pageTitle: "Application Metrics"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/admin/metrics/metrics.html",
                controller: "MetricsController"
            }
        },
        resolve: {}
    })
}]), angular.module("sdlctoolApp").controller("MetricsController", ["$scope", "MonitoringService", "$uibModal", function(a, e, t) {
    a.metrics = {}, a.updatingMetrics = !0, a.refresh = function() {
        a.updatingMetrics = !0, e.getMetrics().then(function(e) {
            a.metrics = e, a.updatingMetrics = !1
        }, function(e) {
            a.metrics = e.data, a.updatingMetrics = !1
        })
    }, a.$watch("metrics", function(e) {
        a.servicesStats = {}, a.cachesStats = {}, angular.forEach(e.timers, function(e, t) {
            var n; - 1 === t.indexOf("web.rest") && -1 === t.indexOf("service") || (a.servicesStats[t] = e), -1 !== t.indexOf("net.sf.ehcache.Cache") && (n = t.lastIndexOf("."), n = (t = t.substr(0, n)).lastIndexOf("."), a.cachesStats[t] = {
                name: t.substr(n + 1),
                value: e
            })
        })
    }), a.refresh(), a.refreshThreadDumpData = function() {
        e.threadDump().then(function(e) {
            t.open({
                templateUrl: "scripts/app/admin/metrics/metrics.modal.html",
                controller: "MetricsModalController",
                size: "lg",
                resolve: {
                    threadDump: function() {
                        return e
                    }
                }
            })
        })
    }
}]), angular.module("sdlctoolApp").controller("MetricsModalController", ["$scope", "$uibModalInstance", "threadDump", function(t, e, n) {
    t.threadDump = n, t.threadDumpRunnable = 0, t.threadDumpWaiting = 0, t.threadDumpTimedWaiting = 0, t.threadDumpBlocked = 0, angular.forEach(n, function(e) {
        "RUNNABLE" === e.threadState ? t.threadDumpRunnable += 1 : "WAITING" === e.threadState ? t.threadDumpWaiting += 1 : "TIMED_WAITING" === e.threadState ? t.threadDumpTimedWaiting += 1 : "BLOCKED" === e.threadState && (t.threadDumpBlocked += 1)
    }), t.threadDumpAll = t.threadDumpRunnable + t.threadDumpWaiting + t.threadDumpTimedWaiting + t.threadDumpBlocked, t.cancel = function() {
        e.dismiss("cancel")
    }, t.getLabelClass = function(e) {
        return "RUNNABLE" === e ? "label-success" : "WAITING" === e ? "label-info" : "TIMED_WAITING" === e ? "label-warning" : "BLOCKED" === e ? "label-danger" : void 0
    }
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("configConstant", {
        parent: "admin",
        url: "/configConstants",
        data: {
            roles: ["ROLE_ADMIN"],
            pageTitle: "configConstants"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/admin/configConstant/configConstant.html",
                controller: "ConfigConstantController"
            }
        },
        resolve: {}
    }).state("configConstant.detail", {
        parent: "admin",
        url: "/configConstant/{id}",
        data: {
            roles: ["ROLE_ADMIN"],
            pageTitle: "configConstant"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/admin/configConstant/configConstant-detail.html",
                controller: "ConfigConstantDetailController"
            }
        },
        resolve: {
            entity: ["$stateParams", "ConfigConstant", function(e, t) {
                return t.get({
                    id: e.id
                })
            }]
        }
    }).state("configConstant.edit", {
        parent: "configConstant",
        url: "/{id}/edit",
        data: {
            roles: ["ROLE_ADMIN"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(t, n, e) {
            e.open({
                templateUrl: "scripts/app/admin/configConstant/configConstant-dialog.html",
                controller: "ConfigConstantDialogController",
                size: "lg",
                resolve: {
                    entity: ["ConfigConstant", function(e) {
                        return e.get({
                            id: t.id
                        })
                    }]
                }
            }).result.then(function(e) {
                n.go("configConstant", null, {
                    reload: !0
                })
            }, function() {
                n.go("^")
            })
        }]
    })
}]), angular.module("sdlctoolApp").controller("ConfigConstantController", ["$scope", "ConfigConstant", "ConfigConstantSearch", "$http", "$filter", function(t, n, e, a, o) {
    t.constants = [], t.activate = !1, t.testAutomation = {
        name: "securityCAT",
        value: "",
        description: "The URL for the SecurityCAT application."
    }, t.loadAll = function() {
        t.activate = !1, n.query(function(e) {
            t.constants = e, 1 === o("filter")(e, {
                name: t.testAutomation.name
            }).length && (t.activate = !0)
        })
    }, t.loadAll(), t.delete = function(e) {
        n.get({
            id: e
        }, function(e) {
            t.constant = e, $("#deleteConfigConstantConfirmation").appendTo("body").modal("show")
        })
    }, t.confirmDelete = function(e) {
        n.delete({
            id: e
        }, function() {
            t.loadAll(), $("#deleteConfigConstantConfirmation").modal("hide"), t.clear()
        })
    }, t.search = function() {
        e.query({
            query: t.searchQuery
        }, function(e) {
            t.constants = e
        }, function(e) {
            404 === e.status && t.loadAll()
        })
    }, t.activateTestAutomation = function() {
        var e = o("filter")(t.constants, {
            name: t.testAutomation.name
        });
        t.activate ? 0 === e.length && n.save(t.testAutomation, t.refresh) : 1 === e.length && t.delete(e.pop().id)
    }, t.checkSecurityCAT = function() {
        var e = o("filter")(t.constants, {
            name: t.testAutomation.name
        });
        return t.activate && 1 === e.length && "" === e.pop().value
    }, t.refresh = function() {
        t.loadAll(), t.clear()
    }, t.clear = function() {
        t.constant = {
            name: null,
            description: null,
            id: null
        }
    }
}]), angular.module("sdlctoolApp").controller("ConfigConstantDetailController", ["$scope", "$rootScope", "$stateParams", "entity", "ConfigConstant", function(n, e, t, a, o) {
    n.constant = a, n.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            n.constant = e
        })
    }, e.$on("sdlctoolApp:configConstantUpdate", function(e, t) {
        n.constant = t
    })
}]), angular.module("sdlctoolApp").controller("ConfigConstantDialogController", ["$scope", "$stateParams", "$uibModalInstance", "entity", "ConfigConstant", function(t, e, n, a, o) {
    t.constant = a, t.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            t.constant = e
        })
    };

    function i(e) {
        t.$emit("sdlctoolApp:configConstantUpdate", e), n.close(e)
    }
    t.save = function() {
        null != t.constant.id ? o.update(t.constant, i) : o.save(t.constant, i)
    }, t.clear = function() {
        n.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("userManagement", {
        parent: "admin",
        url: "/userManagement",
        data: {
            roles: ["ROLE_ADMIN"],
            pageTitle: "userManagement"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/admin/userManagement/userManagement.html",
                controller: "UserManagementController"
            }
        },
        resolve: {}
    }).state("userManagement.detail", {
        parent: "userManagement",
        url: "/userManagement/{id}",
        data: {
            roles: ["ROLE_ADMIN"],
            pageTitle: "userManagement"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/admin/userManagement/userManagement-detail.html",
                controller: "UserManagementDetailController"
            }
        },
        resolve: {
            entity: ["$stateParams", "UserManagement", function(e, t) {
                return t.get({
                    id: e.id
                })
            }]
        }
    }).state("userManagement.new", {
        parent: "userManagement",
        url: "/new",
        data: {
            roles: ["ROLE_ADMIN"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(e, t, n) {
            n.open({
                templateUrl: "scripts/app/admin/userManagement/userManagement-dialog.html",
                controller: "UserManagementDialogController",
                size: "lg",
                resolve: {
                    entity: function() {
                        return {
                            login: null,
                            firstName: null,
                            lastName: null,
                            email: null
                        }
                    }
                }
            }).result.then(function(e) {
                t.go("userManagement", null, {
                    reload: !0
                })
            }, function() {
                t.go("userManagement")
            })
        }]
    }).state("userManagement.edit", {
        parent: "userManagement",
        url: "/{id}/edit",
        data: {
            roles: ["ROLE_ADMIN"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(t, n, e) {
            e.open({
                templateUrl: "scripts/app/admin/userManagement/userManagement-dialog.html",
                controller: "UserManagementDialogController",
                size: "lg",
                resolve: {
                    entity: ["UserManagement", function(e) {
                        return e.get({
                            id: t.id
                        })
                    }]
                }
            }).result.then(function(e) {
                n.go("userManagement", null, {
                    reload: !0
                })
            }, function() {
                n.go("^")
            })
        }]
    })
}]), angular.module("sdlctoolApp").controller("UserManagementController", ["$scope", "UserManagement", "User", "Account", "AlertService", function(t, e, n, a, o) {
    t.usersWithAuthorities = [], t.activeUser = {}, a.get(function(e) {
        t.activeUser = e.data
    }), t.loadAll = function() {
        e.query(function(e) {
            t.usersWithAuthorities = e
        })
    }, t.removeRolePrefix = function(e) {
        return e.replace("ROLE_", "")
    }, t.loadAll();

    function i(e) {
        t.$emit("sdlctoolApp:UserManagementUpdate", e)
    }
    t.updateUserActivation = function(t) {
        t.activated = !t.activated, n.update(t, i, function(e) {
            t.activated = !t.activated, 500 == e.status ? o.error("Internal server error. User could not be updated.") : 401 == e.status && o.error("User update is unauthorized.")
        })
    }, t.delete = function(e) {
        t.user = e, $("#deleteUserConfirmation").appendTo("body").modal("show")
    }, t.confirmDelete = function(e) {
        n.delete({
            login: e
        }, function() {
            $("#deleteUserConfirmation").modal("hide"), t.loadAll(), t.clear()
        })
    }, t.clear = function() {
        t.user = {}
    }
}]), angular.module("sdlctoolApp").controller("UserManagementDialogController", ["$scope", "$stateParams", "$uibModalInstance", "entity", "UserManagement", "Authorities", "User", "AlertService", function(t, e, n, a, o, i, r, s) {
    t.usernamePattern = new RegExp("^[a-z0-9]*$"), t.user = a, i.query(function(e) {
        t.authorities = e
    }), t.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            t.user = e
        })
    };

    function l(e) {
        t.$emit("sdlctoolApp:UserManagementUpdate", e), n.close(e)
    }

    function c(e) {
        500 == e.status ? s.error("Internal server error. User {} could not be updated.".replace("{}", t.user.id)) : 401 == e.status && s.error("User update is unauthorized.")
    }
    t.save = function() {
        null != t.user.id ? r.update(t.user, l, c) : (t.user.password = "Dummy=2pass", t.user.langKey = "en", r.save(t.user, l, function(e) {
            400 == e.status && s.error("Username or email already in use", ["email", "username"])
        }))
    }, t.close = function() {}, t.clear = function() {
        n.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").controller("UserManagementDetailController", ["$scope", "$rootScope", "$stateParams", "entity", "UserManagement", "Authorities", function(n, e, t, a, o, i) {
    n.user = a, n.userSet = {}, n.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            n.user = e
        })
    }, i.query(function(e) {
        n.authorities = e, angular.forEach(e, function(t) {
            0 < n.user.authorities.length ? (n.userSet[t.name] = "No", angular.forEach(n.user.authorities, function(e) {
                angular.equals(t.name, e.name) && (n.userSet[t.name] = "Yes")
            })) : n.userSet[t.name] = "No"
        })
    }), e.$on("sdlctoolApp:userManagementUpdate", function(e, t) {
        n.user = t
    })
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("entity", {
        abstract: !0,
        parent: "site"
    })
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("error", {
        parent: "site",
        url: "/error",
        data: {
            roles: [],
            pageTitle: "Error page!"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/error/error.html"
            }
        },
        resolve: {}
    }).state("accessdenied", {
        parent: "site",
        url: "/accessdenied",
        data: {
            roles: []
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/error/accessdenied.html"
            }
        },
        resolve: {}
    })
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("home", {
        parent: "site",
        url: "/invalid",
        data: {
            roles: []
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/main/main.html",
                controller: "MainController"
            }
        },
        resolve: {}
    })
}]), angular.module("sdlctoolApp").controller("MainController", ["$scope", "Principal", function(t, n) {
    n.identity().then(function(e) {
        t.account = e, t.isAuthenticated = n.isAuthenticated
    })
}]), angular.module("sdlctoolApp").factory("Sessions", ["$resource", function(e) {
    return e("api/account/sessions/:series", {}, {
        getAll: {
            method: "GET",
            isArray: !0
        }
    })
}]), angular.module("sdlctoolApp").factory("AuthServerProvider", ["$http", "localStorageService", "$rootScope", function(t, n, a) {
    return {
        login: function(e) {
            e = "j_username=" + encodeURIComponent(e.username) + "&j_password=" + encodeURIComponent(e.password) + "&remember-me=" + e.rememberMe + "&submit=Login";
            return t.post("api/authentication", e, {
                headers: {
                    "Content-Type": "application/x-www-form-urlencoded"
                }
            })
        },
        logout: function() {
            t.post("api/logout").then(function(e) {
                return n.clearAll(), a.AUTHENTICATIONTYPE ? void(location.href = a.CASLOGOUTURL) : (t.get("api/account").then(function() {}).catch(function() {}), e)
            }, function() {})
        },
        getToken: function() {
            return n.get("token")
        },
        hasValidToken: function() {
            return !!this.getToken()
        }
    }
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("sessions", {
        parent: "account",
        url: "/sessions",
        data: {
            roles: ["ROLE_FRONTEND_USER", "ROLE_USER", "ROLE_ADMIN"],
            pageTitle: "Sessions"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/account/sessions/sessions.html",
                controller: "SessionsController"
            }
        },
        resolve: {}
    })
}]), angular.module("sdlctoolApp").controller("SessionsController", ["$scope", "Sessions", "Principal", function(t, n, e) {
    e.identity().then(function(e) {
        t.account = e
    }), t.success = null, t.error = null, t.sessions = n.getAll(), t.invalidate = function(e) {
        e = function(e) {
            var t, n = "";
            for (e = unescape(encodeURIComponent(e)), t = 0; t < e.length; t++) n += ("0" + e.charCodeAt(t).toString(16)).slice(-2);
            return n
        }(e), n.delete({
            series: e
        }, function() {
            t.error = null, t.success = "OK", t.sessions = n.getAll()
        }, function() {
            t.success = null, t.error = "ERROR"
        })
    }
}]), angular.module("sdlctoolApp").service("EntityHelper", function() {
    return {
        deselectElements: function(e) {
            angular.forEach(e, function(e) {
                e.selected = !1
            })
        },
        performSelection: function(e, t, n) {
            (e ? t : n)()
        }
    }
}), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("collectionCategory", {
        parent: "entity",
        url: "/collectionCategorys",
        data: {
            roles: ["ROLE_USER"],
            pageTitle: "CollectionCategorys"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/collectionCategory/collectionCategorys.html",
                controller: "CollectionCategoryController"
            }
        },
        resolve: {}
    }).state("collectionCategory.detail", {
        parent: "entity",
        url: "/collectionCategory/{id}",
        data: {
            roles: ["ROLE_USER"],
            pageTitle: "CollectionCategory"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/collectionCategory/collectionCategory-detail.html",
                controller: "CollectionCategoryDetailController"
            }
        },
        resolve: {
            entity: ["$stateParams", "CollectionCategory", function(e, t) {
                return t.get({
                    id: e.id
                })
            }]
        }
    }).state("collectionCategory.new", {
        parent: "collectionCategory",
        url: "/new",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(e, t, n) {
            n.open({
                templateUrl: "scripts/app/entities/collectionCategory/collectionCategory-dialog.html",
                controller: "CollectionCategoryDialogController",
                size: "lg",
                resolve: {
                    entity: function() {
                        return {
                            name: null,
                            description: null,
                            showOrder: null,
                            active: !1,
                            id: null
                        }
                    }
                }
            }).result.then(function() {
                t.go("collectionCategory", null, {
                    reload: !0
                })
            }, function() {
                t.go("collectionCategory")
            })
        }]
    }).state("collectionCategory.edit", {
        parent: "collectionCategory",
        url: "/{id}/edit",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(t, e, n) {
            n.open({
                templateUrl: "scripts/app/entities/collectionCategory/collectionCategory-dialog.html",
                controller: "CollectionCategoryDialogController",
                size: "lg",
                resolve: {
                    entity: ["CollectionCategory", function(e) {
                        return e.get({
                            id: t.id
                        })
                    }]
                }
            }).result.then(function() {
                e.go("collectionCategory", null, {
                    reload: !0
                })
            }, function() {
                e.go("^")
            })
        }]
    }).state("collectionCategory.bulk", {
        parent: "collectionCategory",
        url: "/edit",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(e, t, n) {
            n.open({
                templateUrl: "scripts/app/entities/collectionCategory/collectionCategory-bulk.html",
                controller: "CollectionCategoryBulkController",
                size: "lg",
                resolve: {
                    entity: function() {
                        return {
                            name: null,
                            description: null,
                            showOrder: null,
                            active: null,
                            id: null
                        }
                    }
                }
            }).result.then(function() {
                t.go("collectionCategory", null, {
                    reload: !0
                })
            }, function() {
                t.go("collectionCategory")
            })
        }]
    })
}]), angular.module("sdlctoolApp").controller("CollectionCategoryController", ["$scope", "CollectionCategory", "CollectionCategorySearch", "sharedProperties", "$filter", "EntityHelper", function(t, n, e, a, o, i) {
    function r() {
        angular.forEach(t.filterEntity(), function(e) {
            e.selected = !0
        })
    }

    function s() {
        i.deselectElements(o("filter")(t.filterEntity(), {
            selected: !0
        }))
    }
    t.collectionCategorys = [], t.nonDeletedCat = [], t.searchString = "", t.loadAll = function() {
        n.query(function(e) {
            t.collectionCategorys = e, angular.forEach(t.collectionCategorys, function(e) {
                angular.extend(e, {
                    selected: !1
                })
            })
        })
    }, t.loadAll(), t.delete = function(e) {
        n.get({
            id: e
        }, function(e) {
            t.collectionCategory = e, $("#deleteCollectionCategoryConfirmation").appendTo("body").modal("show")
        }, function() {})
    }, t.confirmDelete = function(e) {
        n.delete({
            id: e
        }, function() {
            t.loadAll(), $("#deleteCollectionCategoryConfirmation").modal("hide"), t.clear()
        })
    }, t.filterEntity = function() {
        return o("filter")(t.collectionCategorys, t.searchString)
    }, t.performSelection = function(e) {
        i.performSelection(e, r, s)
    }, t.bulkChange = function() {
        a.setProperty(o("orderBy")(o("filter")(t.collectionCategorys, {
            selected: !0
        }), ["showOrder"]))
    }, t.search = function() {
        e.query({
            query: t.searchQuery
        }, function(e) {
            t.collectionCategorys = e
        }, function(e) {
            404 === e.status && t.loadAll()
        })
    }, t.refresh = function() {
        t.loadAll(), t.clear()
    }, t.clear = function() {
        t.collectionCategory = {
            name: null,
            description: null,
            showOrder: null,
            active: null,
            id: null
        }
    }
}]), angular.module("sdlctoolApp").controller("CollectionCategoryDialogController", ["$scope", "$stateParams", "$uibModalInstance", "entity", "CollectionCategory", "CollectionInstance", function(t, e, n, a, o, i) {
    t.collectionCategory = a, t.collectioninstances = i.query(), t.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            t.collectionCategory = e
        })
    };

    function r(e) {
        t.$emit("sdlctoolApp:collectionCategoryUpdate", e), n.close(e)
    }
    t.save = function() {
        null !== t.collectionCategory.id ? o.update(t.collectionCategory, r) : o.save(t.collectionCategory, r)
    }, t.clear = function() {
        n.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").controller("CollectionCategoryDetailController", ["$scope", "$rootScope", "$stateParams", "entity", "CollectionCategory", function(n, e, t, a, o) {
    n.collectionCategory = a, n.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            n.collectionCategory = e
        })
    }, e.$on("sdlctoolApp:collectionCategoryUpdate", function(e, t) {
        n.collectionCategory = t
    })
}]), angular.module("sdlctoolApp").controller("CollectionCategoryBulkController", ["$scope", "$stateParams", "$uibModalInstance", "$filter", "entity", "CollectionCategory", "sharedProperties", function(n, e, t, a, o, i, r) {
    n.collectionCategorys = [], n.active = !0, n.state = {
        active: !0
    }, n.getIndeterminateForActiveButton = function() {
        var t = 0;
        n.state.active = n.collectionCategorys[0].active, angular.forEach(n.collectionCategorys, function(e) {
            e.active === n.state.active && t++
        }), t !== n.collectionCategorys.length && delete n.state.active
    }, n.loadAll = function() {
        n.showTypes = "Show selected collection categories", n.glyphicon = "glyphicon glyphicon-plus", n.show = !0, n.collectionCategorys = r.getProperty(), n.getIndeterminateForActiveButton()
    }, n.loadAll();

    function s(e) {
        n.$emit("sdlctoolApp:collectionCategoryUpdate", e), t.close(e)
    }
    n.save = function() {
        var t = 1;
        angular.forEach(n.collectionCategorys, function(e) {
            t === n.collectionCategorys.length ? (e.active = n.state.active, i.update(e), s("done")) : (e.active = n.state.active, i.update(e)), t++
        })
    }, n.toggleShowHide = function() {
        n.show = !n.show, n.show ? (n.showTypes = "Show selected collection categories", n.glyphicon = "glyphicon glyphicon-plus") : (n.showTypes = "Hide selected collection categories", n.glyphicon = "glyphicon glyphicon-minus")
    }, n.delete = function() {
        $("#deleteCollectionCategoriesConfirmation").appendTo("body").modal("show")
    }, n.confirmDeleteAll = function(t) {
        var n = 1;
        angular.forEach(t, function(e) {
            n === t.length ? i.delete({
                id: e.id
            }, function(e) {
                $("#deleteCollectionCategoriesConfirmation").modal("hide"), s(e)
            }) : i.delete({
                id: e.id
            }, function() {}), n++
        })
    }, n.clear = function() {
        t.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").factory("CollectionCategory", ["$resource", "DateUtils", "SDLCToolExceptionService", function(e, t, n) {
    return e("api/collectionCategorys/:id", {}, {
        query: {
            method: "GET",
            isArray: !0
        },
        get: {
            method: "GET",
            transformResponse: function(e) {
                return e = angular.fromJson(e)
            }
        },
        update: {
            method: "PUT"
        },
        delete: {
            method: "DELETE",
            transformResponse: function(e) {
                if (e.includes("hibernate.exception.ConstraintViolationException")) return n.showWarning("La eliminaciÃ³n de la categorÃ­a de colecciÃ³n fallÃ³ debido a las dependencias", "La categorÃ­a de colecciÃ³n no se pudo eliminar porque una entidad de instancia de colecciÃ³n todavÃ­a hace referencia a esa categorÃ­a de colecciÃ³n. Elimine primero la Instancia de colecciÃ³n correspondiente.", n.DANGER), $("#deleteCollectionCategoryConfirmation").modal("hide"), null;
                return $("#deleteCollectionCategoryConfirmation").modal("hide"), e
            }
        }
    })
}]), angular.module("sdlctoolApp").factory("CollectionCategorySearch", ["$resource", function(e) {
    return e("api/_search/collectionCategorys/:query", {}, {
        query: {
            method: "GET",
            isArray: !0
        }
    })
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("collectionInstance", {
        parent: "entity",
        url: "/collectionInstances",
        data: {
            roles: ["ROLE_USER"],
            pageTitle: "CollectionInstances"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/collectionInstance/collectionInstances.html",
                controller: "CollectionInstanceController"
            }
        },
        resolve: {}
    }).state("collectionInstance.detail", {
        parent: "entity",
        url: "/collectionInstance/{id}",
        data: {
            roles: ["ROLE_USER"],
            pageTitle: "CollectionInstance"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/collectionInstance/collectionInstance-detail.html",
                controller: "CollectionInstanceDetailController"
            }
        },
        resolve: {
            entity: ["$stateParams", "CollectionInstance", function(e, t) {
                return t.get({
                    id: e.id
                })
            }]
        }
    }).state("collectionInstance.new", {
        parent: "collectionInstance",
        url: "/new",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(e, t, n) {
            n.open({
                templateUrl: "scripts/app/entities/collectionInstance/collectionInstance-dialog.html",
                controller: "CollectionInstanceDialogController",
                size: "lg",
                resolve: {
                    entity: function() {
                        return {
                            name: null,
                            description: null,
                            showOrder: null,
                            active: !1,
                            id: null
                        }
                    }
                }
            }).result.then(function() {
                t.go("collectionInstance", null, {
                    reload: !0
                })
            }, function() {
                t.go("collectionInstance")
            })
        }]
    }).state("collectionInstance.edit", {
        parent: "collectionInstance",
        url: "/{id}/edit",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(t, e, n) {
            n.open({
                templateUrl: "scripts/app/entities/collectionInstance/collectionInstance-dialog.html",
                controller: "CollectionInstanceDialogController",
                size: "lg",
                resolve: {
                    entity: ["CollectionInstance", function(e) {
                        return e.get({
                            id: t.id
                        })
                    }]
                }
            }).result.then(function() {
                e.go("collectionInstance", null, {
                    reload: !0
                })
            }, function() {
                e.go("^")
            })
        }]
    }).state("collectionInstance.bulk", {
        parent: "collectionInstance",
        url: "/edit",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(e, t, n) {
            n.open({
                templateUrl: "scripts/app/entities/collectionInstance/collectionInstance-bulk.html",
                controller: "CollectionInstanceBulkController",
                size: "lg",
                resolve: {
                    entity: function() {
                        return {
                            name: null,
                            description: null,
                            showOrder: null,
                            active: null,
                            id: null
                        }
                    }
                }
            }).result.then(function() {
                t.go("collectionInstance", null, {
                    reload: !0
                })
            }, function() {
                t.go("collectionInstance")
            })
        }]
    })
}]), angular.module("sdlctoolApp").controller("CollectionInstanceController", ["$scope", "CollectionInstance", "CollectionInstanceSearch", "sharedProperties", "$filter", "CollectionCategory", "EntityHelper", function(t, n, e, a, o, i, r) {
    function s() {
        angular.forEach(t.filterEntity(), function(e) {
            e.selected = !0
        })
    }

    function l() {
        r.deselectElements(t.filterEntity())
    }
    t.collectionInstances = [], t.collectionCategories = [], t.selectedCategory = [], t.searchString = "", t.loadAll = function() {
        n.query(function(e) {
            t.collectionInstances = e, angular.forEach(t.collectionInstances, function(e) {
                angular.extend(e, {
                    selected: !1
                })
            })
        }), i.query(function(e) {
            t.collectionCategories = e
        })
    }, t.loadAll(), t.categoryLabelText = {
        buttonDefaultText: "Collection Category"
    }, t.selectedCategorySettings = {
        smartButtonMaxItems: 2,
        showCheckAll: !1,
        showUncheckAll: !1,
        displayProp: "name",
        idProp: "id",
        externalIdProp: ""
    }, t.delete = function(e) {
        n.get({
            id: e
        }, function(e) {
            t.collectionInstance = e, $("#deleteCollectionInstanceConfirmation").appendTo("body").modal("show")
        })
    }, t.confirmDelete = function(e) {
        n.delete({
            id: e
        }, function() {
            t.loadAll(), $("#deleteCollectionInstanceConfirmation").modal("hide"), t.clear()
        })
    }, t.filterEntity = function() {
        var e = o("filterCategoryForEntities")(t.collectionInstances, t.selectedCategory, "collectionCategory");
        return o("filter")(e, t.searchString)
    }, t.performSelection = function(e) {
        r.performSelection(e, s, l)
    }, t.bulkChange = function() {
        a.setProperty(o("orderBy")(o("filter")(t.collectionInstances, {
            selected: !0
        }), ["collectionCategory.showOrder", "showOrder"]))
    }, t.search = function() {
        e.query({
            query: t.searchQuery
        }, function(e) {
            t.collectionInstances = e
        }, function(e) {
            404 === e.status && t.loadAll()
        })
    }, t.refresh = function() {
        t.loadAll(), t.clear()
    }, t.clear = function() {
        t.collectionInstance = {
            name: null,
            description: null,
            showOrder: null,
            active: null,
            id: null
        }
    }
}]), angular.module("sdlctoolApp").controller("CollectionInstanceDialogController", ["$scope", "$stateParams", "$uibModalInstance", "entity", "CollectionInstance", "CollectionCategory", "RequirementSkeleton", function(t, e, n, a, o, i, r) {
    t.collectionInstance = a, t.collectioncategorys = i.query(), t.requirementskeletons = r.query(), t.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            t.collectionInstance = e
        })
    };

    function s(e) {
        t.$emit("sdlctoolApp:collectionInstanceUpdate", e), n.close(e)
    }
    t.save = function() {
        null !== t.collectionInstance.id ? o.update(t.collectionInstance, s) : o.save(t.collectionInstance, s)
    }, t.clear = function() {
        n.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").controller("CollectionInstanceDetailController", ["$scope", "$rootScope", "$stateParams", "entity", "CollectionInstance", function(n, e, t, a, o) {
    n.collectionInstance = a, n.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            n.collectionInstance = e
        })
    }, e.$on("sdlctoolApp:collectionInstanceUpdate", function(e, t) {
        n.collectionInstance = t
    })
}]), angular.module("sdlctoolApp").controller("CollectionInstanceBulkController", ["$scope", "$stateParams", "$uibModalInstance", "$filter", "entity", "CollectionInstance", "CollectionCategory", "sharedProperties", function(n, e, t, a, o, i, r, s) {
    n.collectionInstance = [], n.collectionCategories = [], n.state = {
        active: !0
    }, n.selectedCat = {
        value: null
    }, n.getIndeterminateForActiveButton = function() {
        var t = 0;
        n.state.active = n.collectionInstance[0].active, angular.forEach(n.collectionInstance, function(e) {
            e.active === n.state.active && t++
        }), t !== n.collectionInstance.length && delete n.state.active
    }, n.loadAll = function() {
        n.showTypes = "Show selected collection instances", n.glyphicon = "glyphicon glyphicon-plus", n.show = !0, n.collectionInstance = s.getProperty(), n.getIndeterminateForActiveButton(), r.query(function(e) {
            n.collectionCategories = e
        })
    }, n.loadAll();

    function l(e) {
        n.$emit("sdlctoolApp:collectionInstanceUpdate", e), t.close(e)
    }
    n.toggleShowHide = function() {
        n.show = !n.show, n.show ? (n.showTypes = "Show selected collection instances", n.glyphicon = "glyphicon glyphicon-plus") : (n.showTypes = "Hide selected collection instances", n.glyphicon = "glyphicon glyphicon-minus")
    }, n.save = function() {
        var e = 1;
        angular.forEach(n.collectionInstance, function(t) {
            angular.isDefined(n.state.active) && (t.active = n.state.active), null !== n.selectedCat.value && angular.forEach(n.collectionCategories, function(e) {
                n.selectedCat.value === e.id && (t.collectionCategory = e)
            }), e === n.collectionInstance.length ? i.update(t, l) : i.update(t), e++
        })
    }, n.delete = function() {
        $("#deleteCollectionInstancesConfirmation").appendTo("body").modal("show")
    }, n.confirmDeleteAll = function(t) {
        var n = 1;
        angular.forEach(t, function(e) {
            n === t.length ? i.delete({
                id: e.id
            }, function(e) {
                $("#deleteCollectionInstancesConfirmation").modal("hide"), l(e)
            }) : i.delete({
                id: e.id
            }, function() {}), n++
        })
    }, n.clear = function() {
        t.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").factory("CollectionInstance", ["$resource", "DateUtils", "SDLCToolExceptionService", function(e, t, n) {
    return e("api/collectionInstances/:id", {}, {
        query: {
            method: "GET",
            isArray: !0
        },
        get: {
            method: "GET",
            transformResponse: function(e) {
                return e = angular.fromJson(e)
            }
        },
        update: {
            method: "PUT"
        },
        delete: {
            method: "DELETE",
            transformResponse: function(e) {
                if (e.includes("hibernate.exception.ConstraintViolationException")) return n.showWarning("La eliminaciÃ³n de la instancia de colecciÃ³n fallÃ³ debido a las dependencias", "La instancia de colecciÃ³n no se pudo eliminar porque una entidad del esqueleto de requisitos todavÃ­a hace referencia a esa instancia de colecciÃ³n. Elimine primero el esqueleto de requisitos correspondiente.", n.DANGER), $("#deleteCollectionInstanceConfirmation").modal("hide"), null;
                return $("#deleteCollectionInstanceConfirmation").modal("hide"), e
            }
        }
    })
}]), angular.module("sdlctoolApp").factory("CollectionInstanceSearch", ["$resource", function(e) {
    return e("api/_search/collectionInstances/:query", {}, {
        query: {
            method: "GET",
            isArray: !0
        }
    })
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("tagCategory", {
        parent: "entity",
        url: "/tagCategorys",
        data: {
            roles: ["ROLE_USER"],
            pageTitle: "TagCategorys"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/tagCategory/tagCategorys.html",
                controller: "TagCategoryController"
            }
        },
        resolve: {}
    }).state("tagCategory.detail", {
        parent: "entity",
        url: "/tagCategory/{id}",
        data: {
            roles: ["ROLE_USER"],
            pageTitle: "TagCategory"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/tagCategory/tagCategory-detail.html",
                controller: "TagCategoryDetailController"
            }
        },
        resolve: {
            entity: ["$stateParams", "TagCategory", function(e, t) {
                return t.get({
                    id: e.id
                })
            }]
        }
    }).state("tagCategory.new", {
        parent: "tagCategory",
        url: "/new",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(e, t, n) {
            n.open({
                templateUrl: "scripts/app/entities/tagCategory/tagCategory-dialog.html",
                controller: "TagCategoryDialogController",
                size: "lg",
                resolve: {
                    entity: function() {
                        return {
                            name: null,
                            description: null,
                            showOrder: null,
                            active: !1,
                            id: null
                        }
                    }
                }
            }).result.then(function(e) {
                t.go("tagCategory", null, {
                    reload: !0
                })
            }, function() {
                t.go("tagCategory")
            })
        }]
    }).state("tagCategory.edit", {
        parent: "tagCategory",
        url: "/{id}/edit",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(t, n, e) {
            e.open({
                templateUrl: "scripts/app/entities/tagCategory/tagCategory-dialog.html",
                controller: "TagCategoryDialogController",
                size: "lg",
                resolve: {
                    entity: ["TagCategory", function(e) {
                        return e.get({
                            id: t.id
                        })
                    }]
                }
            }).result.then(function(e) {
                n.go("tagCategory", null, {
                    reload: !0
                })
            }, function() {
                n.go("^")
            })
        }]
    }).state("tagCategory.bulk", {
        parent: "tagCategory",
        url: "/edit",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(e, t, n) {
            n.open({
                templateUrl: "scripts/app/entities/tagCategory/tagCategory-bulk.html",
                controller: "TagCategoryBulkController",
                size: "lg",
                resolve: {
                    entity: function() {
                        return {
                            name: null,
                            description: null,
                            showOrder: null,
                            active: null,
                            id: null
                        }
                    }
                }
            }).result.then(function(e) {
                t.go("tagCategory", null, {
                    reload: !0
                })
            }, function() {
                t.go("tagCategory")
            })
        }]
    })
}]), angular.module("sdlctoolApp").controller("TagCategoryController", ["$scope", "TagCategory", "TagCategorySearch", "sharedProperties", "$filter", "EntityHelper", function(t, n, e, a, o, i) {
    function r() {
        angular.forEach(t.filterEntity(), function(e) {
            e.selected = !0
        })
    }

    function s() {
        i.deselectElements(o("filter")(t.filterEntity(), {
            selected: !0
        }))
    }
    t.tagCategorys = [], t.searchString = "", t.loadAll = function() {
        n.query(function(e) {
            t.tagCategorys = e, angular.forEach(t.tagCategorys, function(e) {
                angular.extend(e, {
                    selected: !1
                })
            })
        })
    }, t.loadAll(), t.delete = function(e) {
        n.get({
            id: e
        }, function(e) {
            t.tagCategory = e, $("#deleteTagCategoryConfirmation").appendTo("body").modal("show")
        })
    }, t.confirmDelete = function(e) {
        n.delete({
            id: e
        }, function() {
            t.loadAll(), $("#deleteTagCategoryConfirmation").modal("hide"), t.clear()
        })
    }, t.filterEntity = function() {
        return o("filter")(t.tagCategorys, t.searchString)
    }, t.performSelection = function(e) {
        i.performSelection(e, r, s)
    }, t.bulkChange = function() {
        a.setProperty(o("orderBy")(o("filter")(t.tagCategorys, {
            selected: !0
        }), ["showOrder"]))
    }, t.search = function() {
        e.query({
            query: t.searchQuery
        }, function(e) {
            t.tagCategorys = e
        }, function(e) {
            404 === e.status && t.loadAll()
        })
    }, t.refresh = function() {
        t.loadAll(), t.clear()
    }, t.clear = function() {
        t.tagCategory = {
            name: null,
            description: null,
            showOrder: null,
            active: null,
            id: null
        }
    }
}]), angular.module("sdlctoolApp").controller("TagCategoryDialogController", ["$scope", "$stateParams", "$uibModalInstance", "entity", "TagCategory", "TagInstance", function(t, e, n, a, o, i) {
    t.tagCategory = a, t.taginstances = i.query(), t.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            t.tagCategory = e
        })
    };

    function r(e) {
        t.$emit("sdlctoolApp:tagCategoryUpdate", e), n.close(e)
    }
    t.save = function() {
        null != t.tagCategory.id ? o.update(t.tagCategory, r) : o.save(t.tagCategory, r)
    }, t.clear = function() {
        n.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").controller("TagCategoryDetailController", ["$scope", "$rootScope", "$stateParams", "entity", "TagCategory", function(n, e, t, a, o) {
    n.tagCategory = a, n.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            n.tagCategory = e
        })
    }, e.$on("sdlctoolApp:tagCategoryUpdate", function(e, t) {
        n.tagCategory = t
    })
}]), angular.module("sdlctoolApp").controller("TagCategoryBulkController", ["$scope", "$stateParams", "$uibModalInstance", "$filter", "entity", "TagCategory", "sharedProperties", function(n, e, t, a, o, i, r) {
    n.tagCategories = [], n.state = {
        active: !0
    }, n.getIndeterminateForActiveButton = function() {
        var t = 0;
        n.state.active = n.tagCategories[0].active, angular.forEach(n.tagCategories, function(e) {
            e.active === n.state.active && t++
        }), t !== n.tagCategories.length && delete n.state.active
    }, n.loadAll = function() {
        n.showTypes = "Show selected tag categories", n.glyphicon = "glyphicon glyphicon-plus", n.show = !0, n.tagCategories = r.getProperty(), n.getIndeterminateForActiveButton()
    }, n.loadAll();

    function s(e) {
        n.$emit("sdlctoolApp:tagCategoryUpdate", e), t.close(e)
    }
    n.save = function() {
        var t = 1;
        angular.forEach(n.tagCategories, function(e) {
            e.active = n.state.active, t == n.tagCategories.length ? i.update(e, s) : i.update(e), t++
        })
    }, n.toggleShowHide = function() {
        n.show = !n.show, n.show ? (n.showTypes = "Show selected tag categories", n.glyphicon = "glyphicon glyphicon-plus") : (n.showTypes = "Hide selected tag categories", n.glyphicon = "glyphicon glyphicon-minus")
    }, n.delete = function() {
        $("#deleteTagCategoriesConfirmation").appendTo("body").modal("show")
    }, n.confirmDeleteAll = function(t) {
        var n = 1;
        angular.forEach(t, function(e) {
            n == t.length ? i.delete({
                id: e.id
            }, function(e) {
                $("#deleteTagCategoriesConfirmation").modal("hide"), s(e)
            }) : i.delete({
                id: e.id
            }, function() {}), n++
        })
    }, n.clear = function() {
        t.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").factory("TagCategory", ["$resource", "DateUtils", "SDLCToolExceptionService", function(e, t, n) {
    return e("api/tagCategorys/:id", {}, {
        query: {
            method: "GET",
            isArray: !0
        },
        get: {
            method: "GET",
            transformResponse: function(e) {
                return e = angular.fromJson(e)
            }
        },
        update: {
            method: "PUT"
        },
        delete: {
            method: "DELETE",
            transformResponse: function(e) {
                if (e.includes("hibernate.exception.ConstraintViolationException")) return n.showWarning("La eliminaciÃ³n de la Etiqueta de CategorÃ­a fallÃ³ debido a las dependencias", "La Etiqueta de CategorÃ­a no se pudo eliminar porque una entidad de instancia de etiqueta todavÃ­a hace referencia a esa Etiqueta de CategorÃ­a. Elimine primero la Etiqueta de la instancia correspondiente.", n.DANGER), $("#deleteTagCategoryConfirmation").modal("hide"), null;
                return $("#deleteTagCategoryConfirmation").modal("hide"), e
            }
        }
    })
}]), angular.module("sdlctoolApp").factory("TagCategorySearch", ["$resource", function(e) {
    return e("api/_search/tagCategorys/:query", {}, {
        query: {
            method: "GET",
            isArray: !0
        }
    })
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("tagInstance", {
        parent: "entity",
        url: "/tagInstances",
        data: {
            roles: ["ROLE_USER"],
            pageTitle: "TagInstances"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/tagInstance/tagInstances.html",
                controller: "TagInstanceController"
            }
        },
        resolve: {}
    }).state("tagInstance.detail", {
        parent: "entity",
        url: "/tagInstance/{id}",
        data: {
            roles: ["ROLE_USER"],
            pageTitle: "TagInstance"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/tagInstance/tagInstance-detail.html",
                controller: "TagInstanceDetailController"
            }
        },
        resolve: {
            entity: ["$stateParams", "TagInstance", function(e, t) {
                return t.get({
                    id: e.id
                })
            }]
        }
    }).state("tagInstance.new", {
        parent: "tagInstance",
        url: "/new",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(e, t, n) {
            n.open({
                templateUrl: "scripts/app/entities/tagInstance/tagInstance-dialog.html",
                controller: "TagInstanceDialogController",
                size: "lg",
                resolve: {
                    entity: function() {
                        return {
                            name: null,
                            description: null,
                            showOrder: null,
                            active: !1,
                            id: null
                        }
                    }
                }
            }).result.then(function(e) {
                t.go("tagInstance", null, {
                    reload: !0
                })
            }, function() {
                t.go("tagInstance")
            })
        }]
    }).state("tagInstance.edit", {
        parent: "tagInstance",
        url: "/{id}/edit",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(t, n, e) {
            e.open({
                templateUrl: "scripts/app/entities/tagInstance/tagInstance-dialog.html",
                controller: "TagInstanceDialogController",
                size: "lg",
                resolve: {
                    entity: ["TagInstance", function(e) {
                        return e.get({
                            id: t.id
                        })
                    }]
                }
            }).result.then(function(e) {
                n.go("tagInstance", null, {
                    reload: !0
                })
            }, function() {
                n.go("^")
            })
        }]
    }).state("tagInstance.bulk", {
        parent: "tagInstance",
        url: "/edit",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(e, t, n) {
            n.open({
                templateUrl: "scripts/app/entities/tagInstance/tagInstance-bulk.html",
                controller: "TagInstanceBulkController",
                size: "lg",
                resolve: {
                    entity: function() {
                        return {
                            name: null,
                            description: null,
                            showOrder: null,
                            active: null,
                            id: null
                        }
                    }
                }
            }).result.then(function(e) {
                t.go("tagInstance", null, {
                    reload: !0
                })
            }, function() {
                t.go("tagInstance")
            })
        }]
    })
}]), angular.module("sdlctoolApp").controller("TagInstanceController", ["$scope", "TagInstance", "TagInstanceSearch", "TagCategory", "sharedProperties", "$filter", "EntityHelper", function(t, n, e, a, o, i, r) {
    function s() {
        angular.forEach(t.filterEntity(), function(e) {
            e.selected = !0
        })
    }

    function l() {
        r.deselectElements(i("filter")(t.filterEntity(), {
            selected: !0
        }))
    }
    t.tagInstances = [], t.tagCategories = [], t.selectedCategory = [], t.searchString = "", t.loadAll = function() {
        n.query(function(e) {
            t.tagInstances = e, angular.forEach(t.tagInstances, function(e) {
                angular.extend(e, {
                    selected: !1
                })
            })
        }), a.query(function(e) {
            t.tagCategories = e
        })
    }, t.loadAll(), t.categoryLabelText = {
        buttonDefaultText: "Tag Category"
    }, t.selectedCategorySettings = {
        smartButtonMaxItems: 2,
        showCheckAll: !1,
        showUncheckAll: !1,
        displayProp: "name",
        idProp: "id",
        externalIdProp: ""
    }, t.delete = function(e) {
        n.get({
            id: e
        }, function(e) {
            t.tagInstance = e, $("#deleteTagInstanceConfirmation").appendTo("body").modal("show")
        })
    }, t.confirmDelete = function(e) {
        n.delete({
            id: e
        }, function() {
            t.loadAll(), $("#deleteTagInstanceConfirmation").modal("hide"), t.clear()
        })
    }, t.filterEntity = function() {
        var e = i("filterCategoryForEntities")(t.tagInstances, t.selectedCategory, "tagCategory");
        return i("filter")(e, t.searchString)
    }, t.performSelection = function(e) {
        r.performSelection(e, s, l)
    }, t.bulkChange = function() {
        o.setProperty(i("orderBy")(i("filter")(t.tagInstances, {
            selected: !0
        }), ["tagCategory.showOrder", "showOrder"]))
    }, t.refresh = function() {
        t.loadAll(), t.clear()
    }, t.clear = function() {
        t.tagInstance = {
            name: null,
            description: null,
            showOrder: null,
            active: null,
            id: null
        }
    }
}]), angular.module("sdlctoolApp").controller("TagInstanceDialogController", ["$scope", "$stateParams", "$uibModalInstance", "entity", "TagInstance", "TagCategory", "RequirementSkeleton", function(t, e, n, a, o, i, r) {
    t.tagInstance = a, t.tagcategorys = i.query(), t.requirementskeletons = r.query(), t.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            t.tagInstance = e
        })
    };

    function s(e) {
        t.$emit("sdlctoolApp:tagInstanceUpdate", e), n.close(e)
    }
    t.save = function() {
        null != t.tagInstance.id ? o.update(t.tagInstance, s) : o.save(t.tagInstance, s)
    }, t.clear = function() {
        n.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").controller("TagInstanceDetailController", ["$scope", "$rootScope", "$stateParams", "entity", "TagInstance", function(n, e, t, a, o) {
    n.tagInstance = a, n.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            n.tagInstance = e
        })
    }, e.$on("sdlctoolApp:tagInstanceUpdate", function(e, t) {
        n.tagInstance = t
    })
}]), angular.module("sdlctoolApp").controller("TagInstanceBulkController", ["$scope", "$stateParams", "$uibModalInstance", "$filter", "entity", "TagInstance", "TagCategory", "sharedProperties", function(n, e, t, a, o, i, r, s) {
    n.tagInstance = [], n.tagCategories = [], n.state = {
        active: !0
    }, n.selectedCat = {
        value: null
    }, n.getIndeterminateForActiveButton = function() {
        var t = 0;
        n.state.active = n.tagInstance[0].active, angular.forEach(n.tagInstance, function(e) {
            e.active === n.state.active && t++
        }), t !== n.tagInstance.length && delete n.state.active
    }, n.loadAll = function() {
        n.showTypes = "Show selected tag instances", n.glyphicon = "glyphicon glyphicon-plus", n.show = !0, n.tagInstance = s.getProperty(), n.getIndeterminateForActiveButton(), r.query(function(e) {
            n.tagCategories = e
        })
    }, n.loadAll(), n.toggleShowHide = function() {
        n.show = !n.show, n.show ? (n.showTypes = "Show selected tag instances", n.glyphicon = "glyphicon glyphicon-plus") : (n.showTypes = "Hide selected tag instances", n.glyphicon = "glyphicon glyphicon-minus")
    };

    function l(e) {
        n.$emit("sdlctoolApp:tagInstanceUpdate", e), t.close(e)
    }
    n.save = function() {
        var e = 1;
        angular.forEach(n.tagInstance, function(t) {
            angular.isDefined(n.state.active) && (t.active = n.state.active), null !== n.selectedCat.value && angular.forEach(n.tagCategories, function(e) {
                n.selectedCat.value === e.id && (t.tagCategory = e)
            }), e == n.tagInstance.length ? i.update(t, l) : i.update(t), e++
        })
    }, n.delete = function() {
        $("#deleteTagInstancesConfirmation").appendTo("body").modal("show")
    }, n.confirmDeleteAll = function(t) {
        var n = 1;
        angular.forEach(t, function(e) {
            n == t.length ? i.delete({
                id: e.id
            }, function(e) {
                $("#deleteTagInstancesConfirmation").modal("hide"), l(e)
            }) : i.delete({
                id: e.id
            }, function() {}), n++
        })
    }, n.clear = function() {
        t.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").factory("TagInstance", ["$resource", "DateUtils", "SDLCToolExceptionService", function(e, t, n) {
    return e("api/tagInstances/:id", {}, {
        query: {
            method: "GET",
            isArray: !0
        },
        get: {
            method: "GET",
            transformResponse: function(e) {
                return e = angular.fromJson(e)
            }
        },
        update: {
            method: "PUT"
        },
        delete: {
            method: "DELETE",
            transformResponse: function(e) {
                if (e.includes("hibernate.exception.ConstraintViolationException")) return n.showWarning("La eliminaciÃ³n de la Etiqueta de instancia fallÃ³ debido a las dependencias", "La Etiqueta de instancia no se pudo eliminar porque el Esqueleto de Requisitos de la entidad todavÃ­a hace referencia a esa Etiqueta de Instancia. Elimine primero el Esqueleto de Requisitos correspondiente.", n.DANGER), $("#deleteTagInstanceConfirmation").modal("hide"), null;
                return $("#deleteTagInstanceConfirmation").modal("hide"), e
            }
        }
    })
}]), angular.module("sdlctoolApp").factory("TagInstanceSearch", ["$resource", function(e) {
    return e("api/_search/tagInstances/:query", {}, {
        query: {
            method: "GET",
            isArray: !0
        }
    })
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("reqCategory", {
        parent: "entity",
        url: "/reqCategorys",
        data: {
            roles: ["ROLE_USER"],
            pageTitle: "ReqCategorys"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/reqCategory/reqCategorys.html",
                controller: "ReqCategoryController"
            }
        },
        resolve: {}
    }).state("reqCategory.detail", {
        parent: "entity",
        url: "/reqCategory/{id}",
        data: {
            roles: ["ROLE_USER"],
            pageTitle: "ReqCategory"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/reqCategory/reqCategory-detail.html",
                controller: "ReqCategoryDetailController"
            }
        },
        resolve: {
            entity: ["$stateParams", "ReqCategory", function(e, t) {
                return t.get({
                    id: e.id
                })
            }]
        }
    }).state("reqCategory.new", {
        parent: "reqCategory",
        url: "/new",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(e, t, n) {
            n.open({
                templateUrl: "scripts/app/entities/reqCategory/reqCategory-dialog.html",
                controller: "ReqCategoryDialogController",
                size: "lg",
                resolve: {
                    entity: function() {
                        return {
                            name: null,
                            shortcut: null,
                            description: null,
                            showOrder: null,
                            active: !1,
                            id: null
                        }
                    }
                }
            }).result.then(function(e) {
                t.go("reqCategory", null, {
                    reload: !0
                })
            }, function() {
                t.go("reqCategory")
            })
        }]
    }).state("reqCategory.edit", {
        parent: "reqCategory",
        url: "/{id}/edit",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(t, n, e) {
            e.open({
                templateUrl: "scripts/app/entities/reqCategory/reqCategory-dialog.html",
                controller: "ReqCategoryDialogController",
                size: "lg",
                resolve: {
                    entity: ["ReqCategory", function(e) {
                        return e.get({
                            id: t.id
                        })
                    }]
                }
            }).result.then(function(e) {
                n.go("reqCategory", null, {
                    reload: !0
                })
            }, function() {
                n.go("^")
            })
        }]
    }).state("reqCategory.bulk", {
        parent: "reqCategory",
        url: "/edit",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(e, t, n) {
            n.open({
                templateUrl: "scripts/app/entities/reqCategory/reqCategory-bulk.html",
                controller: "ReqCategoryBulkController",
                size: "lg",
                resolve: {
                    entity: function() {
                        return {
                            name: null,
                            shortcut: null,
                            description: null,
                            showOrder: null,
                            active: null,
                            id: null
                        }
                    }
                }
            }).result.then(function(e) {
                t.go("reqCategory", null, {
                    reload: !0
                })
            }, function() {
                t.go("reqCategory")
            })
        }]
    })
}]), angular.module("sdlctoolApp").controller("ReqCategoryController", ["$scope", "ReqCategory", "ReqCategorySearch", "sharedProperties", "$filter", "EntityHelper", function(t, n, e, a, o, i) {
    function r() {
        angular.forEach(t.filterEntity(), function(e) {
            e.selected = !0
        })
    }

    function s() {
        i.deselectElements(o("filter")(t.filterEntity(), {
            selected: !0
        }))
    }
    t.reqCategorys = [], t.searchString = "", t.loadAll = function() {
        n.query(function(e) {
            t.reqCategorys = e, angular.forEach(t.reqCategorys, function(e) {
                angular.extend(e, {
                    selected: !1
                })
            })
        })
    }, t.loadAll(), t.delete = function(e) {
        n.get({
            id: e
        }, function(e) {
            t.reqCategory = e, $("#deleteReqCategoryConfirmation").appendTo("body").modal("show")
        })
    }, t.confirmDelete = function(e) {
        n.delete({
            id: e
        }, function() {
            t.loadAll(), $("#deleteReqCategoryConfirmation").modal("hide"), t.clear()
        })
    }, t.filterEntity = function() {
        return o("filter")(o("filter")(t.reqCategorys, t.searchString), t.searchString)
    }, t.performSelection = function(e) {
        i.performSelection(e, r, s)
    }, t.bulkChange = function() {
        a.setProperty(o("orderBy")(o("filter")(t.reqCategorys, {
            selected: !0
        }), ["showOrder"]))
    }, t.search = function() {
        e.query({
            query: t.searchQuery
        }, function(e) {
            t.reqCategorys = e
        }, function(e) {
            404 === e.status && t.loadAll()
        })
    }, t.refresh = function() {
        t.loadAll(), t.clear()
    }, t.clear = function() {
        t.reqCategory = {
            name: null,
            shortcut: null,
            description: null,
            showOrder: null,
            active: null,
            id: null
        }
    }
}]), angular.module("sdlctoolApp").controller("ReqCategoryDialogController", ["$scope", "$stateParams", "$uibModalInstance", "entity", "ReqCategory", "RequirementSkeleton", function(t, e, n, a, o, i) {
    t.reqCategory = a, t.requirementskeletons = i.query(), t.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            t.reqCategory = e
        })
    };

    function r(e) {
        t.$emit("sdlctoolApp:reqCategoryUpdate", e), n.close(e)
    }
    t.save = function() {
        null != t.reqCategory.id ? o.update(t.reqCategory, r) : o.save(t.reqCategory, r)
    }, t.clear = function() {
        n.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").controller("ReqCategoryDetailController", ["$scope", "$rootScope", "$stateParams", "entity", "ReqCategory", function(n, e, t, a, o) {
    n.reqCategory = a, n.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            n.reqCategory = e
        })
    }, e.$on("sdlctoolApp:reqCategoryUpdate", function(e, t) {
        n.reqCategory = t
    })
}]), angular.module("sdlctoolApp").controller("ReqCategoryBulkController", ["$scope", "$stateParams", "$uibModalInstance", "$filter", "entity", "ReqCategory", "sharedProperties", function(n, e, t, a, o, i, r) {
    n.requirementCategories = [], n.active = !0, n.state = {
        active: !0
    }, n.getIndeterminateForActiveButton = function() {
        var t = 0;
        n.state.active = n.requirementCategories[0].active, angular.forEach(n.requirementCategories, function(e) {
            e.active === n.state.active && t++
        }), t !== n.requirementCategories.length && delete n.state.active
    }, n.loadAll = function() {
        n.showTypes = "Show selected requirement categories", n.glyphicon = "glyphicon glyphicon-plus", n.show = !0, n.requirementCategories = r.getProperty(), n.getIndeterminateForActiveButton()
    }, n.loadAll();

    function s(e) {
        n.$emit("sdlctoolApp:requirementCategoryUpdate", e), t.close(e)
    }
    n.save = function() {
        var t = 1;
        angular.forEach(n.requirementCategories, function(e) {
            e.active = n.state.active, t == n.requirementCategories.length ? i.update(e, s) : i.update(e), t++
        })
    }, n.toggleShowHide = function() {
        n.show = !n.show, n.show ? (n.showTypes = "Show selected requirement categories", n.glyphicon = "glyphicon glyphicon-plus") : (n.showTypes = "Hide selected requirement categories", n.glyphicon = "glyphicon glyphicon-minus")
    }, n.delete = function() {
        $("#deleteReqCategoriesConfirmation").appendTo("body").modal("show")
    }, n.confirmDeleteAll = function(t) {
        var n = 1;
        angular.forEach(t, function(e) {
            n == t.length ? i.delete({
                id: e.id
            }, function(e) {
                $("#deleteReqCategoriesConfirmation").modal("hide"), s(e)
            }) : i.delete({
                id: e.id
            }, function() {}), n++
        })
    }, n.clear = function() {
        t.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").factory("ReqCategory", ["$resource", "DateUtils", "SDLCToolExceptionService", function(e, t, n) {
    return e("api/reqCategorys/:id", {}, {
        query: {
            method: "GET",
            isArray: !0
        },
        get: {
            method: "GET",
            transformResponse: function(e) {
                return e = angular.fromJson(e)
            }
        },
        update: {
            method: "PUT"
        },
        delete: {
            method: "DELETE",
            transformResponse: function(e) {
                if (e.includes("hibernate.exception.ConstraintViolationException")) return n.showWarning("No se pudo eliminar la CategorÃ­a de Requisito debido a las dependencias", "La CategorÃ­a de Requisito no se pudo eliminar porque un Esqueleto de Requisitos de entidad todavÃ­a hace referencia a esa CategorÃ­a de Requisito. Elimine primero el Esqueleto de Requisitos correspondiente.", n.DANGER), $("#deleteReqCategoryConfirmation").modal("hide"), null;
                return $("#deleteReqCategoryConfirmation").modal("hide"), e
            }
        }
    })
}]), angular.module("sdlctoolApp").factory("ReqCategorySearch", ["$resource", function(e) {
    return e("api/_search/reqCategorys/:query", {}, {
        query: {
            method: "GET",
            isArray: !0
        }
    })
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("statusColumn", {
        parent: "entity",
        url: "/statusColumns",
        data: {
            roles: ["ROLE_USER"],
            pageTitle: "StatusColumns"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/statusColumn/statusColumns.html",
                controller: "StatusColumnController"
            }
        },
        resolve: {}
    }).state("statusColumn.detail", {
        parent: "entity",
        url: "/statusColumn/{id}",
        data: {
            roles: ["ROLE_USER"],
            pageTitle: "StatusColumn"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/statusColumn/statusColumn-detail.html",
                controller: "StatusColumnDetailController"
            }
        },
        resolve: {
            entity: ["$stateParams", "StatusColumn", function(e, t) {
                return t.get({
                    id: e.id
                })
            }]
        }
    }).state("statusColumn.new", {
        parent: "statusColumn",
        url: "/new",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(e, t, n) {
            n.open({
                templateUrl: "scripts/app/entities/statusColumn/statusColumn-dialog.html",
                controller: "StatusColumnDialogController",
                size: "lg",
                resolve: {
                    entity: function() {
                        return {
                            name: null,
                            description: null,
                            isEnum: !1,
                            showOrder: null,
                            active: !1,
                            id: null
                        }
                    }
                }
            }).result.then(function(e) {
                t.go("statusColumn", null, {
                    reload: !0
                })
            }, function() {
                t.go("statusColumn")
            })
        }]
    }).state("statusColumn.edit", {
        parent: "statusColumn",
        url: "/{id}/edit",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(t, n, e) {
            e.open({
                templateUrl: "scripts/app/entities/statusColumn/statusColumn-dialog.html",
                controller: "StatusColumnDialogController",
                size: "lg",
                resolve: {
                    entity: ["StatusColumn", function(e) {
                        return e.get({
                            id: t.id
                        })
                    }]
                }
            }).result.then(function(e) {
                n.go("statusColumn", null, {
                    reload: !0
                })
            }, function() {
                n.go("^")
            })
        }]
    }).state("statusColumn.bulk", {
        parent: "statusColumn",
        url: "/edit",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(e, t, n) {
            n.open({
                templateUrl: "scripts/app/entities/statusColumn/statusColumn-bulk.html",
                controller: "StatusColumnBulkController",
                size: "lg",
                resolve: {
                    entity: function() {
                        return {
                            name: null,
                            description: null,
                            showOrder: null,
                            active: null,
                            id: null
                        }
                    }
                }
            }).result.then(function(e) {
                t.go("statusColumn", null, {
                    reload: !0
                })
            }, function() {
                t.go("statusColumn")
            })
        }]
    })
}]), angular.module("sdlctoolApp").controller("StatusColumnController", ["$scope", "StatusColumn", "StatusColumnSearch", "sharedProperties", "$filter", "EntityHelper", function(t, n, e, a, o, i) {
    function r() {
        angular.forEach(t.filterEntity(), function(e) {
            e.selected = !0
        })
    }

    function s() {
        i.deselectElements(o("filter")(t.filterEntity(), {
            selected: !0
        }))
    }
    t.statusColumns = [], t.searchString = "", t.loadAll = function() {
        n.query(function(e) {
            t.statusColumns = e, angular.forEach(t.statusColumns, function(e) {
                angular.extend(e, {
                    selected: !1
                })
            })
        })
    }, t.loadAll(), t.delete = function(e) {
        n.get({
            id: e
        }, function(e) {
            t.statusColumn = e, $("#deleteStatusColumnConfirmation").appendTo("body").modal("show")
        })
    }, t.confirmDelete = function(e) {
        n.delete({
            id: e
        }, function() {
            t.loadAll(), $("#deleteStatusColumnConfirmation").modal("hide"), t.clear()
        })
    }, t.filterEntity = function() {
        return o("filter")(t.statusColumns, t.searchString)
    }, t.performSelection = function(e) {
        i.performSelection(e, r, s)
    }, t.bulkChange = function() {
        a.setProperty(o("orderBy")(o("filter")(t.statusColumns, {
            selected: !0
        }), ["showOrder"]))
    }, t.search = function() {
        e.query({
            query: t.searchQuery
        }, function(e) {
            t.statusColumns = e
        }, function(e) {
            404 === e.status && t.loadAll()
        })
    }, t.refresh = function() {
        t.loadAll(), t.clear()
    }, t.clear = function() {
        t.statusColumn = {
            name: null,
            description: null,
            isEnum: null,
            showOrder: null,
            active: null,
            id: null
        }
    }
}]), angular.module("sdlctoolApp").controller("StatusColumnDialogController", ["$scope", "$stateParams", "$uibModalInstance", "entity", "StatusColumn", "StatusColumnValue", "ProjectType", function(t, e, n, a, o, i, r) {
    t.statusColumn = a, t.statuscolumnvalues = i.query(), t.projecttypes = r.query(), t.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            t.statusColumn = e
        })
    };

    function s(e) {
        t.$emit("sdlctoolApp:statusColumnUpdate", e), n.close(e)
    }
    t.save = function() {
        null != t.statusColumn.id ? o.update(t.statusColumn, s) : o.save(t.statusColumn, s)
    }, t.clear = function() {
        n.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").controller("StatusColumnDetailController", ["$scope", "$rootScope", "$stateParams", "entity", "StatusColumn", function(n, e, t, a, o) {
    n.statusColumn = a, n.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            n.statusColumn = e
        })
    }, e.$on("sdlctoolApp:statusColumnUpdate", function(e, t) {
        n.statusColumn = t
    })
}]), angular.module("sdlctoolApp").controller("StatusColumnBulkController", ["$scope", "$stateParams", "$uibModalInstance", "$filter", "entity", "StatusColumn", "sharedProperties", function(a, e, t, n, o, i, r) {
    a.statusColumns = [], a.state = {
        active: !0,
        isEnum: !0
    }, a.getIndeterminateForActiveButton = function(t) {
        var n = 0;
        a.state[t] = a.statusColumns[0][t], angular.forEach(a.statusColumns, function(e) {
            e[t] === a.state[t] && n++
        }), n !== a.statusColumns.length && delete a.state[t]
    }, a.loadAll = function() {
        a.showTypes = "Show selected option columns", a.glyphicon = "glyphicon glyphicon-plus", a.show = !0, a.statusColumns = r.getProperty(), a.getIndeterminateForActiveButton("active"), a.getIndeterminateForActiveButton("isEnum")
    }, a.loadAll(), a.toggleShowHide = function() {
        a.show = !a.show, a.show ? (a.showTypes = "Show selected option columns", a.glyphicon = "glyphicon glyphicon-plus") : (a.showTypes = "Hide selected option columns", a.glyphicon = "glyphicon glyphicon-minus")
    };

    function s(e) {
        a.$emit("sdlctoolApp:statusColumnUpdate", e), t.close(e)
    }
    a.save = function() {
        var t = 1;
        angular.forEach(a.statusColumns, function(e) {
            angular.isDefined(a.state.active) && (e.active = a.state.active), angular.isDefined(a.state.isEnum) && (e.isEnum = a.state.isEnum), t == a.statusColumns.length ? i.update(e, s) : i.update(e), t++
        })
    }, a.delete = function() {
        $("#deleteStatusColumnsConfirmation").appendTo("body").modal("show")
    }, a.confirmDeleteAll = function(t) {
        var n = 1;
        angular.forEach(t, function(e) {
            n == t.length ? i.delete({
                id: e.id
            }, function(e) {
                $("#deleteStatusColumnsConfirmation").modal("hide"), s(e)
            }) : i.delete({
                id: e.id
            }, function() {}), n++
        })
    }, a.clear = function() {
        t.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").factory("StatusColumn", ["$resource", "DateUtils", "SDLCToolExceptionService", function(e, t, n) {
    return e("api/statusColumns/:id", {}, {
        query: {
            method: "GET",
            isArray: !0
        },
        get: {
            method: "GET",
            transformResponse: function(e) {
                return e = angular.fromJson(e)
            }
        },
        update: {
            method: "PUT"
        },
        delete: {
            method: "DELETE",
            transformResponse: function(e) {
                if (e.includes("hibernate.exception.ConstraintViolationException")) return n.showWarning("La eliminaciÃ³n de la Columna de Estado fallÃ³ debido a las dependencias", "La Columna de Estado no se pudo eliminar porque una entidad de Tipo de ImplementaciÃ³n todavÃ­a hace referencia a esa Columna de Estado. Elimine primero el Tipo de ImplementaciÃ³n correspondiente.", n.DANGER), $("#deleteStatusColumnConfirmation").modal("hide"), null;
                return $("#deleteStatusColumnConfirmation").modal("hide"), e
            }
        }
    })
}]), angular.module("sdlctoolApp").factory("StatusColumnSearch", ["$resource", function(e) {
    return e("api/_search/statusColumns/:query", {}, {
        query: {
            method: "GET",
            isArray: !0
        }
    })
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("statusColumnValue", {
        parent: "entity",
        url: "/statusColumnValues",
        data: {
            roles: ["ROLE_USER"],
            pageTitle: "StatusColumnValues"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/statusColumnValue/statusColumnValues.html",
                controller: "StatusColumnValueController"
            }
        },
        resolve: {}
    }).state("statusColumnValue.detail", {
        parent: "entity",
        url: "/statusColumnValue/{id}",
        data: {
            roles: ["ROLE_USER"],
            pageTitle: "StatusColumnValue"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/statusColumnValue/statusColumnValue-detail.html",
                controller: "StatusColumnValueDetailController"
            }
        },
        resolve: {
            entity: ["$stateParams", "StatusColumnValue", function(e, t) {
                return t.get({
                    id: e.id
                })
            }]
        }
    }).state("statusColumnValue.new", {
        parent: "statusColumnValue",
        url: "/new",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(e, t, n) {
            n.open({
                templateUrl: "scripts/app/entities/statusColumnValue/statusColumnValue-dialog.html",
                controller: "StatusColumnValueDialogController",
                size: "lg",
                resolve: {
                    entity: function() {
                        return {
                            name: null,
                            description: null,
                            showOrder: null,
                            active: !1,
                            id: null
                        }
                    }
                }
            }).result.then(function(e) {
                t.go("statusColumnValue", null, {
                    reload: !0
                })
            }, function() {
                t.go("statusColumnValue")
            })
        }]
    }).state("statusColumnValue.edit", {
        parent: "statusColumnValue",
        url: "/{id}/edit",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(t, n, e) {
            e.open({
                templateUrl: "scripts/app/entities/statusColumnValue/statusColumnValue-dialog.html",
                controller: "StatusColumnValueDialogController",
                size: "lg",
                resolve: {
                    entity: ["StatusColumnValue", function(e) {
                        return e.get({
                            id: t.id
                        })
                    }]
                }
            }).result.then(function(e) {
                n.go("statusColumnValue", null, {
                    reload: !0
                })
            }, function() {
                n.go("^")
            })
        }]
    }).state("statusColumnValue.bulk", {
        parent: "statusColumnValue",
        url: "/edit",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(e, t, n) {
            n.open({
                templateUrl: "scripts/app/entities/statusColumnValue/statusColumnValue-bulk.html",
                controller: "StatusColumnValueBulkController",
                size: "lg",
                resolve: {
                    entity: function() {
                        return {
                            name: null,
                            description: null,
                            showOrder: null,
                            active: null,
                            id: null
                        }
                    }
                }
            }).result.then(function(e) {
                t.go("statusColumnValue", null, {
                    reload: !0
                })
            }, function() {
                t.go("statusColumnValue")
            })
        }]
    })
}]), angular.module("sdlctoolApp").controller("StatusColumnValueController", ["$scope", "StatusColumn", "StatusColumnValue", "StatusColumnValueSearch", "sharedProperties", "$filter", "EntityHelper", function(t, e, n, a, o, i, r) {
    function s() {
        angular.forEach(t.filterEntity(), function(e) {
            e.selected = !0
        })
    }

    function l() {
        r.deselectElements(i("filter")(t.filterEntity(), {
            selected: !0
        }))
    }
    t.statusColumnValues = [], t.statusColumns = [], t.selectedColumns = [], t.searchString = "", t.statusColumnLabelText = {
        buttonDefaultText: "Status Column"
    }, t.selectedColumnSettings = {
        smartButtonMaxItems: 2,
        showCheckAll: !1,
        showUncheckAll: !1,
        displayProp: "name",
        idProp: "id",
        externalIdProp: ""
    }, t.loadAll = function() {
        n.query(function(e) {
            t.statusColumnValues = e, angular.forEach(t.statusColumnValues, function(e) {
                angular.extend(e, {
                    selected: !1
                })
            })
        }), e.query(function(e) {
            t.statusColumns = e
        })
    }, t.loadAll(), t.delete = function(e) {
        n.get({
            id: e
        }, function(e) {
            t.statusColumnValue = e, $("#deleteStatusColumnValueConfirmation").appendTo("body").modal("show")
        })
    }, t.confirmDelete = function(e) {
        n.delete({
            id: e
        }, function() {
            t.loadAll(), $("#deleteStatusColumnValueConfirmation").modal("hide"), t.clear()
        })
    }, t.filterEntity = function() {
        var e = i("filterCategoryForEntities")(t.statusColumnValues, t.selectedColumns, "statusColumn");
        return i("filter")(e, t.searchString)
    }, t.performSelection = function(e) {
        r.performSelection(e, s, l)
    }, t.bulkChange = function() {
        o.setProperty(i("orderBy")(i("filter")(t.statusColumnValues, {
            selected: !0
        }), ["statusColumn.showOrder", "showOrder"]))
    }, t.search = function() {
        a.query({
            query: t.searchQuery
        }, function(e) {
            t.statusColumnValues = e
        }, function(e) {
            404 === e.status && t.loadAll()
        })
    }, t.refresh = function() {
        t.loadAll(), t.clear()
    }, t.clear = function() {
        t.statusColumnValue = {
            name: null,
            description: null,
            showOrder: null,
            active: null,
            id: null
        }
    }
}]), angular.module("sdlctoolApp").controller("StatusColumnValueDialogController", ["$scope", "$stateParams", "$uibModalInstance", "entity", "StatusColumnValue", "StatusColumn", function(t, e, n, a, o, i) {
    t.statusColumnValue = a, t.statuscolumns = i.query(), t.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            t.statusColumnValue = e
        })
    };

    function r(e) {
        t.$emit("sdlctoolApp:statusColumnValueUpdate", e), n.close(e)
    }
    t.save = function() {
        null != t.statusColumnValue.id ? o.update(t.statusColumnValue, r) : o.save(t.statusColumnValue, r)
    }, t.clear = function() {
        n.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").controller("StatusColumnValueDetailController", ["$scope", "$rootScope", "$stateParams", "entity", "StatusColumnValue", function(n, e, t, a, o) {
    n.statusColumnValue = a, n.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            n.statusColumnValue = e
        })
    }, e.$on("sdlctoolApp:statusColumnValueUpdate", function(e, t) {
        n.statusColumnValue = t
    })
}]), angular.module("sdlctoolApp").controller("StatusColumnValueBulkController", ["$scope", "$stateParams", "$uibModalInstance", "$filter", "entity", "StatusColumnValue", "StatusColumn", "sharedProperties", function(n, e, t, a, o, i, r, s) {
    n.statusColumnValues = [], n.statusColumns = [], n.state = {
        active: !0
    }, n.selectedStatusColumn = {
        value: null
    }, n.getIndeterminateForActiveButton = function() {
        var t = 0;
        n.state.active = n.statusColumnValues[0].active, angular.forEach(n.statusColumnValues, function(e) {
            e.active === n.state.active && t++
        }), t !== n.statusColumnValues.length && delete n.state.active
    }, n.toggleShowHide = function() {
        n.show = !n.show, n.show ? (n.showTypes = "Show selected values", n.glyphicon = "glyphicon glyphicon-plus") : (n.showTypes = "Hide selected values", n.glyphicon = "glyphicon glyphicon-minus")
    }, n.loadAll = function() {
        n.showTypes = "Show selected values", n.glyphicon = "glyphicon glyphicon-plus", n.show = !0, n.statusColumnValues = s.getProperty(), n.getIndeterminateForActiveButton(), r.query(function(e) {
            n.statusColumns = e
        })
    }, n.loadAll();

    function l(e) {
        n.$emit("sdlctoolApp:statusColumnValueUpdate", e), t.close(e)
    }
    n.save = function() {
        var e = 1;
        angular.forEach(n.statusColumnValues, function(t) {
            angular.isDefined(n.state.active) && (t.active = n.state.active), null !== n.selectedStatusColumn.value && angular.forEach(n.statusColumns, function(e) {
                n.selectedStatusColumn.value === e.id && (t.statusColumn = e)
            }), e == n.statusColumnValues.length ? i.update(t, l) : i.update(t), e++
        })
    }, n.delete = function() {
        $("#deleteStatusColumnValuesConfirmation").appendTo("body").modal("show")
    }, n.confirmDeleteAll = function(t) {
        var n = 1;
        angular.forEach(t, function(e) {
            n == t.length ? i.delete({
                id: e.id
            }, function(e) {
                $("#deleteStatusColumnValuesConfirmation").modal("hide"), l(e)
            }) : i.delete({
                id: e.id
            }, function() {}), n++
        })
    }, n.clear = function() {
        t.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").factory("StatusColumnValue", ["$resource", "DateUtils", function(e, t) {
    return e("api/statusColumnValues/:id", {}, {
        query: {
            method: "GET",
            isArray: !0
        },
        get: {
            method: "GET",
            transformResponse: function(e) {
                return e = angular.fromJson(e)
            }
        },
        update: {
            method: "PUT"
        }
    })
}]), angular.module("sdlctoolApp").factory("StatusColumnValueSearch", ["$resource", function(e) {
    return e("api/_search/statusColumnValues/:query", {}, {
        query: {
            method: "GET",
            isArray: !0
        }
    })
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("optColumnType", {
        parent: "entity",
        url: "/optColumnTypes",
        data: {
            roles: ["ROLE_USER"],
            pageTitle: "OptColumnTypes"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/optColumnType/optColumnTypes.html",
                controller: "OptColumnTypeController"
            }
        },
        resolve: {}
    }).state("optColumnType.detail", {
        parent: "entity",
        url: "/optColumnType/{id}",
        data: {
            roles: ["ROLE_USER"],
            pageTitle: "OptColumnType"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/optColumnType/optColumnType-detail.html",
                controller: "OptColumnTypeDetailController"
            }
        },
        resolve: {
            entity: ["$stateParams", "OptColumnType", function(e, t) {
                return t.get({
                    id: e.id
                })
            }]
        }
    }).state("optColumnType.new", {
        parent: "optColumnType",
        url: "/new",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(e, t, n) {
            n.open({
                templateUrl: "scripts/app/entities/optColumnType/optColumnType-dialog.html",
                controller: "OptColumnTypeDialogController",
                size: "lg",
                resolve: {
                    entity: function() {
                        return {
                            name: null,
                            description: null,
                            id: null
                        }
                    }
                }
            }).result.then(function(e) {
                t.go("optColumnType", null, {
                    reload: !0
                })
            }, function() {
                t.go("optColumnType")
            })
        }]
    }).state("optColumnType.edit", {
        parent: "optColumnType",
        url: "/{id}/edit",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(t, n, e) {
            e.open({
                templateUrl: "scripts/app/entities/optColumnType/optColumnType-dialog.html",
                controller: "OptColumnTypeDialogController",
                size: "lg",
                resolve: {
                    entity: ["OptColumnType", function(e) {
                        return e.get({
                            id: t.id
                        })
                    }]
                }
            }).result.then(function(e) {
                n.go("optColumnType", null, {
                    reload: !0
                })
            }, function() {
                n.go("^")
            })
        }]
    })
}]), angular.module("sdlctoolApp").controller("OptColumnTypeController", ["$scope", "OptColumnType", function(t, n) {
    t.optColumnTypes = [], t.searchString = "", t.loadAll = function() {
        n.query(function(e) {
            t.optColumnTypes = e
        })
    }, t.loadAll(), t.delete = function(e) {
        n.get({
            id: e
        }, function(e) {
            t.optColumnType = e, $("#deleteOptColumnTypeConfirmation").appendTo("body").modal("show")
        })
    }, t.confirmDelete = function(e) {
        n.delete({
            id: e
        }, function() {
            t.loadAll(), $("#deleteOptColumnTypeConfirmation").modal("hide"), t.clear()
        })
    }, t.refresh = function() {
        t.loadAll(), t.clear()
    }, t.clear = function() {
        t.optColumnType = {
            name: null,
            description: null,
            id: null
        }
    }
}]), angular.module("sdlctoolApp").controller("OptColumnTypeDialogController", ["$scope", "$stateParams", "$uibModalInstance", "entity", "OptColumnType", "OptColumn", function(t, e, n, a, o, i) {
    t.optColumnType = a, t.optcolumns = i.query(), t.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            t.optColumnType = e
        })
    };

    function r(e) {
        t.$emit("sdlctoolApp:optColumnTypeUpdate", e), n.close(e)
    }
    t.save = function() {
        null != t.optColumnType.id ? o.update(t.optColumnType, r) : o.save(t.optColumnType, r)
    }, t.clear = function() {
        n.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").controller("OptColumnTypeDetailController", ["$scope", "$rootScope", "$stateParams", "entity", "OptColumnType", function(n, e, t, a, o) {
    n.optColumnType = a, n.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            n.optColumnType = e
        })
    }, e.$on("sdlctoolApp:optColumnTypeUpdate", function(e, t) {
        n.optColumnType = t
    })
}]), angular.module("sdlctoolApp").factory("OptColumnType", ["$resource", "DateUtils", "SDLCToolExceptionService", function(e, t, n) {
    return e("api/optColumnTypes/:id", {}, {
        query: {
            method: "GET",
            isArray: !0
        },
        get: {
            method: "GET",
            transformResponse: function(e) {
                return e = angular.fromJson(e)
            }
        },
        update: {
            method: "PUT"
        },
        delete: {
            method: "DELETE",
            transformResponse: function(e) {
                if (e.includes("hibernate.exception.ConstraintViolationException")) return n.showWarning("La eliminaciÃ³n de la columna Tipo de Columna Opcional fallÃ³ debido a las dependencias", "El Tipo de Columna Opcional no se pudo eliminar porque una entidad de Columna Opcional todavÃ­a hace referencia a ese tipo de Columna Opcional. Elimine primero la Columna Opcional correspondiente.", n.DANGER), $("#deleteOptColumnTypeConfirmation").modal("hide"), null;
                return $("#deleteOptColumnTypeConfirmation").modal("hide"), e
            }
        }
    })
}]), angular.module("sdlctoolApp").factory("OptColumnTypeSearch", ["$resource", function(e) {
    return e("api/_search/optColumnTypes/:query", {}, {
        query: {
            method: "GET",
            isArray: !0
        }
    })
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("optColumn", {
        parent: "entity",
        url: "/optColumns",
        data: {
            roles: ["ROLE_USER"],
            pageTitle: "OptColumns"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/optColumn/optColumns.html",
                controller: "OptColumnController"
            }
        },
        resolve: {}
    }).state("optColumn.detail", {
        parent: "entity",
        url: "/optColumn/{id}",
        data: {
            roles: ["ROLE_USER"],
            pageTitle: "OptColumn"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/optColumn/optColumn-detail.html",
                controller: "OptColumnDetailController"
            }
        },
        resolve: {
            entity: ["$stateParams", "OptColumn", function(e, t) {
                return t.get({
                    id: e.id
                })
            }]
        }
    }).state("optColumn.new", {
        parent: "optColumn",
        url: "/new",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(e, t, n) {
            n.open({
                templateUrl: "scripts/app/entities/optColumn/optColumn-dialog.html",
                controller: "OptColumnDialogController",
                size: "lg",
                resolve: {
                    entity: function() {
                        return {
                            name: null,
                            description: null,
                            showOrder: null,
                            active: !1,
                            id: null,
                            isVisibleByDefault: !0
                        }
                    }
                }
            }).result.then(function(e) {
                t.go("optColumn", null, {
                    reload: !0
                })
            }, function() {
                t.go("optColumn")
            })
        }]
    }).state("optColumn.edit", {
        parent: "optColumn",
        url: "/{id}/edit",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(t, n, e) {
            e.open({
                templateUrl: "scripts/app/entities/optColumn/optColumn-dialog.html",
                controller: "OptColumnDialogController",
                size: "lg",
                resolve: {
                    entity: ["OptColumn", function(e) {
                        return e.get({
                            id: t.id
                        })
                    }]
                }
            }).result.then(function(e) {
                n.go("optColumn", null, {
                    reload: !0
                })
            }, function() {
                n.go("^")
            })
        }]
    }).state("optColumn.bulk", {
        parent: "optColumn",
        url: "/edit",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(e, t, n) {
            n.open({
                templateUrl: "scripts/app/entities/optColumn/optColumn-bulk.html",
                controller: "OptColumnBulkController",
                size: "lg",
                resolve: {
                    entity: function() {
                        return {
                            name: null,
                            description: null,
                            showOrder: null,
                            active: null,
                            id: null,
                            isVisibleByDefault: null
                        }
                    }
                }
            }).result.then(function(e) {
                t.go("optColumn", null, {
                    reload: !0
                })
            }, function() {
                t.go("optColumn")
            })
        }]
    })
}]), angular.module("sdlctoolApp").controller("OptColumnController", ["$scope", "OptColumn", "OptColumnSearch", "sharedProperties", "$filter", "EntityHelper", function(t, n, e, a, o, i) {
    function r() {
        angular.forEach(t.filterEntity(), function(e) {
            e.selected = !0
        })
    }

    function s() {
        i.deselectElements(o("filter")(t.filterEntity(), {
            selected: !0
        }))
    }
    t.optColumns = [], t.searchString = "", t.loadAll = function() {
        n.query(function(e) {
            t.optColumns = e, angular.forEach(t.optColumns, function(e) {
                angular.extend(e, {
                    selected: !1
                })
            })
        })
    }, t.loadAll(), t.delete = function(e) {
        n.get({
            id: e
        }, function(e) {
            t.optColumn = e, $("#deleteOptColumnConfirmation").appendTo("body").modal("show")
        })
    }, t.confirmDelete = function(e) {
        n.delete({
            id: e
        }, function() {
            t.loadAll(), $("#deleteOptColumnConfirmation").modal("hide"), t.clear()
        })
    }, t.filterEntity = function() {
        return o("filter")(t.optColumns, t.searchString)
    }, t.performSelection = function(e) {
        i.performSelection(e, r, s)
    }, t.bulkChange = function() {
        a.setProperty(o("orderBy")(o("filter")(t.optColumns, {
            selected: !0
        }), ["showOrder"]))
    }, t.search = function() {
        e.query({
            query: t.searchQuery
        }, function(e) {
            t.optColumns = e
        }, function(e) {
            404 === e.status && t.loadAll()
        })
    }, t.refresh = function() {
        t.loadAll(), t.clear()
    }, t.clear = function() {
        t.optColumn = {
            name: null,
            description: null,
            showOrder: null,
            active: null,
            isVisibleByDefault: null,
            id: null
        }
    }
}]), angular.module("sdlctoolApp").controller("OptColumnDialogController", ["$scope", "$stateParams", "$uibModalInstance", "entity", "OptColumn", "OptColumnType", "AlternativeSet", "OptColumnContent", "ProjectType", function(t, e, n, a, o, i, r, s, l) {
    t.optColumn = a, t.optcolumntypes = i.query(), t.alternativesets = r.query(), t.optcolumncontents = s.query(), t.projecttypes = l.query(), t.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            t.optColumn = e
        })
    };

    function c(e) {
        t.$emit("sdlctoolApp:optColumnUpdate", e), n.close(e)
    }
    t.save = function() {
        null !== t.optColumn.id ? o.update(t.optColumn, c) : o.save(t.optColumn, c)
    }, t.clear = function() {
        n.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").controller("OptColumnDetailController", ["$scope", "$rootScope", "$stateParams", "entity", "OptColumn", function(n, e, t, a, o) {
    n.optColumn = a, n.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            n.optColumn = e
        })
    }, e.$on("sdlctoolApp:optColumnUpdate", function(e, t) {
        n.optColumn = t
    })
}]), angular.module("sdlctoolApp").controller("OptColumnBulkController", ["$scope", "$stateParams", "$uibModalInstance", "$filter", "entity", "OptColumn", "OptColumnType", "sharedProperties", function(n, e, t, a, o, i, r, s) {
    n.optColumns = [], n.optColumnTypes = [], n.state = {
        active: !0
    }, n.selectedType = {
        value: null
    }, n.getIndeterminateForActiveButton = function() {
        var t = 0;
        n.state.active = n.optColumns[0].active, angular.forEach(n.optColumns, function(e) {
            e.active === n.state.active && t++
        }), t !== n.optColumns.length && delete n.state.active
    }, n.loadAll = function() {
        n.showTypes = "Show selected option columns", n.glyphicon = "glyphicon glyphicon-plus", n.show = !0, n.optColumns = s.getProperty(), n.getIndeterminateForActiveButton(), r.query(function(e) {
            n.optColumnTypes = e
        })
    }, n.loadAll();

    function l(e) {
        n.$emit("sdlctoolApp:optColumnUpdate", e), t.close(e)
    }
    n.toggleShowHide = function() {
        n.show = !n.show, n.show ? (n.showTypes = "Show selected option columns", n.glyphicon = "glyphicon glyphicon-plus") : (n.showTypes = "Hide selected option columns", n.glyphicon = "glyphicon glyphicon-minus")
    }, n.save = function() {
        var e = 1;
        angular.forEach(n.optColumns, function(t) {
            angular.isDefined(n.state.active) && (t.active = n.state.active), null !== n.selectedType.value && angular.forEach(n.optColumnTypes, function(e) {
                n.selectedType.value === e.id && (t.optColumnType = e)
            }), e === n.optColumns.length ? i.update(t, l) : i.update(t), e++
        })
    }, n.delete = function() {
        $("#deleteOptColumnsConfirmation").appendTo("body").modal("show")
    }, n.confirmDeleteAll = function(t) {
        var n = 1;
        angular.forEach(t, function(e) {
            n === t.length ? i.delete({
                id: e.id
            }, function(e) {
                $("#deleteOptColumnsConfirmation").modal("hide"), l(e)
            }) : i.delete({
                id: e.id
            }, function() {}), n++
        })
    }, n.clear = function() {
        t.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").factory("OptColumn", ["$resource", "DateUtils", "SDLCToolExceptionService", function(e, t, n) {
    return e("api/optColumns/:id", {}, {
        query: {
            method: "GET",
            isArray: !0
        },
        get: {
            method: "GET",
            transformResponse: function(e) {
                return e = angular.fromJson(e)
            }
        },
        update: {
            method: "PUT"
        },
        delete: {
            method: "DELETE",
            transformResponse: function(e) {
                if (e.includes("hibernate.exception.ConstraintViolationException")) return n.showWarning("La eliminaciÃ³n de la Columna Opcional fallÃ³ debido a las dependencias", "La Columna Opcional no se pudo eliminar porque una entidad de Tipo de ImplementaciÃ³n todavÃ­a hace referencia a esa Columna Opcional. Elimine primero el Tipo de ImplementaciÃ³n correspondiente.", n.DANGER), $("#deleteOptColumnConfirmation").modal("hide"), null;
                return $("#deleteOptColumnConfirmation").modal("hide"), e
            }
        }
    })
}]), angular.module("sdlctoolApp").factory("OptColumnSearch", ["$resource", function(e) {
    return e("api/_search/optColumns/:query", {}, {
        query: {
            method: "GET",
            isArray: !0
        }
    })
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("alternativeSet", {
        parent: "entity",
        url: "/alternativeSets",
        data: {
            roles: ["ROLE_USER"],
            pageTitle: "AlternativeSets"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/alternativeSet/alternativeSets.html",
                controller: "AlternativeSetController"
            }
        },
        resolve: {}
    }).state("alternativeSet.detail", {
        parent: "entity",
        url: "/alternativeSet/{id}",
        data: {
            roles: ["ROLE_USER"],
            pageTitle: "AlternativeSet"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/alternativeSet/alternativeSet-detail.html",
                controller: "AlternativeSetDetailController"
            }
        },
        resolve: {
            entity: ["$stateParams", "AlternativeSet", function(e, t) {
                return t.get({
                    id: e.id
                })
            }]
        }
    }).state("alternativeSet.new", {
        parent: "alternativeSet",
        url: "/new",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(e, t, n) {
            n.open({
                templateUrl: "scripts/app/entities/alternativeSet/alternativeSet-dialog.html",
                controller: "AlternativeSetDialogController",
                size: "lg",
                resolve: {
                    entity: function() {
                        return {
                            name: null,
                            description: null,
                            showOrder: null,
                            active: !1,
                            id: null
                        }
                    }
                }
            }).result.then(function() {
                t.go("alternativeSet", null, {
                    reload: !0
                })
            }, function() {
                t.go("alternativeSet")
            })
        }]
    }).state("alternativeSet.edit", {
        parent: "alternativeSet",
        url: "/{id}/edit",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(t, e, n) {
            n.open({
                templateUrl: "scripts/app/entities/alternativeSet/alternativeSet-dialog.html",
                controller: "AlternativeSetDialogController",
                size: "lg",
                resolve: {
                    entity: ["AlternativeSet", function(e) {
                        return e.get({
                            id: t.id
                        })
                    }]
                }
            }).result.then(function() {
                e.go("alternativeSet", null, {
                    reload: !0
                })
            }, function() {
                e.go("^")
            })
        }]
    }).state("alternativeSet.bulk", {
        parent: "alternativeSet",
        url: "/edit",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(e, t, n) {
            n.open({
                templateUrl: "scripts/app/entities/alternativeSet/alternativeSet-bulk.html",
                controller: "AlternativeSetBulkController",
                size: "lg",
                resolve: {
                    entity: function() {
                        return {
                            name: null,
                            description: null,
                            showOrder: null,
                            active: null,
                            id: null
                        }
                    }
                }
            }).result.then(function() {
                t.go("alternativeSet", null, {
                    reload: !0
                })
            }, function() {
                t.go("alternativeSet")
            })
        }]
    })
}]), angular.module("sdlctoolApp").controller("AlternativeSetController", ["$scope", "AlternativeSet", "AlternativeSetSearch", "OptColumn", "sharedProperties", "$filter", "EntityHelper", function(t, n, e, a, o, i, r) {
    function s() {
        angular.forEach(t.filterEntity(), function(e) {
            e.selected = !0
        })
    }

    function l() {
        r.deselectElements(i("filter")(t.filterEntity(), {
            selected: !0
        }))
    }
    t.alternativeSets = [], t.optColumns = [], t.selectedOptColumns = [], t.searchString = "", t.optColumnLabelText = {
        buttonDefaultText: "Option Column"
    }, t.selectedOptColumnSettings = {
        smartButtonMaxItems: 2,
        showCheckAll: !1,
        showUncheckAll: !1,
        displayProp: "name",
        idProp: "id",
        externalIdProp: ""
    }, t.loadAll = function() {
        n.query(function(e) {
            t.alternativeSets = e, angular.forEach(t.alternativeSets, function(e) {
                angular.extend(e, {
                    selected: !1
                })
            })
        }), a.query(function(e) {
            t.optColumns = e
        })
    }, t.loadAll(), t.delete = function(e) {
        n.get({
            id: e
        }, function(e) {
            t.alternativeSet = e, $("#deleteAlternativeSetConfirmation").appendTo("body").modal("show")
        })
    }, t.confirmDelete = function(e) {
        n.delete({
            id: e
        }, function() {
            t.loadAll(), $("#deleteAlternativeSetConfirmation").modal("hide"), t.clear()
        })
    }, t.filterEntity = function() {
        var e = i("filterCategoryForEntities")(t.alternativeSets, t.selectedOptColumns, "optColumn");
        return i("filter")(e, t.searchString)
    }, t.performSelection = function(e) {
        r.performSelection(e, s, l)
    }, t.bulkChange = function() {
        o.setProperty(i("orderBy")(i("filter")(t.alternativeSets, {
            selected: !0
        }), ["optColumn.showOrder", "showOrder"]))
    }, t.refresh = function() {
        t.loadAll(), t.clear()
    }, t.clear = function() {
        t.alternativeSet = {
            name: null,
            description: null,
            showOrder: null,
            active: null,
            id: null
        }
    }
}]), angular.module("sdlctoolApp").controller("AlternativeSetDialogController", ["$scope", "$stateParams", "$uibModalInstance", "entity", "AlternativeSet", "OptColumn", "AlternativeInstance", function(t, e, n, a, o, i, r) {
    t.alternativeSet = a, t.optcolumns = i.query(), t.alternativeinstances = r.query(), t.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            t.alternativeSet = e
        })
    };

    function s(e) {
        t.$emit("sdlctoolApp:alternativeSetUpdate", e), n.close(e)
    }
    t.save = function() {
        null !== t.alternativeSet.id ? o.update(t.alternativeSet, s) : o.save(t.alternativeSet, s)
    }, t.clear = function() {
        n.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").controller("AlternativeSetDetailController", ["$scope", "$rootScope", "$stateParams", "entity", "AlternativeSet", function(n, e, t, a, o) {
    n.alternativeSet = a, n.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            n.alternativeSet = e
        })
    }, e.$on("sdlctoolApp:alternativeSetUpdate", function(e, t) {
        n.alternativeSet = t
    })
}]), angular.module("sdlctoolApp").controller("AlternativeSetBulkController", ["$scope", "$stateParams", "$uibModalInstance", "$filter", "entity", "AlternativeSet", "OptColumn", "sharedProperties", function(n, e, t, a, o, i, r, s) {
    n.alternativeSets = [], n.optColumns = [], n.state = {
        active: !0
    }, n.selectedOptColumn = {
        value: null
    }, n.getIndeterminateForActiveButton = function() {
        var t = 0;
        n.state.active = n.alternativeSets[0].active, angular.forEach(n.alternativeSets, function(e) {
            e.active === n.state.active && t++
        }), t !== n.alternativeSets.length && delete n.state.active
    }, n.loadAll = function() {
        n.showTypes = "Show selected alternative sets", n.glyphicon = "glyphicon glyphicon-plus", n.show = !0, n.alternativeSets = s.getProperty(), n.getIndeterminateForActiveButton(), r.query(function(e) {
            n.optColumns = e
        })
    }, n.loadAll(), n.toggleShowHide = function() {
        n.show = !n.show, n.show ? (n.showTypes = "Show selected alternative sets", n.glyphicon = "glyphicon glyphicon-plus") : (n.showTypes = "Hide selected alternative sets", n.glyphicon = "glyphicon glyphicon-minus")
    };

    function l(e) {
        n.$emit("sdlctoolApp:alternativeSetUpdate", e), t.close(e)
    }
    n.save = function() {
        var e = 1;
        angular.forEach(n.alternativeSets, function(t) {
            angular.isDefined(n.state.active) && (t.active = n.state.active), null !== n.selectedOptColumn.value && angular.forEach(n.optColumns, function(e) {
                n.selectedOptColumn.value === e.id && (t.optColumn = e)
            }), e === n.alternativeSets.length ? i.update(t, l) : i.update(t), e++
        })
    }, n.delete = function() {
        $("#deleteAlternativeSetsConfirmation").appendTo("body").modal("show")
    }, n.confirmDeleteAll = function(t) {
        var n = 1;
        angular.forEach(t, function(e) {
            n === t.length ? i.delete({
                id: e.id
            }, function(e) {
                $("#deleteAlternativeSetsConfirmation").modal("hide"), l(e)
            }) : i.delete({
                id: e.id
            }, function() {}), n++
        })
    }, n.clear = function() {
        t.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").factory("AlternativeSet", ["$resource", "DateUtils", "SDLCToolExceptionService", function(e, t, n) {
    return e("api/alternativeSets/:id", {}, {
        query: {
            method: "GET",
            isArray: !0
        },
        get: {
            method: "GET",
            transformResponse: function(e) {
                return e = angular.fromJson(e)
            }
        },
        update: {
            method: "PUT"
        },
        delete: {
            method: "DELETE",
            transformResponse: function(e) {
                if (e.includes("hibernate.exception.ConstraintViolationException")) return n.showWarning("La eliminaciÃ³n del Conjunto Alternativo fallÃ³ debido a las dependencias", "El Conjunto Alternativo no se pudo eliminar porque una entidad de Instancia Alternativa todavÃ­a hace referencia a ese Conjunto Alternativo. Elimine primero la Instancia Alternativa correspondiente.", n.DANGER), $("#deleteAlternativeSetConfirmation").modal("hide"), null;
                return $("#deleteAlternativeSetConfirmation").modal("hide"), e
            }
        }
    })
}]), angular.module("sdlctoolApp").factory("AlternativeSetSearch", ["$resource", function(e) {
    return e("api/_search/alternativeSets/:query", {}, {
        query: {
            method: "GET",
            isArray: !0
        }
    })
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("projectType", {
        parent: "entity",
        url: "/projectTypes",
        data: {
            roles: ["ROLE_USER"],
            pageTitle: "ProjectTypes"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/projectType/projectTypes.html",
                controller: "ProjectTypeController"
            }
        },
        resolve: {}
    }).state("projectType.detail", {
        parent: "entity",
        url: "/projectType/{id}",
        data: {
            roles: ["ROLE_USER"],
            pageTitle: "ProjectType"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/projectType/projectType-detail.html",
                controller: "ProjectTypeDetailController"
            }
        },
        resolve: {
            entity: ["$stateParams", "ProjectType", function(e, t) {
                return t.get({
                    id: e.id
                })
            }]
        }
    }).state("projectType.new", {
        parent: "projectType",
        url: "/new",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(e, t, n) {
            n.open({
                templateUrl: "scripts/app/entities/projectType/projectType-dialog.html",
                controller: "ProjectTypeDialogController",
                size: "lg",
                resolve: {
                    entity: function() {
                        return {
                            name: null,
                            description: null,
                            showOrder: null,
                            active: null,
                            id: null
                        }
                    }
                }
            }).result.then(function(e) {
                t.go("projectType", null, {
                    reload: !0
                })
            }, function() {
                t.go("projectType")
            })
        }]
    }).state("projectType.edit", {
        parent: "projectType",
        url: "/{id}/edit",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(t, n, e) {
            e.open({
                templateUrl: "scripts/app/entities/projectType/projectType-dialog.html",
                controller: "ProjectTypeDialogController",
                size: "lg",
                resolve: {
                    entity: ["ProjectType", function(e) {
                        return e.get({
                            id: t.id
                        })
                    }]
                }
            }).result.then(function(e) {
                n.go("projectType", null, {
                    reload: !0
                })
            }, function() {
                n.go("^")
            })
        }]
    }).state("projectType.bulk", {
        parent: "projectType",
        url: "/edit",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(e, t, n) {
            n.open({
                templateUrl: "scripts/app/entities/projectType/projectType-bulk.html",
                controller: "ProjectTypeBulkController",
                size: "lg",
                resolve: {
                    entity: function() {
                        return {
                            name: null,
                            description: null,
                            showOrder: null,
                            active: null,
                            id: null
                        }
                    }
                }
            }).result.then(function(e) {
                t.go("projectType", null, {
                    reload: !0
                })
            }, function() {
                t.go("projectType")
            })
        }]
    })
}]), angular.module("sdlctoolApp").controller("ProjectTypeController", ["$scope", "ProjectType", "ProjectTypeSearch", "$filter", "sharedProperties", "EntityHelper", function(t, n, e, a, o, i) {
    function r() {
        angular.forEach(t.filterEntity(), function(e) {
            e.selected = !0
        })
    }

    function s() {
        i.deselectElements(a("filter")(t.filterEntity(), {
            selected: !0
        }))
    }
    t.projectTypes = [], t.searchString = "", t.loadAll = function() {
        n.query(function(e) {
            t.projectTypes = e, angular.forEach(t.projectTypes, function(e) {
                angular.extend(e, {
                    selected: !1
                })
            })
        })
    }, t.loadAll(), t.delete = function(e) {
        n.get({
            id: e
        }, function(e) {
            t.projectType = e, $("#deleteProjectTypeConfirmation").appendTo("body").modal("show")
        })
    }, t.confirmDelete = function(e) {
        n.delete({
            id: e
        }, function() {
            t.loadAll(), $("#deleteProjectTypeConfirmation").modal("hide"), t.clear()
        })
    }, t.filterEntity = function() {
        return a("filter")(t.projectTypes, t.searchString)
    }, t.performSelection = function(e) {
        i.performSelection(e, r, s)
    }, t.bulkChange = function() {
        o.setProperty(a("orderBy")(a("filter")(t.projectTypes, {
            selected: !0
        }), ["showOrder"]))
    }, t.search = function() {
        e.query({
            query: t.searchQuery
        }, function(e) {
            t.projectTypes = e
        }, function(e) {
            404 === e.status && t.loadAll()
        })
    }, t.refresh = function() {
        t.loadAll(), t.clear()
    }, t.clear = function() {
        t.projectType = {
            name: null,
            description: null,
            showOrder: null,
            active: null,
            id: null
        }
    }
}]), angular.module("sdlctoolApp").controller("ProjectTypeDialogController", ["$scope", "$stateParams", "$uibModalInstance", "entity", "ProjectType", "StatusColumn", "OptColumn", "RequirementSkeleton", function(t, e, n, a, o, i, r, s) {
    t.projectType = a, t.statuscolumns = i.query(), t.optcolumns = r.query(), t.requirementskeletons = s.query(), t.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            t.projectType = e
        })
    };

    function l(e) {
        t.$emit("sdlctoolApp:projectTypeUpdate", e), n.close(e)
    }
    t.save = function() {
        null != t.projectType.id ? o.update(t.projectType, l) : o.save(t.projectType, l)
    }, t.clear = function() {
        n.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").controller("ProjectTypeDetailController", ["$scope", "$rootScope", "$stateParams", "entity", "ProjectType", function(n, e, t, a, o) {
    n.projectType = a, n.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            n.projectType = e
        })
    }, e.$on("sdlctoolApp:projectTypeUpdate", function(e, t) {
        n.projectType = t
    })
}]), angular.module("sdlctoolApp").controller("ProjectTypeBulkController", ["$scope", "$stateParams", "$uibModalInstance", "$filter", "entity", "ProjectType", "OptColumn", "StatusColumn", "sharedProperties", function(i, e, t, n, a, r, o, s, l) {
    i.projectTypes = [], i.optColumns = [], i.statusColumns = [], i.state = {
        active: !0
    }, i.selectedOptColumns = {}, i.selectedStatusColumns = {}, i.getIndeterminateForActiveButton = function() {
        var t = 0;
        i.state.active = i.projectTypes[0].active, angular.forEach(i.projectTypes, function(e) {
            e.active === i.state.active && t++
        }), t !== i.projectTypes.length && delete i.state.active
    }, i.getStateForOptColumns = function(t) {
        var n = 0;
        angular.forEach(i.projectTypes, function(e) {
            angular.forEach(e.optColumns, function(e) {
                t === e.id && n++
            })
        }), n === i.projectTypes.length ? i.selectedOptColumns[t].value = t.toString() : n !== i.count && 0 !== n && (i.selectedOptColumns[t].isKnown = !0)
    }, i.getStateForStatColumns = function(t) {
        var n = 0;
        angular.forEach(i.projectTypes, function(e) {
            angular.forEach(e.statusColumns, function(e) {
                t === e.id && n++
            })
        }), n === i.projectTypes.length ? i.selectedStatusColumns[t].value = t.toString() : n !== i.count && 0 !== n && (i.selectedStatusColumns[t].isKnown = !0)
    }, i.removeIndeterminateState = function(e, t) {
        i[t][e.id].isKnown = !1
    }, i.loadAll = function() {
        i.show = !0, i.projectTypes = l.getProperty(), i.showTypes = "Show selected project types", i.glyphicon = "glyphicon glyphicon-plus", i.getIndeterminateForActiveButton(), o.query(function(e) {
            i.optColumns = e, angular.forEach(i.optColumns, function(e) {
                i.selectedOptColumns[e.id] = {}, i.selectedOptColumns[e.id].isKnown = !1, i.selectedOptColumns[e.id].selectedCount = 0, i.selectedOptColumns[e.id].value = ""
            })
        }), s.query(function(e) {
            i.statusColumns = e, angular.forEach(i.statusColumns, function(e) {
                i.selectedStatusColumns[e.id] = {}, i.selectedStatusColumns[e.id].isKnown = !1, i.selectedStatusColumns[e.id].selectedCount = 0, i.selectedStatusColumns[e.id].value = ""
            })
        })
    }, i.loadAll();

    function c(e) {
        i.$emit("sdlctoolApp:projectTypeUpdate", e), t.close(e)
    }
    i.toggleShowHide = function() {
        i.show = !i.show, i.show ? (i.showTypes = "Show selected project types", i.glyphicon = "glyphicon glyphicon-plus") : (i.showTypes = "Hide selected project types", i.glyphicon = "glyphicon glyphicon-minus")
    }, i.save = function() {
        var e = 1;
        angular.forEach(i.projectTypes, function(o) {
            angular.isDefined(i.state.active) && (o.active = i.state.active), angular.forEach(i.optColumns, function(e) {
                for (var t = !1, n = 0, a = 0; a < o.optColumns.length; a++) e.id === o.optColumns[a].id && (t = !0, n = a);
                i.selectedOptColumns[e.id].isKnown || ("" == i.selectedOptColumns[e.id].value || t ? "" === i.selectedOptColumns[e.id].value && t && o.optColumns.splice(n, 1) : o.optColumns.push(e))
            }), angular.forEach(i.statusColumns, function(e) {
                for (var t = !1, n = 0, a = 0; a < o.statusColumns.length; a++) e.id === o.statusColumns[a].id && (t = !0, n = a);
                i.selectedStatusColumns[e.id].isKnown || ("" == i.selectedStatusColumns[e.id].value || t ? "" === i.selectedStatusColumns[e.id].value && t && o.statusColumns.splice(n, 1) : o.statusColumns.push(e))
            }), e == i.projectTypes.length ? r.update(o, c) : r.update(o), e++
        })
    }, i.delete = function() {
        $("#deleteProjectTypesConfirmation").appendTo("body").modal("show")
    }, i.confirmDeleteAll = function(t) {
        var n = 1;
        angular.forEach(t, function(e) {
            n == t.length ? r.delete({
                id: e.id
            }, function(e) {
                $("#deleteProjectTypesConfirmation").modal("hide"), c(e)
            }) : r.delete({
                id: e.id
            }, function() {}), n++
        })
    }, i.clear = function() {
        t.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").factory("ProjectType", ["$resource", "DateUtils", "SDLCToolExceptionService", function(e, t, n) {
    return e("api/projectTypes/:id", {}, {
        query: {
            method: "GET",
            isArray: !0
        },
        get: {
            method: "GET",
            transformResponse: function(e) {
                return e = angular.fromJson(e)
            }
        },
        update: {
            method: "PUT"
        },
        delete: {
            method: "DELETE",
            transformResponse: function(e) {
                if (e.includes("hibernate.exception.ConstraintViolationException")) return n.showWarning("Deletion of Implementation Type failed due to dependencies", "The Implementation Type could not be deleted because a Requirement Skeleton entity is still referencing to that Implementation Type. Please delete the corresponding Requirement Skeleton first.", n.DANGER), $("#deleteProjectTypeConfirmation").modal("hide"), null;
                return $("#deleteProjectTypeConfirmation").modal("hide"), e
            }
        }
    })
}]), angular.module("sdlctoolApp").factory("ProjectTypeSearch", ["$resource", function(e) {
    return e("api/_search/projectTypes/:query", {}, {
        query: {
            method: "GET",
            isArray: !0
        }
    })
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("requirementSkeleton", {
        parent: "entity",
        url: "/requirementSkeletons",
        data: {
            roles: ["ROLE_USER"],
            pageTitle: "RequirementSkeletons"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/requirementSkeleton/requirementSkeletons.html",
                controller: "RequirementSkeletonController"
            }
        },
        resolve: {}
    }).state("requirementSkeleton.detail", {
        parent: "entity",
        url: "/requirementSkeleton/{id}",
        data: {
            roles: ["ROLE_USER"],
            pageTitle: "RequirementSkeleton"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/requirementSkeleton/requirementSkeleton-detail.html",
                controller: "RequirementSkeletonDetailController"
            }
        },
        resolve: {
            entity: ["$stateParams", "RequirementSkeleton", function(e, t) {
                return t.get({
                    id: e.id
                })
            }]
        }
    }).state("requirementSkeleton.new", {
        parent: "requirementSkeleton",
        url: "/new",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(e, t, n) {
            n.open({
                templateUrl: "scripts/app/entities/requirementSkeleton/requirementSkeleton-dialog.html",
                controller: "RequirementSkeletonDialogController",
                size: "lg",
                resolve: {
                    entity: function() {
                        return {
                            universalId: null,
                            shortName: null,
                            description: null,
                            showOrder: null,
                            active: !1,
                            id: null
                        }
                    }
                }
            }).result.then(function(e) {
                t.go("requirementSkeleton", null, {
                    reload: !0
                })
            }, function() {
                t.go("requirementSkeleton")
            })
        }]
    }).state("requirementSkeleton.edit", {
        parent: "requirementSkeleton",
        url: "/{id}/edit",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(t, n, e) {
            e.open({
                templateUrl: "scripts/app/entities/requirementSkeleton/requirementSkeleton-dialog.html",
                controller: "RequirementSkeletonDialogController",
                size: "lg",
                resolve: {
                    entity: ["RequirementSkeleton", function(e) {
                        return e.get({
                            id: t.id
                        })
                    }]
                }
            }).result.then(function(e) {
                n.go("requirementSkeleton", null, {
                    reload: !0
                })
            }, function() {
                n.go("^")
            })
        }]
    }).state("requirementSkeleton.bulk", {
        parent: "requirementSkeleton",
        url: "/edit",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(e, t, n) {
            n.open({
                templateUrl: "scripts/app/entities/requirementSkeleton/requirementSkeleton-bulk.html",
                controller: "RequirementSkeletonBulkController",
                size: "lg",
                resolve: {
                    entity: function() {
                        return {
                            universalId: null,
                            shortName: null,
                            description: null,
                            showOrder: null,
                            active: null,
                            id: null
                        }
                    }
                }
            }).result.then(function(e) {
                t.go("requirementSkeleton", null, {
                    reload: !0
                })
            }, function() {
                t.go("requirementSkeleton")
            })
        }]
    })
}]), angular.module("sdlctoolApp").controller("RequirementSkeletonController", ["$scope", "$filter", "sharedProperties", "RequirementSkeleton", "RequirementSkeletonSearch", "ReqCategory", "TagInstance", "ProjectType", "CollectionInstance", "TagCategory", "CollectionCategory", "$document", "EntityHelper", "ProgressBar", function(r, t, e, n, a, o, i, s, l, c, d, u, p, m) {
    function g() {
        angular.forEach(r.filterEntity(), function(e) {
            e.selected = !0
        })
    }

    function h() {
        p.deselectElements(t("filter")(r.filterEntity(), {
            selected: !0
        }))
    }
    r.requirementSkeletons = [], r.filterCategory = [], r.tagCategories = [], r.collCategories = [], r.dropdowns = {}, r.tagInstances = [], r.projectTypes = [], r.collectionsInstances = [], r.selectedCategory = [], r.selectedTags = [], r.selectedTypes = [], r.selectedColls = [], r.searchString = "", r.length = 1e3, r.numberToDisplay = 50, r.categoryLabelText = {
        buttonDefaultText: "Category"
    }, r.progressbar = {
        hide: !0,
        barValue: 0,
        intervalPromise: void 0,
        showContent: !1
    }, r.selectedCategorySettings = {
        smartButtonMaxItems: 2,
        showCheckAll: !1,
        showUncheckAll: !1,
        displayProp: "name",
        idProp: "id",
        externalIdProp: ""
    }, r.selectedTagSettings = {
        smartButtonMaxItems: 2,
        showCheckAll: !1,
        showUncheckAll: !1,
        displayProp: "name",
        idProp: "id",
        externalIdProp: "",
        groupByTextProvider: function(e) {
            return e.name
        }
    }, r.typeLabelText = {
        buttonDefaultText: "Project Types"
    }, m.startProgressbar(r.progressbar), r.loadAll = function() {
        n.query(function(e) {
            r.requirementSkeletons = e, angular.forEach(r.requirementSkeletons, function(e) {
                angular.extend(e, {
                    selected: !1
                })
            }), r.length = r.requirementSkeletons.length, m.finishProgressbar(r.progressbar)
        }), o.query(function(e) {
            r.filterCategory = e, t("orderBy")(r.filterCategory, "showOrder")
        }), i.query(function(e) {
            r.tagInstances = e, t("orderBy")(r.tagInstances, "showOrder")
        }), s.query(function(e) {
            r.projectTypes = e, t("orderBy")(r.projectTypes, "showOrder")
        }), l.query(function(e) {
            r.collectionsInstances = e, t("orderBy")(r.collectionsInstances, "showOrder")
        }), c.query(function(e) {
            r.tagCategories = e, t("orderBy")(r.tagCategories, "showOrder")
        }), d.query(function(e) {
            r.collCategories = e, t("orderBy")(r.collCategories, "showOrder")
        }), r.dropdowns.tag = {
            buttonText: "Tags",
            open: !1,
            defaultText: "Tags"
        }, r.dropdowns.coll = {
            buttonText: "Collections",
            open: !1,
            defaultText: "Collections"
        }
    }, r.loadAll(), r.loadMore = function() {
        r.numberToDisplay + 50 < r.length ? r.numberToDisplay += 50 : r.numberToDisplay = r.length
    }, r.toggleDropdown = function(a, e) {
        var t = ["tag", "coll"];
        if (t.splice(t.indexOf(a), 1), r.dropdowns[a].open) r.dropdowns[a].open = !1;
        else {
            u.on("click", function(e) {
                for (var t = e.target.parentElement, n = !1; angular.isDefined(t) && null !== t && !n;) angular.equals(t.id, "multiselect-parent") && !n && (n = !0), t = t.parentElement;
                n || r.$apply(function() {
                    r.dropdowns[a].open = !1
                })
            });
            for (var n = 0; n < t.length; n++) r.dropdowns[t[n]].open = !1;
            r.dropdowns[a].open = !0
        }
    }, r.selectTagInstance = function(e, t, n) {
        for (var a = !1, o = 0, i = 0; i < r[t].length; i++)
            if (r[t][i].id === e.id) {
                a = !0, o = i;
                break
            }
        if (a ? r[t].splice(o, 1) : r[t].push(e), 0 === r[t].length && (r.dropdowns[n].buttonText = r.dropdowns[n].defaultText), 0 < r[t].length) {
            for (r.dropdowns[n].buttonText = "", r.dropdowns[n].buttonText = r[t][0].name, i = 1; i < r[t].length && i < 2; i++) r.dropdowns[n].buttonText += ", " + r[t][1].name;
            2 < r[t].length && (r.dropdowns[n].buttonText += ",...")
        }
    }, r.isTagSelected = function(e, t) {
        for (var n = !1, a = 0; a < r[t].length; a++)
            if (r[t][a].id === e.id) {
                n = !0;
                break
            }
        return !!n
    }, r.filterEntity = function() {
        var e = t("filterCategoryForEntities")(r.requirementSkeletons, r.selectedCategory, "reqCategory"),
            e = t("filterByTagForReqSkeletons")(e, r.selectedTags);
        return e = t("filterByCollsForReqSkeletons")(e, r.selectedColls), e = t("filterByTypesForReqSkeletons")(e, r.selectedTypes), e = t("orderBy")(e, ["reqCategory.showOrder", "showOrder"]), t("filter")(e, r.searchString)
    }, r.performSelection = function(e) {
        p.performSelection(e, g, h)
    }, r.bulkChange = function() {
        var t = [];
        angular.forEach(r.requirementSkeletons, function(e) {
            e.selected && t.push(e)
        }), e.setProperty(t)
    }, r.delete = function(e) {
        n.get({
            id: e
        }, function(e) {
            r.requirementSkeleton = e, $("#deleteRequirementSkeletonConfirmation").appendTo("body").modal("show")
        })
    }, r.confirmDelete = function(e) {
        n.delete({
            id: e
        }, function() {
            r.loadAll(), $("#deleteRequirementSkeletonConfirmation").modal("hide"), r.clear()
        })
    }, r.search = function() {
        a.query({
            query: r.searchQuery
        }, function(e) {
            r.requirementSkeletons = e
        }, function(e) {
            404 === e.status && r.loadAll()
        })
    }, r.refresh = function() {
        r.loadAll(), r.clear()
    }, r.clear = function() {
        r.requirementSkeleton = {
            universalId: null,
            shortName: null,
            description: null,
            showOrder: null,
            active: null,
            id: null
        }
    }
}]), angular.module("sdlctoolApp").controller("RequirementSkeletonDialogController", ["$scope", "$stateParams", "$uibModalInstance", "entity", "RequirementSkeleton", "OptColumnContent", "AlternativeInstance", "ReqCategory", "TagInstance", "CollectionInstance", "ProjectType", "CollectionCategory", "TagCategory", function(a, e, t, n, o, i, r, s, l, c, d, u, p) {
    a.requirementSkeleton = n, void 0 === a.requirementSkeleton.tagInstances && (a.requirementSkeleton.tagInstances = []), void 0 === a.requirementSkeleton.collectionInstances && (a.requirementSkeleton.collectionInstances = []), void 0 === a.requirementSkeleton.projectTypes && (a.requirementSkeleton.projectTypes = []), a.optcolumncontents = i.query(), a.alternativeinstances = r.query(), a.reqcategorys = s.query(), a.taginstances = l.query(), a.collectioninstances = c.query(), a.projecttypes = d.query(), a.tagCategories = p.query(), a.collectionCategories = u.query(), a.chosenCollections = [], a.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            a.requirementSkeleton = e
        })
    }, a.getCollectionInstancesForCategory = function(t) {
        return a.collectioninstances.filter(function(e) {
            return e.collectionCategory.id === t
        })
    }, a.getTagInstancesForCategory = function(t) {
        return a.taginstances.filter(function(e) {
            return e.tagCategory.id === t
        })
    }, a.arrayObjectIndexOf = function(e, t, n) {
        if (void 0 === e) return -1;
        for (var a = 0, o = e.length; a < o; a++)
            if (e[a][n] === t) return a;
        return -1
    }, a.toggleSelection = function(e, t) {
        void 0 === e && (e = []);
        var n = a.arrayObjectIndexOf(e, t.id, "id"); - 1 < n ? e.splice(n, 1) : e.push(t)
    };

    function m(e) {
        a.$emit("sdlctoolApp:requirementSkeletonUpdate", e), t.close(e)
    }
    a.save = function() {
        null !== a.requirementSkeleton.id ? o.update(a.requirementSkeleton, m) : o.save(a.requirementSkeleton, m)
    }, a.clear = function() {
        t.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").controller("RequirementSkeletonDetailController", ["$scope", "$rootScope", "$stateParams", "entity", "RequirementSkeleton", function(n, e, t, a, o) {
    n.requirementSkeleton = a, n.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            n.requirementSkeleton = e
        })
    }, e.$on("sdlctoolApp:requirementSkeletonUpdate", function(e, t) {
        n.requirementSkeleton = t
    })
}]), angular.module("sdlctoolApp").controller("RequirementSkeletonBulkController", ["$scope", "$stateParams", "$uibModalInstance", "sharedProperties", "$filter", "entity", "RequirementSkeleton", "ReqCategory", "TagInstance", "TagCategory", "CollectionCategory", "CollectionInstance", "ProjectType", function(i, e, t, n, a, o, r, s, l, c, d, u, p) {
    i.requirements = [], i.requirementCategories = [], i.tagInstances = [], i.selectedTagInstances = {}, i.collectionInstances = [], i.selectedCollectionInstances = {}, i.projectTypes = [], i.selectedProjectTypes = {}, i.tagCategories = [], i.collectionCategories = [], i.count = 0, i.showRequirement = "Show selected requirements", i.glyphicon = "glyphicon glyphicon-plus", i.show = !0, i.indeterminateTagInstances = [], i.selectedCat = {
        value: null
    }, i.state = {
        active: !0
    }, i.getIndeterminateForActiveButton = function() {
        var t = 0;
        i.state.active = i.requirements[0].active, angular.forEach(i.requirements, function(e) {
            e.active === i.state.active && t++
        }), t !== i.requirements.length && delete i.state.active
    }, i.loadAll = function() {
        i.requirements = n.getProperty(), i.count = i.requirements.length, i.getIndeterminateForActiveButton(), s.query(function(e) {
            i.requirementCategories = e, a("orderBy")(i.requirementCategories, "showOrder")
        }), c.query(function(e) {
            i.tagCategories = e, a("orderBy")(i.tagCategories, "showOrder")
        }), l.query(function(e) {
            i.tagInstances = e, a("orderBy")(i.tagInstances, "showOrder"), angular.forEach(i.tagInstances, function(e) {
                i.selectedTagInstances[e.id] = {}, i.selectedTagInstances[e.id].value = "", i.selectedTagInstances[e.id].isKnown = !1
            })
        }), u.query(function(e) {
            i.collectionInstances = e, a("orderBy")(i.collectionInstances, "showOrder"), angular.forEach(i.collectionInstances, function(e) {
                i.selectedCollectionInstances[e.id] = {}, i.selectedCollectionInstances[e.id].value = "", i.selectedCollectionInstances[e.id].isKnown = !1
            })
        }), d.query(function(e) {
            i.collectionCategories = e, a("orderBy")(i.collectionCategories, "showOrder")
        }), p.query(function(e) {
            i.projectTypes = e, a("orderBy")(i.projectTypes, "showOrder"), angular.forEach(i.projectTypes, function(e) {
                i.selectedProjectTypes[e.id] = {}, i.selectedProjectTypes[e.id].value = "", i.selectedProjectTypes[e.id].isKnown = !1
            })
        })
    }, i.loadAll(), i.getCollectionInstancesForCategory = function(t) {
        return i.collectionInstances.filter(function(e) {
            return e.collectionCategory.id === t
        })
    }, i.getTagInstancesForCategory = function(t) {
        return i.tagInstances.filter(function(e) {
            return e.tagCategory.id === t
        })
    }, i.getCheckedForTagInstances = function(t) {
        var n = 0;
        angular.forEach(i.requirements, function(e) {
            angular.forEach(e.tagInstances, function(e) {
                t === e.id && n++
            })
        }), n === i.count ? i.selectedTagInstances[t].value = t.toString() : n !== i.count && 0 !== n && (i.selectedTagInstances[t].isKnown = !0)
    }, i.getCheckedForCollectionInstances = function(t) {
        var n = 0;
        angular.forEach(i.requirements, function(e) {
            angular.forEach(e.collectionInstances, function(e) {
                t === e.id && n++
            })
        }), n === i.count ? i.selectedCollectionInstances[t].value = t.toString() : n !== i.count && 0 !== n && (i.selectedCollectionInstances[t].isKnown = !0)
    }, i.getCheckedForProjectTypes = function(t) {
        var n = 0;
        angular.forEach(i.requirements, function(e) {
            angular.forEach(e.projectTypes, function(e) {
                t === e.id && n++
            })
        }), n === i.count ? i.selectedProjectTypes[t].value = t.toString() : n !== i.count && 0 !== n && (i.selectedProjectTypes[t].isKnown = !0)
    }, i.removeIndeterminate = function(e, t) {
        i[t][e].isKnown = !1
    }, i.toggleShowHide = function() {
        i.show = !i.show, i.show ? (i.showRequirement = "Show selected requirements", i.glyphicon = "glyphicon glyphicon-plus") : (i.showRequirement = "Hide selected requirements", i.glyphicon = "glyphicon glyphicon-minus")
    };

    function m(e) {
        i.$emit("sdlctoolApp:requirementSkeletonUpdate", e), t.close(e)
    }
    i.save = function() {
        var e = 1;
        angular.forEach(i.requirements, function(o) {
            angular.forEach(i.tagInstances, function(e) {
                for (var t = !1, n = 0, a = 0; a < o.tagInstances.length; a++) e.id === o.tagInstances[a].id && (t = !0, n = a);
                i.selectedTagInstances[e.id].isKnown || ("" === i.selectedTagInstances[e.id].value || t ? "" === i.selectedTagInstances[e.id].value && t && o.tagInstances.splice(n, 1) : o.tagInstances.push(e))
            }), angular.forEach(i.collectionInstances, function(e) {
                for (var t = !1, n = 0, a = 0; a < o.collectionInstances.length; a++) e.id === o.collectionInstances[a].id && (t = !0, n = a);
                i.selectedCollectionInstances[e.id].isKnown || ("" === i.selectedCollectionInstances[e.id].value || t ? "" === i.selectedCollectionInstances[e.id].value && t && o.collectionInstances.splice(n, 1) : o.collectionInstances.push(e))
            }), angular.forEach(i.projectTypes, function(e) {
                for (var t = !1, n = 0, a = 0; a < o.projectTypes.length; a++) e.id === o.projectTypes[a].id && (t = !0, n = a);
                i.selectedProjectTypes[e.id].isKnown || ("" === i.selectedProjectTypes[e.id].value || t ? "" === i.selectedProjectTypes[e.id].value && t && o.projectTypes.splice(n, 1) : o.projectTypes.push(e))
            }), null !== i.selectedCat.value && angular.forEach(i.requirementCategories, function(e) {
                i.selectedCat.value === e.id && (o.reqCategory = e)
            }), angular.isDefined(i.state.active) && (o.active = i.state.active), e === i.requirements.length ? r.update(o, m) : r.update(o), e++
        })
    }, i.delete = function() {
        $("#deleteRequirementSkeletonsConfirmation").appendTo("body").modal("show")
    }, i.confirmDeleteAll = function(t) {
        var n = 1;
        angular.forEach(t, function(e) {
            n === t.length ? r.delete({
                id: e.id
            }, function(e) {
                $("#deleteRequirementSkeletonsConfirmation").modal("hide"), m(e)
            }) : r.delete({
                id: e.id
            }, function() {}), n++
        })
    }, i.clear = function() {
        t.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").factory("RequirementSkeleton", ["$resource", "DateUtils", "SDLCToolExceptionService", function(e, t, n) {
    return e("api/requirementSkeletons/:id", {}, {
        query: {
            method: "GET",
            isArray: !0
        },
        get: {
            method: "GET",
            transformResponse: function(e) {
                return e = angular.fromJson(e)
            }
        },
        update: {
            method: "PUT"
        },
        delete: {
            method: "DELETE",
            transformResponse: function(e) {
                if (e.includes("hibernate.exception.ConstraintViolationException")) return n.showWarning("La eliminaciÃ³n del Esqueleto de Requisito fallÃ³ debido a las dependencias", "El Esqueleto de Requisito no se pudo eliminar porque el Contenido de la Columna Opcional o una entidad de Instancia Alternativa todavÃ­a hace referencia a ese Esqueleto de Requisito. Elimine primero el Contenido de la Columna Opcional correspondiente o la Instancia Alternativa.", n.DANGER), $("#deleteRequirementSkeletonConfirmation").modal("hide"), null;
                return $("#deleteRequirementSkeletonConfirmation").modal("hide"), e
            }
        }
    })
}]), angular.module("sdlctoolApp").factory("RequirementSkeletonSearch", ["$resource", function(e) {
    return e("api/_search/requirementSkeletons/:query", {}, {
        query: {
            method: "GET",
            isArray: !0
        }
    })
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("alternativeInstance", {
        parent: "entity",
        url: "/alternativeInstances",
        data: {
            roles: ["ROLE_USER"],
            pageTitle: "AlternativeInstances"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/alternativeInstance/alternativeInstances.html",
                controller: "AlternativeInstanceController"
            }
        },
        resolve: {}
    }).state("alternativeInstance.detail", {
        parent: "entity",
        url: "/alternativeInstance/{id}",
        data: {
            roles: ["ROLE_USER"],
            pageTitle: "AlternativeInstance"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/alternativeInstance/alternativeInstance-detail.html",
                controller: "AlternativeInstanceDetailController"
            }
        },
        resolve: {
            entity: ["$stateParams", "AlternativeInstance", function(e, t) {
                return t.get({
                    id: e.id
                })
            }]
        }
    }).state("alternativeInstance.new", {
        parent: "alternativeInstance",
        url: "/new",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(e, t, n) {
            n.open({
                templateUrl: "scripts/app/entities/alternativeInstance/alternativeInstance-dialog.html",
                controller: "AlternativeInstanceDialogController",
                size: "lg",
                resolve: {
                    entity: function() {
                        return {
                            content: null,
                            id: null
                        }
                    }
                }
            }).result.then(function() {
                t.go("alternativeInstance", null, {
                    reload: !0
                })
            }, function() {
                t.go("alternativeInstance")
            })
        }]
    }).state("alternativeInstance.edit", {
        parent: "alternativeInstance",
        url: "/{id}/edit",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(t, e, n) {
            n.open({
                templateUrl: "scripts/app/entities/alternativeInstance/alternativeInstance-dialog.html",
                controller: "AlternativeInstanceDialogController",
                size: "lg",
                resolve: {
                    entity: ["AlternativeInstance", function(e) {
                        return e.get({
                            id: t.id
                        })
                    }]
                }
            }).result.then(function() {
                e.go("alternativeInstance", null, {
                    reload: !0
                })
            }, function() {
                e.go("^")
            })
        }]
    }).state("alternativeInstance.bulk", {
        parent: "alternativeInstance",
        url: "/edit",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(e, t, n) {
            n.open({
                templateUrl: "scripts/app/entities/alternativeInstance/alternativeInstance-bulk.html",
                controller: "AlternativeInstanceBulkController",
                size: "lg",
                resolve: {
                    entity: function() {
                        return {
                            name: null,
                            description: null,
                            showOrder: null,
                            active: null,
                            id: null
                        }
                    }
                }
            }).result.then(function() {
                t.go("alternativeInstance", null, {
                    reload: !0
                })
            }, function() {
                t.go("alternativeInstance")
            })
        }]
    })
}]), angular.module("sdlctoolApp").controller("AlternativeInstanceController", ["$scope", "AlternativeInstance", "AlternativeInstanceSearch", "AlternativeSet", "sharedProperties", "$filter", "marked", "EntityHelper", function(t, n, e, a, o, i, r, s) {
    function l() {
        angular.forEach(t.filterEntity(), function(e) {
            e.selected = !0
        })
    }

    function c() {
        s.deselectElements(i("filter")(t.filterEntity(), {
            selected: !0
        }))
    }
    t.alternativeInstances = [], t.alternativeSets = [], t.selectedAlternativeSets = [], t.searchString = "", t.setLabelText = {
        buttonDefaultText: "Alternative Set"
    }, t.selectedSetSettings = {
        smartButtonMaxItems: 2,
        showCheckAll: !1,
        showUncheckAll: !1,
        displayProp: "name",
        idProp: "id",
        externalIdProp: ""
    }, t.loadAll = function() {
        n.query(function(e) {
            t.alternativeInstances = e, angular.forEach(t.alternativeInstances, function(e) {
                angular.extend(e, {
                    selected: !1
                })
            })
        }), a.query(function(e) {
            t.alternativeSets = e
        })
    }, t.loadAll(), t.delete = function(e) {
        n.get({
            id: e
        }, function(e) {
            t.alternativeInstance = e, $("#deleteAlternativeInstanceConfirmation").appendTo("body").modal("show")
        })
    }, t.confirmDelete = function(e) {
        n.delete({
            id: e
        }, function() {
            t.loadAll(), $("#deleteAlternativeInstanceConfirmation").modal("hide"), t.clear()
        })
    }, t.filterEntity = function() {
        var e = i("filterCategoryForEntities")(t.alternativeInstances, t.selectedAlternativeSets, "alternativeSet");
        return e = i("filter")(e, t.searchString)
    }, t.performSelection = function(e) {
        s.performSelection(e, l, c)
    }, t.bulkChange = function() {
        o.setProperty(i("orderBy")(i("filter")(t.alternativeInstances, {
            selected: !0
        }), ["alternativeSet.showOrder", "requirementSkeleton.reqCategory.showOrder", "requirementSkeleton.showOrder"]))
    }, t.refresh = function() {
        t.loadAll(), t.clear()
    }, t.clear = function() {
        t.alternativeInstance = {
            content: null,
            id: null
        }
    }
}]), angular.module("sdlctoolApp").controller("AlternativeInstanceDialogController", ["$scope", "$stateParams", "$uibModalInstance", "entity", "AlternativeInstance", "AlternativeSet", "RequirementSkeleton", function(t, e, n, a, o, i, r) {
    t.alternativeInstance = a, t.alternativesets = i.query(), t.requirementskeletons = r.query(), t.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            t.alternativeInstance = e
        })
    };

    function s(e) {
        t.$emit("sdlctoolApp:alternativeInstanceUpdate", e), n.close(e)
    }
    t.save = function() {
        null !== t.alternativeInstance.id ? o.update(t.alternativeInstance, s) : o.save(t.alternativeInstance, s)
    }, t.clear = function() {
        n.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").controller("AlternativeInstanceDetailController", ["$scope", "$rootScope", "$stateParams", "entity", "AlternativeInstance", function(n, e, t, a, o) {
    n.alternativeInstance = a, n.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            n.alternativeInstance = e
        })
    }, e.$on("sdlctoolApp:alternativeInstanceUpdate", function(e, t) {
        n.alternativeInstance = t
    })
}]), angular.module("sdlctoolApp").controller("AlternativeInstanceBulkController", ["$scope", "$stateParams", "$uibModalInstance", "$filter", "entity", "AlternativeInstance", "RequirementSkeleton", "AlternativeSet", "sharedProperties", function(n, e, t, a, o, i, r, s, l) {
    n.alternativeInstances = [], n.alternativeSets = [], n.requirementSkeletons = [], n.state = {
        active: !0
    }, n.selectedAlternativeSet = {
        value: null
    }, n.selectedRequirementSkeleton = {
        value: null
    }, n.loadAll = function() {
        n.showTypes = "Show selected alternative instances", n.glyphicon = "glyphicon glyphicon-plus", n.show = !0, n.alternativeInstances = l.getProperty(), r.query(function(e) {
            n.requirementSkeletons = e, n.requirementSkeletons = a("orderBy")(n.requirementSkeletons, ["reqCategory.showOrder", "showOrder"])
        }), s.query(function(e) {
            n.alternativeSets = e, n.optColumns = a("orderBy")(n.optColumns, ["showOrder"])
        })
    }, n.loadAll(), n.toggleShowHide = function() {
        n.show = !n.show, n.show ? (n.showTypes = "Show selected alternative instances", n.glyphicon = "glyphicon glyphicon-plus") : (n.showTypes = "Hide selected alternative instances", n.glyphicon = "glyphicon glyphicon-minus")
    };

    function c(e) {
        n.$emit("sdlctoolApp:alternativeInstanceUpdate", e), t.close(e)
    }
    n.save = function() {
        var e = 1;
        angular.forEach(n.alternativeInstances, function(t) {
            null !== n.selectedAlternativeSet.value && angular.forEach(n.alternativeSets, function(e) {
                n.selectedAlternativeSet.value === e.id && (t.alternativeSet = e)
            }), null !== n.selectedRequirementSkeleton.value && angular.forEach(n.requirementSkeletons, function(e) {
                n.selectedRequirementSkeleton.value === e.id && (t.requirementSkeleton = e)
            }), e === n.alternativeInstances.length ? i.update(t, c) : i.update(t), e++
        })
    }, n.delete = function() {
        $("#deleteAlternativeInstancesConfirmation").appendTo("body").modal("show")
    }, n.confirmDeleteAll = function(t) {
        var n = 1;
        angular.forEach(t, function(e) {
            n === t.length ? i.delete({
                id: e.id
            }, function(e) {
                $("#deleteAlternativeInstancesConfirmation").modal("hide"), c(e)
            }) : i.delete({
                id: e.id
            }, function() {}), n++
        })
    }, n.clear = function() {
        t.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").factory("AlternativeInstance", ["$resource", "DateUtils", function(e, t) {
    return e("api/alternativeInstances/:id", {}, {
        query: {
            method: "GET",
            isArray: !0
        },
        get: {
            method: "GET",
            transformResponse: function(e) {
                return e = angular.fromJson(e)
            }
        },
        update: {
            method: "PUT"
        }
    })
}]), angular.module("sdlctoolApp").factory("AlternativeInstanceSearch", ["$resource", function(e) {
    return e("api/_search/alternativeInstances/:query", {}, {
        query: {
            method: "GET",
            isArray: !0
        }
    })
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("optColumnContent", {
        parent: "entity",
        url: "/optColumnContents",
        data: {
            roles: ["ROLE_USER"],
            pageTitle: "OptColumnContents"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/optColumnContent/optColumnContents.html",
                controller: "OptColumnContentController"
            }
        },
        resolve: {}
    }).state("optColumnContent.detail", {
        parent: "entity",
        url: "/optColumnContent/{id}",
        data: {
            roles: ["ROLE_USER"],
            pageTitle: "OptColumnContent"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/optColumnContent/optColumnContent-detail.html",
                controller: "OptColumnContentDetailController"
            }
        },
        resolve: {
            entity: ["$stateParams", "OptColumnContent", function(e, t) {
                return t.get({
                    id: e.id
                })
            }]
        }
    }).state("optColumnContent.new", {
        parent: "optColumnContent",
        url: "/new",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(e, t, n) {
            n.open({
                templateUrl: "scripts/app/entities/optColumnContent/optColumnContent-dialog.html",
                controller: "OptColumnContentDialogController",
                size: "lg",
                resolve: {
                    entity: function() {
                        return {
                            content: null,
                            id: null
                        }
                    }
                }
            }).result.then(function(e) {
                t.go("optColumnContent", null, {
                    reload: !0
                })
            }, function() {
                t.go("optColumnContent")
            })
        }]
    }).state("optColumnContent.edit", {
        parent: "optColumnContent",
        url: "/{id}/edit",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(t, n, e) {
            e.open({
                templateUrl: "scripts/app/entities/optColumnContent/optColumnContent-dialog.html",
                controller: "OptColumnContentDialogController",
                size: "lg",
                resolve: {
                    entity: ["OptColumnContent", function(e) {
                        return e.get({
                            id: t.id
                        })
                    }]
                }
            }).result.then(function(e) {
                n.go("optColumnContent", null, {
                    reload: !0
                })
            }, function() {
                n.go("^")
            })
        }]
    }).state("optColumnContent.bulk", {
        parent: "optColumnContent",
        url: "/edit",
        data: {
            roles: ["ROLE_USER"]
        },
        onEnter: ["$stateParams", "$state", "$uibModal", function(e, t, n) {
            n.open({
                templateUrl: "scripts/app/entities/optColumnContent/optColumnContent-bulk.html",
                controller: "OptColumnContentBulkController",
                size: "lg",
                resolve: {
                    entity: function() {
                        return {
                            name: null,
                            description: null,
                            showOrder: null,
                            active: null,
                            id: null
                        }
                    }
                }
            }).result.then(function(e) {
                t.go("optColumnContent", null, {
                    reload: !0
                })
            }, function() {
                t.go("optColumnContent")
            })
        }]
    })
}]), angular.module("sdlctoolApp").controller("OptColumnContentController", ["$scope", "OptColumnContent", "OptColumnContentSearch", "RequirementSkeleton", "OptColumn", "sharedProperties", "$filter", "EntityHelper", function(t, n, e, a, o, i, r, s) {
    function l() {
        angular.forEach(t.filterEntity(), function(e) {
            e.selected = !0
        })
    }

    function c() {
        s.deselectElements(r("filter")(t.filterEntity(), {
            selected: !0
        }))
    }
    t.optColumnContents = [], t.requirementSkeletons = [], t.optColumns = [], t.selectedOptColumns = [], t.searchString = "", t.length = 1e3, t.numberToDisplay = 100, t.optColumnLabelText = {
        buttonDefaultText: "Option Column"
    }, t.selectedOptSettings = {
        smartButtonMaxItems: 2,
        showCheckAll: !1,
        showUncheckAll: !1,
        displayProp: "name",
        idProp: "id",
        externalIdProp: ""
    }, t.loadAll = function() {
        n.query(function(e) {
            t.optColumnContents = e, angular.forEach(t.optColumnContents, function(e) {
                angular.extend(e, {
                    selected: !1
                })
            }), t.length = t.optColumnContents.length
        }), o.query(function(e) {
            t.optColumns = e, t.optColumns = r("orderBy")(t.optColumns, ["showOrder"])
        }), a.query(function(e) {
            t.requirementSkeletons = e, t.requirementSkeletons = r("orderBy")(t.requirementSkeletons, ["reqCategory.showOrder", "showOrder"])
        })
    }, t.loadAll(), t.loadMore = function() {
        t.numberToDisplay + 100 < t.length ? t.numberToDisplay += 100 : t.numberToDisplay = t.length
    }, t.delete = function(e) {
        n.get({
            id: e
        }, function(e) {
            t.optColumnContent = e, $("#deleteOptColumnContentConfirmation").appendTo("body").modal("show")
        })
    }, t.confirmDelete = function(e) {
        n.delete({
            id: e
        }, function() {
            t.loadAll(), $("#deleteOptColumnContentConfirmation").modal("hide"), t.clear()
        })
    }, t.filterEntity = function() {
        var e = r("filterCategoryForEntities")(t.optColumnContents, t.selectedOptColumns, "optColumn"),
            e = r("orderBy")(e, ["requirementSkeleton.reqCategory.showOrder", "requirementSkeleton.showOrder", "optColumn.showOrder"]);
        return r("filter")(e, t.searchString)
    }, t.performSelection = function(e) {
        s.performSelection(e, l, c)
    }, t.bulkChange = function() {
        i.setProperty(r("orderBy")(r("filter")(t.optColumnContents, {
            selected: !0
        }), ["requirementSkeleton.reqCategory.showOrder", "requirementSkeleton.showOrder", "optColumn.showOrder"]))
    }, t.refresh = function() {
        t.loadAll(), t.clear()
    }, t.clear = function() {
        t.optColumnContent = {
            content: null,
            id: null
        }
    }
}]), angular.module("sdlctoolApp").controller("OptColumnContentDialogController", ["$scope", "$stateParams", "$uibModalInstance", "entity", "OptColumnContent", "OptColumn", "RequirementSkeleton", function(t, e, n, a, o, i, r) {
    t.optColumnContent = a, t.optcolumns = i.query(), t.requirementskeletons = r.query(), t.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            t.optColumnContent = e
        })
    };

    function s(e) {
        t.$emit("sdlctoolApp:optColumnContentUpdate", e), n.close(e)
    }
    t.save = function() {
        null !== t.optColumnContent.id ? o.update(t.optColumnContent, s) : o.save(t.optColumnContent, s)
    }, t.clear = function() {
        n.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").controller("OptColumnContentDetailController", ["$scope", "$rootScope", "$stateParams", "entity", "OptColumnContent", function(n, e, t, a, o) {
    n.optColumnContent = a, n.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            n.optColumnContent = e
        })
    }, e.$on("sdlctoolApp:optColumnContentUpdate", function(e, t) {
        n.optColumnContent = t
    })
}]), angular.module("sdlctoolApp").controller("OptColumnContentBulkController", ["$scope", "$stateParams", "$uibModalInstance", "$filter", "entity", "OptColumnContent", "RequirementSkeleton", "OptColumn", "sharedProperties", function(n, e, t, a, o, i, r, s, l) {
    n.optColumnContents = [], n.optColumns = [], n.requirementSkeletons = [], n.state = {
        active: !0
    }, n.selectedOptColumn = {
        value: null
    }, n.selectedRequirementSkeleton = {
        value: null
    }, n.loadAll = function() {
        n.showTypes = "Show selected contents", n.glyphicon = "glyphicon glyphicon-plus", n.show = !0, n.optColumnContents = l.getProperty(), r.query(function(e) {
            n.requirementSkeletons = e, n.requirementSkeletons = a("orderBy")(n.requirementSkeletons, ["reqCategory.showOrder", "showOrder"])
        }), s.query(function(e) {
            n.optColumns = e, n.optColumns = a("orderBy")(n.optColumns, ["showOrder"])
        })
    }, n.loadAll(), n.toggleShowHide = function() {
        n.show = !n.show, n.show ? (n.showTypes = "Show selected contents", n.glyphicon = "glyphicon glyphicon-plus") : (n.showTypes = "Hide selected contents", n.glyphicon = "glyphicon glyphicon-minus")
    };

    function c(e) {
        n.$emit("sdlctoolApp:optColumnContentUpdate", e), t.close(e)
    }
    n.save = function() {
        var e = 1;
        angular.forEach(n.optColumnContents, function(t) {
            null !== n.selectedOptColumn.value && angular.forEach(n.optColumns, function(e) {
                n.selectedOptColumn.value === e.id && (t.optColumn = e)
            }), null !== n.selectedRequirementSkeleton.value && angular.forEach(n.requirementSkeletons, function(e) {
                n.selectedRequirementSkeleton.value === e.id && (t.requirementSkeleton = e)
            }), e === n.optColumnContents.length ? i.update(t, c) : i.update(t), e++
        })
    }, n.delete = function() {
        $("#deleteOptColumnContentsConfirmation").appendTo("body").modal("show")
    }, n.confirmDeleteAll = function(t) {
        var n = 1;
        angular.forEach(t, function(e) {
            n === t.length ? i.delete({
                id: e.id
            }, function(e) {
                $("#deleteOptColumnContentsConfirmation").modal("hide"), c(e)
            }) : i.delete({
                id: e.id
            }, function() {}), n++
        })
    }, n.clear = function() {
        t.dismiss("cancel")
    }
}]), angular.module("sdlctoolApp").factory("OptColumnContent", ["$resource", "DateUtils", function(e, t) {
    return e("api/optColumnContents/:id", {}, {
        query: {
            method: "GET",
            isArray: !0
        },
        get: {
            method: "GET",
            transformResponse: function(e) {
                return e = angular.fromJson(e)
            }
        },
        update: {
            method: "PUT"
        }
    })
}]), angular.module("sdlctoolApp").factory("OptColumnContentSearch", ["$resource", function(e) {
    return e("api/_search/optColumnContents/:query", {}, {
        query: {
            method: "GET",
            isArray: !0
        }
    })
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("editor", {
        parent: "site",
        url: "/",
        data: {
            roles: ["ROLE_FRONTEND_USER", "ROLE_USER", "ROLE_ADMIN"]
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/editor/editor.html",
                controller: "EditorController"
            }
        },
        resolve: {}
    })
}]), angular.module("sdlctoolApp").controller("EditorController", ["$scope", "$uibModal", "$location", "sharedProperties", "localStorageService", "appConfig", function(e, t, n, a, o, i) {
    e.fileParams = "", e.detectedRestore = !1, e.welcomeMessage = i.welcomeMessage, e.initStarter = function() {
        t.open({
            size: "lg",
            backdrop: "static",
            templateUrl: "scripts/app/editor/starter/starter.html",
            controller: "StarterController",
            resolve: {
                system: function() {
                    return "new"
                }
            }
        })
    }, e.initImport = function() {
        t.open({
            size: "lg",
            backdrop: "static",
            templateUrl: "scripts/app/editor/import/import-modal.html",
            controller: "ImportController"
        }).result.then(function() {
            n.path("/requirements")
        })
    }, e.restoreSession = function() {
        a.setProperty(new String("RESTORE")), e.initImport()
    }, e.deleteLocalStorage = function() {
        o.isSupported && (o.remove(i.localStorageKey), e.detectedRestore = !1)
    }, 0 <= n.url().indexOf("import") && (e.fileParams = n.url().split("file=")[1], a.setProperty(new String(e.fileParams)), e.initImport()), void 0 !== n.$$search.file ? (e.fileParams = n.$$search.file, a.setProperty(e.fileParams), e.initImport()) : void 0 !== n.$$search.ticket && (e.fileParams = n.$$search.ticket, a.setProperty(e.fileParams), e.initImport()), o.isSupported && 0 < o.length() && (e.detectedRestore = !0)
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("starter", {
        parent: "site",
        url: "/starter",
        data: {
            roles: ["ROLE_FRONTEND_USER", "ROLE_USER", "ROLE_ADMIN"]
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/editor/starter/starter.html",
                controller: "StarterController"
            }
        },
        resolve: {}
    })
}]), angular.module("sdlctoolApp").controller("StarterController", ["$scope", "$http", "apiFactory", "sharedProperties", "$location", "$uibModalInstance", "$state", "$filter", "system", "getRequirementsFromImport", function(o, e, t, n, a, i, r, s, l, c) {
    o.starterForm = {}, o.failed = "", o.fail = !1, o.selectedCollection = [], o.selectedProjectType = [], o.projectTypeModel = {}, o.ticket = {}, o.oldRequirements = {}, o.oldAlternativeSets = [], o.oldHasIssueLinks = !1, o.disabled = !1, o.regex = new XRegExp("^[\\p{Latin}\\pN+\\s\\-\\_\\.\\:\\+\\(\\)\\[\\]\\,\\!\\#\\$\\%\\'\\*\\=\\?\\^\\`\\{\\}\\|\\~\\;\\@\\&]+$"), c.setProperty({}), o.selectedCollectionSettings = {
        smartButtonMaxItems: 3,
        styleActive: !0,
        closeOnSelect: !0,
        closeOnDeselect: !0,
        showCheckAll: !1,
        showUncheckAll: !1,
        displayProp: "name",
        idProp: "id",
        externalIdProp: ""
    }, o.selectedCollectionEvents = {
        onItemSelect: function(e) {
            o.selectCollections(e)
        },
        onItemDeselect: function(e) {
            o.deselectCollections(e)
        }
    }, t.getAll("collections").then(function(e) {
        o.categories = e, angular.forEach(o.categories, function(e) {
            e.collectionInstances = s("orderBy")(e.collectionInstances, "showOrder"), angular.extend(e, {
                selectedCollectionSets: []
            })
        }), o.init()
    }, function() {}), t.getAll("projectTypes").then(function(e) {
        o.projectType = s("orderBy")(e, "showOrder"), angular.equals(l, "old") || o.selectProject(o.projectType[0]), 1 == o.projectType.length && (o.disabled = !0), 0 < o.selectedProjectType.length && o.selectOldProjectTypeSettings()
    }, function() {}), o.init = function() {
        o.oldSettings = n.getProperty(), void 0 !== o.oldSettings && angular.equals(l, "old") && (o.disabled = !0, o.starterForm.name = o.oldSettings.name, o.selectedCollection = o.oldSettings.colls, o.selectedProjectType = o.oldSettings.project, o.ticket = o.oldSettings.ticket, o.oldAlternativeSets = o.oldSettings.alternativeSets, o.oldHasIssueLinks = o.oldSettings.hasIssueLinks, o.oldRequirements = o.oldSettings.requirements, o.selectOldCategorySettings())
    }, o.selectOldCategorySettings = function() {
        angular.forEach(o.selectedCollection, function(e) {
            o.getCategoryObject(e)
        })
    }, o.selectOldProjectTypeSettings = function() {
        angular.forEach(o.selectedProjectType, function(t) {
            angular.forEach(o.projectType, function(e) {
                e.id === t.projectTypeId && (o.projectTypeModel = e)
            })
        })
    }, o.getCategoryObject = function(e) {
        angular.forEach(o.categories, function(n) {
            angular.equals(n.name, e.categoryName) && angular.forEach(n.collectionInstances, function(t) {
                angular.forEach(e.values, function(e) {
                    t.id === e.collectionInstanceId && n.selectedCollectionSets.push(t)
                })
            })
        })
    }, o.selectProject = function(t) {
        o.projectTypeModel = t;
        var n = [],
            a = [];
        angular.forEach(o.projectType, function(e) {
            t.id === e.id && (n = e.optionColumns, a = e.statusColumns)
        }), o.selectedProjectType = [{
            projectTypeId: t.id,
            name: t.name,
            optsColumn: n,
            statsColumn: a
        }]
    }, o.selectCollections = function(n) {
        var e, t, a = "";
        angular.forEach(o.categories, function(t) {
            angular.forEach(t.collectionInstances, function(e) {
                e.id === n.id && (a = t.name)
            })
        }), o.searchObjectbyValue(a, o.selectedCollection) ? angular.forEach(o.selectedCollection, function(e) {
            a === e.categoryName && e.values.push({
                collectionInstanceId: n.id,
                type: n.name
            })
        }) : (e = {}, (t = []).push({
            collectionInstanceId: n.id,
            type: n.name
        }), angular.extend(e, {
            categoryName: a,
            values: t
        }), o.selectedCollection.push(e))
    }, o.deselectCollections = function(e) {
        for (var t = 0; t < o.selectedCollection.length; t++)
            for (var n = o.selectedCollection[t], a = 0; a < n.values.length; a++) n.values[a].collectionInstanceId === e.id && (n.values.splice(a, 1), 0 === n.values.length && o.selectedCollection.splice(t, 1))
    }, o.searchObjectbyValue = function(n, e) {
        var a = !1;
        return angular.forEach(e, function(e) {
            angular.forEach(e, function(e, t) {
                e === n && (a = !0)
            })
        }), a
    }, o.finish = function() {
        void 0 === o.starterForm.name ? (o.fail = !0, o.failed = "Please specify the name of the System") : 0 === o.selectedProjectType.length ? (o.fail = !0, o.failed = "Please select who is developing the System") : (o.starterForm.colls = o.selectedCollection, o.starterForm.project = o.selectedProjectType, o.starterForm.ticket = o.ticket, angular.equals(l, "old") && (o.starterForm.alternativeSets = o.oldAlternativeSets, o.starterForm.hasIssueLinks = o.oldHasIssueLinks, o.starterForm.oldRequirements = o.oldRequirements), n.setProperty(o.starterForm), o.cancel(), "/requirements" === a.path() && r.forceReload(), a.path("/requirements"))
    }, o.cancel = function() {
        i.dismiss("closing")
    }, o.close = function() {
        i.close()
    }
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("requirements", {
        parent: "site",
        url: "/requirements",
        cache: !1,
        data: {
            roles: ["ROLE_FRONTEND_USER", "ROLE_USER", "ROLE_ADMIN"]
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/editor/requirements/requirements.html",
                controller: "RequirementsController",
                reload: !0
            }
        },
        resolve: {},
        onEnter: ["sharedProperties", "$state", function(e, t) {
            angular.isUndefined(e.getProperty()) && t.go("editor")
        }]
    })
}]), angular.module("sdlctoolApp").controller("RequirementsController", ["$scope", "apiFactory", "sharedProperties", "$interval", "$uibModal", "$filter", "getRequirementsFromImport", "$confirm", "$location", "localStorageService", "appConfig", "$sce", "SDLCToolExceptionService", "Helper", "checkAuthentication", "JiraService", "$q", "$uibModalStack", "ProgressBar", "$window", "authenticatorService", function(p, l, t, a, n, m, o, i, r, s, g, c, h, d, u, f, v, y, e, b, C) {
    function w() {
        angular.forEach(p.filterRequirements(), function(e) {
            e.selected = !1
        })
    }

    function k(r) {
        angular.forEach(p.systemSettings, function(e) {
            angular.forEach(e, function(e) {
                angular.forEach(e, function(e, t) {
                    if ("optsColumn" === t) p.optColumns = e, angular.forEach(p.optColumns, function(e) {
                        e.visibleByDefault || p.optToHide.push(e.id), e.description = "<strong> " + e.description + "</strong>", angular.extend(e, {
                            optColumnLabelText: {
                                buttonDefaultText: e.name
                            }
                        })
                    });
                    else if ("statsColumn" === t) {
                        var n = [];
                        p.statusColumns = e;
                        e = "The status column(s) ";
                        if (angular.forEach(p.statusColumns, function(e) {
                                var t;
                                e.description = "<strong>" + e.description + "</strong>", e.isEnum && (t = "<p class='myTooltip'><span style='color:yellow;'>Posibles valores:</span><BR>", p.selectedStatusColumn[e.id] = [], e.values = m("orderBy")(e.values, "showOrder"), angular.forEach(e.values, function(e) {
                                    t += "<span><b style='font-size:13px;color:#cc6600;'>" + e.name + ":</b> " + e.description + "<BR></span>"
                                }), t += "</p>", p.htmlTooltips.statusColumnTooltips.push({
                                    statId: e.id,
                                    tooltip: c.trustAsHtml(t)
                                })), r && 0 === m("filter")(p.requirements[0].statusColumns, {
                                    id: e.id
                                }).length && (n.push(e), p.requirementProperties.newColumn.present = !0), angular.extend(e, {
                                    statColumnLabelText: {
                                        buttonDefaultText: e.name
                                    }
                                })
                            }), 0 < n.length) {
                            var a = T(n);
                            angular.forEach(p.requirements, function(e) {
                                angular.copy(e.statusColumns.concat(a), e.statusColumns)
                            }), p.requirementProperties.requirementsEdited = !0;
                            for (var o = [], i = 0; i < n.length; i++) o.push(n[i].name);
                            e += "**" + o.toString() + "** was/were added. Please save the current state.", p.requirementProperties.newColumn.alertMessages.push(e)
                        }
                    }
                })
            })
        })
    }
    p.failed = "", p.fail = !1, p.checks = {
        urlPattern: urlpattern.javascriptStringRegex,
        errorMessage: "Invalid url. Please specify URL like https://www.example-queue.com/browse/DUMBQ-21"
    }, p.progressbar = {
        hide: !0,
        barValue: 0,
        intervalPromise: void 0,
        showContent: !1
    }, p.manageTicketProperty = {
        spinnerProperty: {
            showSpinner: !1
        },
        promise: {},
        authenticatorProperty: {},
        jhError: {},
        error: !1,
        defaultJIRAHost: g.defaultJIRAHost
    }, p.newStyleAlternativeInstances = {}, p.withselectedDropdown = {
        toggleExcel: !1,
        testAutomation: void 0 !== g.securityCAT && "" !== g.securityCAT
    }, p.outputStatus = "", p.generatedOn = "", p.lastChanged = "", p.ticket = {}, p.customRequirements = [], p.newRequirementParam = {
        index: 1,
        id: 2e4
    }, p.optToHide = [], p.patternToHide = JSON.parse(g.showProperties.toLowerCase()), p.showSpinner = !1, p.systemSettings = t.getProperty(), p.requirements = [], p.requirementsSettings = {}, p.search = "", p.tags = [], p.filterCategory = [], p.selectedCategory = [], p.tableArray = [], p.selectedAlternativeSets = [], p.textFilters = {
        optColumns: {},
        statusColumns: {}
    }, p.requirementProperties = {
        hasIssueLinks: !1,
        requirementsEdited: !0,
        selectedOptColumns: {
            ids: [],
            counts: 0
        },
        exported: !1,
        statColumnChanged: !1,
        crCounts: 0,
        defaultLabelFilterObject: {
            buttonDefaultText: "Filter"
        },
        newColumn: {
            present: !1,
            alertMessages: []
        }
    }, p.selectOptCompare = {
        ids: [],
        counts: 0
    }, p.categoryLabelText = {
        buttonDefaultText: "Category"
    }, p.tableSpan = {
        row: 0,
        col: 0
    }, p.updateProperties = {
        updatedReqs: !1,
        updatesCounter: 0,
        updatesAvailable: !1,
        tooltipText: "Please apply the updates first."
    }, p.infiniteScroll = {
        numberToDisplay: 15,
        length: 1e3
    }, p.selectedCategorySettings = {
        smartButtonMaxItems: 3,
        keyboardControls: !0,
        styleActive: !0,
        showCheckAll: !1,
        showUncheckAll: !1,
        displayProp: "label",
        idProp: "id",
        externalIdProp: ""
    }, p.selectedStatusSettings = {
        smartButtonMaxItems: 4,
        keyboardControls: !0,
        styleActive: !0,
        showCheckAll: !1,
        showUncheckAll: !1,
        displayProp: "name",
        idProp: "id",
        externalIdProp: ""
    }, p.selectedJiraStatusSettings = {
        template: "<span data-ng-style=\"option.name=='No ticket' && {'font-style': 'italic'}\">{{option.name}}</span>",
        smartButtonMaxItems: 3,
        keyboardControls: !0,
        styleActive: !0,
        showCheckAll: !1,
        showUncheckAll: !1,
        displayProp: "name",
        idProp: "name",
        externalIdProp: ""
    }, p.filteredRequirementsByTags = [], p.selectedTags = [], p.alternativeSets = [], p.tempString = "", p.selectedStatusColumn = {}, p.jiraStatus = {
        addTicketTemplateUrl: "scripts/app/editor/requirements/manageTicketsTemplates/add-ticket.html",
        removeTicketTemplateUrl: "scripts/app/editor/requirements/manageTicketsTemplates/remove-ticket.html",
        displayStatusTemplateUrl: "scripts/app/editor/requirements/manageTicketsTemplates/display-status.html"
    }, p.htmlTooltips = {
        optColumnTooltips: [],
        statusColumnTooltips: []
    }, p.selectedAlternativeSettings = {
        smartButtonMaxItems: 3,
        keyboardControls: !0,
        styleActive: !0,
        closeOnSelect: !0,
        closeOnDeselect: !0,
        showCheckAll: !1,
        showUncheckAll: !1,
        displayProp: "name",
        idProp: "id",
        externalIdProp: ""
    }, p.selectedAlternativeEvents = {
        onItemSelect: function(e) {
            p.selectAlternatives(e)
        },
        onItemDeselect: function(e) {
            p.deselectAlternatives(e)
        }
    }, p.performSelection = function(e) {
        e ? angular.forEach(p.filterRequirements(), function(e) {
            e.selected = !0
        }) : w()
    }, window.onbeforeunload = function(e) {
        if (p.requirementProperties.requirementsEdited) {
            var t = "You have unsaved changes!";
            return (e || window.event).returnValue = t
        }
    }, p.startProgressbar = function() {
        e.startProgressbar(p.progressbar)
    }, p.finishProgressbar = function() {
        e.finishProgressbar(p.progressbar)
    }, p.closeNewColumAlert = function(e) {
        p.requirementProperties.newColumn.alertMessages.splice(e, 1)
    }, p.init = function() {
        p.onRouteChangeOff = p.$on("$locationChangeStart", p.routeChange), angular.extend(p.jiraStatus, {
            allStatus: [],
            selectedStatus: [],
            jiraStatusLabelText: {
                buttonDefaultText: "Status"
            }
        });
        var n, e, t = o.getProperty();
        angular.isDefined(p.systemSettings.name) && (b.document.title = p.systemSettings.name), void 0 !== p.systemSettings.ticket && (p.ticket = p.systemSettings.ticket, angular.isDefined(p.ticket.key) && (b.document.title += ": " + p.ticket.key)), p.generatedOn = p.systemSettings.generatedOn, p.lastChanged = p.systemSettings.lastChanged, angular.isDefined(t) && void 0 !== t.requirement ? (void 0 === r.$$search.file && void 0 === r.$$search.ticket || r.search(""), p.requirementProperties.hasIssueLinks = t.hasIssueLinks, p.requirements = t.requirement, p.requirementProperties.selectedOptColumns.counts = t.selectedAlternativeSets.length, p.selectOptCompare.counts = t.selectedAlternativeSets.length, p.filterCategory = m("orderBy")(t.filterCategory, "showOrder"), p.selectedAlternativeSets = t.selectedAlternativeSets, p.newStyleAlternativeInstances = t.newStyleAlternativeInstances, p.jiraStatus.allStatus = [], p.getAlternativeSets(), p.getCustomRequirements(), p.progressbar.showContent = !0, p.requirementProperties.exported = !0, p.requirementProperties.requirementsEdited = !1, p.buildSettings(), p.onTimeout(), p.promiseForStorage = a(p.onTimeout, 6e4), k(!0), e = p.requirements, angular.forEach(p.statusColumns, function(n) {
            n.isEnum && angular.forEach(e, function(e) {
                angular.forEach(e.statusColumns, function(t) {
                    t.id === n.id && angular.forEach(n.values, function(e) {
                        t.valueId == e.id && (t.value = e.name)
                    })
                })
            })
        }), n = "", angular.forEach(p.requirementsSettings, function(e, t) {
            n += t + "=" + e + "&"
        }), n = n.slice(0, -1), l.getByQuery("categoriesWithRequirements", "filter", n).then(function(e) {
            var a, o;
            ! function(e) {
                for (var t = 0; t < e.length; t++) {
                    for (var n = e[t], a = !0, o = 0; o < p.filterCategory.length; o++) {
                        var i = p.filterCategory[o];
                        if (n.id === i.id) {
                            p.filterCategory[o].label = n.name, p.filterCategory[o].showOrder = n.showOrder, a = !1;
                            break
                        }
                    }
                    a && p.filterCategory.push({
                        id: n.id,
                        showOrder: n.showOrder,
                        label: n.name,
                        isNew: !0
                    })
                }
            }(e), e = e, a = [], o = T(p.statusColumns), angular.forEach(e, function(n) {
                angular.forEach(n.requirements, function(e) {
                    var t = S(e.optionColumnContents);
                    p.fillEmptyOpts(t, p.optColumns);
                    t = {
                        id: e.id,
                        category: n.name,
                        categoryId: n.id,
                        shortName: e.shortName,
                        universalId: e.universalId,
                        description: e.description,
                        categoryOrder: n.showOrder,
                        order: e.showOrder,
                        tagInstances: e.tagInstanceIds,
                        optionColumns: t,
                        tickets: [],
                        linkStatus: {
                            link: !0,
                            ticketStatus: []
                        },
                        statusColumns: angular.copy(o, []),
                        selected: !1,
                        isNew: !1,
                        isOld: !1,
                        applyUpdate: " "
                    };
                    JSON.parse(g.showProperties.toLowerCase()) && (t.collectionInstances = A(e.collectionInstances)), a.push(t)
                })
            }), E(a, !1, !0)
        }, function() {}), y.dismissAll(), h.showWarning("Importación exitosa", "El artefacto " + p.systemSettings.name + " fue importado con éxito.", h.SUCCESS)) : (p.startProgressbar(), p.generatedOn = d.getCurrentDate(), p.buildSettings(), p.getRequirements(), p.getAlternativeSets(), k(!1), p.alternativeSets = p.systemSettings.alternativeSets, p.requirementProperties.hasIssueLinks = p.systemSettings.hasIssueLinks), p.getTagCategories()
    }, p.loadMore = function() {
        p.infiniteScroll.numberToDisplay + 10 < p.infiniteScroll.length ? p.infiniteScroll.numberToDisplay += 10 : p.infiniteScroll.numberToDisplay = p.infiniteScroll.length
    }, p.hideColumn = function(e) {
        var t = p.optToHide.indexOf(e); - 1 !== t ? p.optToHide.splice(t, 1) : p.optToHide.push(e)
    }, p.hidePattern = function() {
        p.patternToHide = !p.patternToHide
    }, p.openFeedback = function(e) {
        t.setProperty(e), n.open({
            size: "lg",
            backdrop: "static",
            templateUrl: "scripts/app/editor/feedback/feedback.html",
            controller: "FeedbackController"
        }).result.then()
    }, p.getCustomRequirements = function() {
        var t = p.newRequirementParam.id,
            n = [],
            a = [];
        p.requirements = m("orderBy")(p.requirements, "id");
        var o, e = p.requirements[p.requirements.length - 1];
        0 <= e.shortName.indexOf(g.customRequirement) && e.id > p.newRequirementParam.id && (p.newRequirementParam.id = e.id + 1), p.requirementProperties.hasIssueLinks ? (o = [], angular.forEach(p.requirements, function(e) {
            0 < e.tickets.length && p.fetchTicketStatus(e, o), 0 <= e.shortName.indexOf(g.customRequirement) && (p.requirementProperties.crCounts++, p.newRequirementParam.index++, (e.id < t || 0 <= a.indexOf(e.id)) && (e.id = p.newRequirementParam.id, p.newRequirementParam.id++), -1 === a.indexOf(e.id) && a.push(e.id), n.push(e))
        })) : angular.forEach(p.requirements, function(e) {
            0 <= e.shortName.indexOf(g.customRequirement) && (p.requirementProperties.crCounts++, p.newRequirementParam.index++, (e.id < t || 0 <= a.indexOf(e.id)) && (e.id = p.newRequirementParam.id, p.newRequirementParam.id++), -1 === a.indexOf(e.id) && a.push(e.id), n.push(e))
        }), p.customRequirements = n
    }, p.changeSettings = function() {
        w();
        var e = {};
        angular.extend(e, {
            name: p.systemSettings.name,
            colls: p.systemSettings.colls,
            project: p.systemSettings.project,
            ticket: p.systemSettings.ticket,
            alternativeSets: p.alternativeSets,
            hasIssueLinks: p.requirementProperties.hasIssueLinks,
            requirements: p.requirements
        }), t.setProperty(e), n.open({
            size: "lg",
            backdrop: "static",
            templateUrl: "scripts/app/editor/starter/starter.html",
            controller: "StarterController",
            resolve: {
                system: function() {
                    return "old"
                }
            }
        })
    }, p.$watch("customRequirements.length", function(e, t, n) {
        e !== p.requirementProperties.crCounts ? p.enableSave(!1) : e === p.requirementProperties.crCounts && p.disableSave(!1)
    }), p.$watch("selectOptCompare.counts", function(e, t, n) {
        if (e !== p.requirementProperties.selectedOptColumns.counts) p.enableSave(!1);
        else if (e === p.requirementProperties.selectedOptColumns.counts) {
            for (var a, o = 0; o < p.selectOptCompare.ids.length; o++) - 1 === p.requirementProperties.selectedOptColumns.ids.indexOf(p.selectOptCompare.ids[o]) && (a = !0);
            a ? p.enableSave(!1) : p.disableSave(!1)
        }
    }), p.getRequirements = function() {
        var n = "";
        angular.forEach(p.requirementsSettings, function(e, t) {
            n += t + "=" + e + "&"
        }), n = n.slice(0, -1), l.getByQuery("categoriesWithRequirements", "filter", n).then(function(e) {
            p.requirementSkeletons = e, p.buildRequirements()
        }, function() {})
    }, p.getTagCategories = function() {
        l.getAll("tags").then(function(e) {
            p.tags = e
        }, function() {})
    }, p.getAlternativeSets = function() {
        l.getAll("optionColumnsWithAlternativeSets").then(function(e) {
            var r = [];
            p.alternativeSets = e, angular.forEach(p.optColumns, function(o) {
                var i = "<p class='myTooltip'><span style='color:yellow;'>Puede agregar diferente informaciÃ³n a esta columna, seleccionando alternativas en el menÃº desplegable.</span><BR>";
                angular.forEach(p.alternativeSets, function(e) {
                    var a;
                    e.id === o.id && (a = [], angular.forEach(e.alternativeSets, function(e) {
                        if (i += "<span><b style='font-size:13px;color:#cc6600;'>" + e.name + ":</b> " + e.description + "<BR></span>", angular.extend(e, {
                                optColumnId: o.id
                            }), 0 < p.selectedAlternativeSets.length)
                            for (var t, n = 0; n < p.selectedAlternativeSets.length; n++) e.id === p.selectedAlternativeSets[n] && (p.requirementProperties.selectedOptColumns.ids.push(e.id), p.selectOptCompare.ids.push(e.id), (t = JSON.parse(JSON.stringify(e))).import = !0, r.push(t), a.push(t))
                    }), angular.extend(o, {
                        alternativeSets: e.alternativeSets,
                        selectedAlternativeSets: a
                    }), i += "</p>", p.htmlTooltips.optColumnTooltips.push({
                        optId: o.id,
                        tooltip: c.trustAsHtml(i)
                    }))
                }), o.alternativeSets = m("orderBy")(o.alternativeSets, "showOrder")
            }), angular.forEach(r, function(e) {
                p.selectAlternatives(e)
            })
        }, function() {})
    }, p.selectTags = function(n, a, o) {
        var e, t, i;
        d.searchArrayByValue(o, p.selectedTags) ? angular.forEach(p.selectedTags, function(e) {
            var t;
            e.tagCategory === o && (p.searchObjectbyValue(n, e.tagInstances) ? (t = e.tagInstances.indexOf(n), e.tagInstances.splice(t, 1), 0 === e.tagInstances.length && (t = p.selectedTags.indexOf(e), p.selectedTags.splice(t, 1))) : (e.tagInstances.push(n), e.tagName.push(a)))
        }) : (e = [], (t = []).push(a), e.push(n), p.selectedTags.push({
            tagCategory: o,
            tagName: t,
            tagInstances: e
        })), 0 !== p.selectedTags.length ? (p.showSpinner = !0, i = [], angular.forEach(p.selectedTags, function(a) {
            angular.forEach(p.requirements, function(n) {
                angular.forEach(n.tagInstances, function(t) {
                    angular.forEach(a.tagInstances, function(e) {
                        e === t && (d.searchArrayByValue(a.tagCategory, i) ? angular.forEach(i, function(e) {
                            a.tagCategory !== e.tagCategory || d.searchArrayByValue(n.shortName, e.requirement) || e.requirement.push(n)
                        }) : ((e = []).push(n), i.push({
                            tagCategory: a.tagCategory,
                            requirement: e
                        })))
                    })
                })
            })
        }), p.filteredRequirementsByTags = [], 1 === i.length ? angular.forEach(i, function(e) {
            p.filteredRequirementsByTags = e.requirement
        }) : angular.forEach(i, function(a) {
            angular.forEach(a.requirement, function(e) {
                var t = e,
                    n = 1,
                    e = a.requirement.indexOf(e);
                a.requirement.splice(e, 1), angular.forEach(i, function(e) {
                    d.searchArrayByValue(t, e) && n++
                }), n === i.length && p.filteredRequirementsByTags.push(t)
            })
        }), p.showSpinner = !1, p.filteredRequirementsByTags = m("orderBy")(p.filteredRequirementsByTags, "order"), 0 === p.filteredRequirementsByTags.length && 0 !== p.selectedTags.length && (p.filteredRequirementsByTags = ["ERROR"])) : p.filteredRequirementsByTags = []
    }, p.addRequirement = function() {
        p.crdropdown = !1;
        var e = {};
        angular.extend(e, {
            statusColumns: p.statusColumns,
            optionColumns: p.optColumns,
            filterCategory: p.filterCategory,
            shortnameIndex: p.newRequirementParam.index
        }), n.open({
            size: "lg",
            backdrop: "static",
            templateUrl: "scripts/app/editor/customrequirements/customRequirement.html",
            controller: "customRequirementController",
            resolve: {
                crObject: e
            }
        }).result.then(function(e) {
            e.requirement.id = p.newRequirementParam.id, p.newRequirementParam.id++, p.filterCategory[e.categoryIndex].lastElemOrder = e.requirement.order, e.requirement.universalId = "", e.requirement.tickets = [], p.newRequirementParam.index++, angular.forEach(e.requirement.optionColumns, function(e) {
                angular.forEach(e.content, function(e) {
                    e.content = e.content
                })
            }), p.customRequirements.push(e.requirement), p.requirements.push(e.requirement)
        })
    }, p.editRequirement = function() {
        p.crdropdown = !1;
        var e = {};
        angular.extend(e, {
            requirements: p.customRequirements,
            statusColumns: p.statusColumns,
            optionColumns: p.optColumns,
            filterCategory: p.filterCategory
        }), t.setProperty(e), n.open({
            size: "lg",
            backdrop: "static",
            templateUrl: "scripts/app/editor/customrequirements/customRequirement.html",
            controller: "customRequirementController",
            resolve: {
                crObject: e
            }
        }).result.then(function(e) {
            for (var t = 0; t < p.requirements.length; t++)
                if (p.requirements[t].id === e.requirement.id && p.requirements[t].shortName === e.requirement.shortName) {
                    p.requirements[t] = e.requirement;
                    break
                }
            for (var n = 0; n < p.customRequirements.length; n++)
                if (p.customRequirements[n].id === e.requirement.id && p.customRequirements[n].shortName === e.requirement.shortName) {
                    p.customRequirements[n] = e.requirement;
                    break
                }
            p.filterCategory[e.categoryIndex].lastElemOrder = e.requirement.order
        })
    }, p.removeCustomRequirement = function() {
        p.crdropdown = !1, n.open({
            size: "lg",
            backdrop: "static",
            templateUrl: "scripts/app/editor/customrequirements/remove-customRequirement.html",
            controller: "removeCustomRequirementController",
            resolve: {
                customRequirements: function() {
                    return p.customRequirements
                }
            }
        }).result.then(function(e) {
            p.deleteObjFromArrayByValue(e.shortName, p.customRequirements), p.deleteObjFromArrayByValue(e.shortName, p.requirements)
        })
    }, p.deleteObjFromArrayByValue = function(n, a) {
        for (var o = 0; o < a.length; o++) angular.forEach(a[o], function(e, t) {
            e === n && a.splice(o, 1)
        })
    }, p.selectAlternatives = function(a) {
        l.getByQuery("alternativeInstances", "filter", "alternativeSet=" + a.id).then(function(t) {
            var e = t;
            angular.forEach(p.alternativeSets, function(e) {
                angular.forEach(e.alternativeSets, function(e) {
                    a.id === e.id && angular.extend(e, {
                        alternativeInstances: t
                    })
                })
            }), a.import || (angular.forEach(e, function(n) {
                angular.forEach(p.requirements, function(t) {
                    n.requirementId === t.id && (angular.isUndefined(p.newStyleAlternativeInstances[t.id]) && (p.newStyleAlternativeInstances[t.id] = {}), angular.forEach(t.optionColumns, function(e) {
                        p.newStyleAlternativeInstances[t.id][n.id] = {
                            title: a.name,
                            body: n.content
                        }, e.showOrder === a.optColumnId && e.content.push({
                            id: n.id,
                            setId: a.id,
                            content: "**" + a.name + "**\n\n" + n.content
                        })
                    }))
                })
            }), p.selectOptCompare.ids.push(a.id), p.selectOptCompare.counts++)
        }, function() {})
    }, p.deselectAlternatives = function(n) {
        angular.forEach(p.alternativeSets, function(e) {
            angular.forEach(e.alternativeSets, function(t) {
                n.id === t.id && angular.forEach(p.requirements, function(e) {
                    angular.forEach(e.optionColumns, function(n) {
                        angular.forEach(t.alternativeInstances, function(t) {
                            angular.forEach(n.content, function(e) {
                                t.id === e.id && (e = n.content.indexOf(e), n.content.splice(e, 1))
                            })
                        })
                    })
                })
            })
        });
        var e = p.selectOptCompare.ids.indexOf(n.id);
        0 <= e && p.selectOptCompare.ids.splice(e, 1), p.selectOptCompare.counts--
    }, p.enableSave = function(e) {
        p.requirementProperties.requirementsEdited = !0, e && (p.requirementProperties.statColumnChanged = !0)
    }, p.disableSave = function(e) {
        p.requirementProperties.exported && !p.requirementProperties.statColumnChanged ? p.requirementProperties.requirementsEdited = !1 : e && (p.requirementProperties.selectedOptColumns = {}, p.requirementProperties.selectedOptColumns = JSON.parse(JSON.stringify(p.selectOptCompare)), p.requirementProperties.requirementsEdited = !1, p.requirementProperties.exported = !0)
    }, p.getStatusValue = function(t, n) {
        var a = "";
        return angular.forEach(p.requirements, function(e) {
            t === e.id && angular.forEach(e.statusColumns, function(e) {
                n === e.id && (a = e.value)
            })
        }), a
    }, p.selectStatusValue = function(t, n, a) {
        angular.forEach(p.requirements, function(e) {
            t === e.id && angular.forEach(e.statusColumns, function(e) {
                n === e.id && (e.value = a.name, e.valueId = a.id)
            })
        }), p.enableSave(!0)
    };
    var S = function(e) {
        var n = [],
            a = {};
        return angular.forEach(e, function(e) {
            if (0 < n.length && 1 === m("filter")(n, {
                    showOrder: e.optionColumnId
                }).length)
                for (var t = 0; t < n.length; t++) n[t].showOrder === e.optionColumnId && (a[e.optionColumnId]++, n[t].content.push({
                    id: a[e.optionColumnId],
                    content: e.content.trim()
                }));
            else a[e.optionColumnId] = 0, n.push({
                content: [{
                    id: 0,
                    content: e.content.trim()
                }],
                name: e.optionColumnName,
                showOrder: e.optionColumnId
            })
        }), n
    };

    function T(e) {
        var o = [];
        return angular.forEach(m("orderBy")(e, "showOrder"), function(e) {
            var t, n, a;
            e.isEnum ? (t = 1e6, angular.forEach(e.values, function(e) {
                e.showOrder < t && (t = e.showOrder, n = e.name, a = e.id)
            }), o.push({
                id: e.id,
                value: n,
                valueId: a,
                isEnum: e.isEnum
            })) : o.push({
                id: e.id,
                value: "",
                isEnum: e.isEnum
            })
        }), o
    }

    function A(e) {
        var n = [];
        return angular.forEach(e, function(t) {
            angular.forEach(p.systemSettings.colls, function(e) {
                angular.forEach(e.values, function(e) {
                    t.id === e.collectionInstanceId && n.push({
                        id: t.id,
                        name: t.name,
                        showOrder: t.showOrder
                    })
                })
            })
        }), n
    }

    function x(e) {
        var t = e;
        return e && (t = e.replace(/[^\x20-\x7E]|\s+/gim, "")), t
    }

    function E(e, l, c) {
        p.updateCounter = 0, p.newCounter = 0, p.deletedCounter = 0, p.newRequirements = [];
        var t, d = [],
            n = "The optional column(s) ",
            u = [];
        t = p.requirements, angular.forEach(t, function(e) {
            e.diffShortName = e.shortName, e.diffDescription = e.description, angular.forEach(e.optionColumns, function(e) {
                angular.forEach(e.content, function(e) {
                    e.diffContent = e.content
                })
            })
        }), angular.forEach(e, function(e) {
            var t = !1;
            e.diffShortName = e.shortName, e.diffDescription = e.description, angular.forEach(e.optionColumns, function(e) {
                angular.forEach(e.content, function(e) {
                    e.diffContent = e.content
                })
            });
            for (var n, a, o, i = 0; i < p.requirements.length; i++)
                if (angular.isDefined(p.requirements[i].linkStatus) ? (p.requirements[i].linkStatus.link = !0, angular.isUndefined(p.requirements[i].linkStatus.ticketStatus) && (p.requirements[i].linkStatus.ticketStatus = [])) : p.requirements[i].linkStatus = {
                        link: !0,
                        ticketStatus: []
                    }, p.requirements[i].id === e.id) {
                    JSON.parse(g.showProperties.toLowerCase()) && (p.requirements[i].collectionInstances = A(e.collectionInstances)), p.requirements[i].category = e.category, p.requirements[i].categoryId = e.categoryId, p.requirements[i].tagInstances = e.tagInstances;
                    var r = p.requirements[i];
                    r.shortName !== e.shortName && (n = e, o = void 0, o = diffString2((a = r).shortName, n.shortName), a.diffShortName = o.o, n.diffShortName = o.n, t = !0), !!(e.description && r.description) && x(e.description) === x(r.description) || (n = e, s = void 0, s = diffString2((o = r).description, n.description), o.diffDescription = s.o, n.diffDescription = s.n, t = !0);
                    var s = function(e, a) {
                        var r = !1;
                        return angular.forEach(e.optionColumns, function(i) {
                            for (var e = !1, t = 0; t < a.optionColumns.length; t++)
                                if (a.optionColumns[t].showOrder === i.showOrder) {
                                    e = !0;
                                    var n = a.optionColumns[t];
                                    angular.forEach(n.content, function(e) {
                                        for (var t = !1, n = 0; n < i.content.length; n++) {
                                            var a = i.content[n];
                                            if (a.id === e.id && a.content.replace(/[^\x20-\x7E]|\s+/gim, "") !== e.content.replace(/[^\x20-\x7E]|\s+/gim, "")) {
                                                t = !0;
                                                var o = diffString2(e.content, a.content);
                                                e.diffContent = o.o.replace(/\x60/gim, ""), a.diffContent = o.n.replace(/\x60/gim, ""), r = !0;
                                                break
                                            }
                                        }
                                        t || i.content.push(e)
                                    });
                                    break
                                }
                            e || (0 === m("filter")(u, i.name).length && u.push(i.name), a.optionColumns.push(i), p.requirementProperties.requirementsEdited = !0, p.requirementProperties.newColumn.present = !0)
                        }), r
                    }(e, r);
                    (t || s) && (s = e, r = r, angular.extend(s, {
                        isNew: !0,
                        isOld: !1,
                        needsUpdate: !0
                    }), angular.extend(r, {
                        needsUpdate: !0,
                        oldCategoryId: r.categoryId,
                        oldCategoryName: r.category,
                        oldCategoryOrder: r.categoryOrder,
                        oldOrder: r.order
                    }), r.categoryId = s.categoryId, r.category = s.category, r.categoryOrder = s.categoryOrder, r.order = s.order, s.statusColumns = r.statusColumns, s.tickets = r.tickets, s.linkStatus = r.linkStatus, p.updateCounter++, p.updateProperties.updatesAvailable = !0, t = p.requirements[i].markAsOld = !0);
                    break
                }
            t && p.newRequirements.push(e), p.searchRequirementInArray(e, p.requirements) || (l ? (angular.extend(e, {
                isNew: !1,
                isOld: !1
            }), p.requirements.push(e), d.push(e), p.newCounter++) : c && (angular.extend(e, {
                isNew: !0,
                isOld: !1,
                needsUpdate: !0
            }), p.newRequirements.push(e), p.updateProperties.updatesAvailable = !0, p.newCounter++))
        }), 0 < u.length && (n += "**" + u.toString() + "** was/were added. Please save the current state.", p.requirementProperties.newColumn.alertMessages.push(n)), p.deletedReqs = [];
        for (var a, o = p.requirements.length - 1; 0 <= o; o--) {
            var i = p.requirements[o];
            !p.searchRequirementInArray(i, e) && i.id < 1e4 && (p.deletedReqs.push(i), l ? p.requirements.splice(o, 1) : p.updateProperties.updatesAvailable = !0, p.deletedCounter++)
        }
        l && (a = "", 0 === p.newCounter && 0 === p.deletedCounter ? (a = "No Updates were found. All your requirements are up to date.", h.showWarning("Change settings and ActualizaciÃ³n de requisitos exitosa", a, h.SUCCESS)) : (a = "Summary:<ul><li> " + p.newCounter + " new requirement(s) were added</li><li>" + p.deletedCounter + " requirement(s) were removed</li></ul>", 0 < d.length && (a += "<BR>The following requirement(s) were <font color='green'>added</font>:<BR><BR><table class='table table-responsive'><tr><thNombre/th><th>DescripciÃ³n</th></tr>", angular.forEach(m("orderBy")(d, ["categoryOrder", "order"]), function(e) {
            a += "<tr><td>" + e.shortName + "</td><td>" + e.description + "</td></tr>"
        }), a += "</table>"), 0 < p.deletedReqs.length && (a += "<BR>The following requirement(s) were <font color='red'>removed</font>:<BR><BR><table class='table table-responsive'><tr><thNombre/th><th>DescripciÃ³n</th></tr>", angular.forEach(m("orderBy")(p.deletedReqs, ["categoryOrder", "order"]), function(e) {
            a += "<tr><td>" + e.shortName + "</td><td>" + e.description + "</td></tr>"
        }), a += "</table>"), p.deletedReqs = [], p.newCounter = 0, h.showWarning("Change settings and ActualizaciÃ³n de requisitos exitosa", a, h.INFO))), p.updateProperties.updatesCounter = p.updateCounter + p.newCounter
    }

    function q() {
        if (!(this instanceof q)) return new q;
        this.SheetNames = [], this.Sheets = {}
    }

    function I() {
        var e = {
            name: p.systemSettings.name,
            ticket: p.ticket,
            projectType: p.systemSettings.project,
            collections: p.systemSettings.colls,
            generatedOn: p.generatedOn,
            lastChanged: d.getCurrentDate(),
            requirements: angular.copy(p.requirements)
        };
        return d.buildYAMLFile(e)
    }
    p.buildRequirements = function() {
        var e, t, o = T(p.statusColumns);
        angular.forEach(p.requirementSkeletons, function(n) {
            var e, a = 0;
            angular.forEach(n.requirements, function(e) {
                var t = S(e.optionColumnContents);
                p.fillEmptyOpts(t, p.optColumns);
                t = {
                    id: e.id,
                    category: n.name,
                    categoryId: n.id,
                    shortName: e.shortName,
                    universalId: e.universalId,
                    description: e.description,
                    categoryOrder: n.showOrder,
                    order: e.showOrder,
                    tagInstances: e.tagInstanceIds,
                    optionColumns: t,
                    tickets: [],
                    linkStatus: {
                        link: !0,
                        ticketStatus: []
                    },
                    statusColumns: angular.copy(o, []),
                    selected: !1
                };
                JSON.parse(g.showProperties.toLowerCase()) && (t.collectionInstances = A(e.collectionInstances)), p.requirements.push(t), p.filterCategory.push({
                    id: n.id,
                    showOrder: n.showOrder,
                    label: n.name
                }), p.filterCategory = p.unique(p.filterCategory), e.showOrder > a && (a = e.showOrder)
            }), 0 < p.filterCategory.length && ((e = p.filterCategory.pop()).lastElemOrder = a, p.filterCategory.push(e))
        }), p.filterCategory = m("orderBy")(p.filterCategory, "showOrder"), void 0 !== p.systemSettings.oldRequirements && (e = p.systemSettings.oldRequirements, t = p.requirements, p.requirements = e, E(t, !0, !1)), p.finishProgressbar(), p.onTimeout(), p.promiseForStorage = a(p.onTimeout, 6e4), p.length = p.requirementSkeletons.length
    }, p.mergeOldAndNewRequirements = function() {
        var e = [];
        angular.forEach(p.systemSettings.oldRequirements, function(t) {
            angular.forEach(p.requirements, function(e) {
                t.id === e.id && (e.optionColumns = t.optionColumns, e.statusColumns = t.statusColumns, e.tickets = t.tickets)
            }), 0 <= t.shortName.indexOf(g.customRequirement) && 1e4 <= t.id && e.push(t), angular.forEach(t.optionColumns, function(e) {
                angular.forEach(e.content, function(e) {
                    void 0 !== e.setId && -1 === p.selectedAlternativeSets.indexOf(e.setId) && p.selectedAlternativeSets.push(e.setId)
                })
            })
        }), angular.forEach(p.requirements, function(a) {
            p.searchRequirementInArray(a, p.systemSettings.oldRequirements) || angular.forEach(p.alternativeSets, function(e) {
                angular.forEach(e.alternativeSets, function(n) {
                    angular.forEach(n.alternativeInstances, function(t) {
                        t.requirementId === a.id && angular.forEach(p.selectedAlternativeSets, function(e) {
                            e === n.id && angular.forEach(a.optionColumns, function(e) {
                                e.showOrder === n.optColumnId && e.content.push({
                                    id: t.id,
                                    setId: n.id,
                                    content: "**" + n.name + "**\n\n" + t.content
                                })
                            })
                        })
                    })
                })
            })
        }), 0 !== e.length && (angular.forEach(e, function(e) {
            p.requirements.push(e)
        }), p.getCustomRequirements()), p.getAlternativeSets()
    }, p.unique = function(e) {
        var t = [],
            n = {};
        return angular.forEach(e, function(e) {
            n[e.label] || (t.push(e), n[e.label] = e)
        }), t
    }, p.searchObjectKey = function(t, e) {
        var n = !1;
        return angular.forEach(e, function(e) {
            e.hasOwnProperty(t) && (n = !0)
        }), n
    }, p.searchObjectbyValue = function(n, e) {
        var a = !1;
        return angular.forEach(e, function(e, t) {
            e === n && (a = !0)
        }), a
    }, p.searchRequirementInArray = function(t, e) {
        var n = !1;
        return angular.forEach(e, function(e) {
            e.id === t.id && (n = !0)
        }), n
    }, p.fillEmptyOpts = function(n, e) {
        var a = null;
        angular.forEach(e, function(e) {
            angular.forEach(e, function(e, t) {
                "id" === t && (a = e), "name" === t && (d.searchArrayByValue(e, n) || n.push({
                    content: [{
                        id: 0,
                        content: " "
                    }],
                    name: e,
                    showOrder: a
                }))
            })
        })
    }, p.buildSettings = function() {
        var t = [],
            n = [];
        angular.forEach(p.systemSettings.colls, function(e) {
            angular.forEach(e.values, function(e) {
                t.push(e.collectionInstanceId)
            })
        }), angular.forEach(p.systemSettings.project, function(e) {
            n.push(e.projectTypeId)
        }), angular.extend(p.requirementsSettings, {
            collections: t,
            projectTypes: n
        })
    }, p.filterRequirements = function() {
        var e = m("filterUpdates")(p.requirements, p.updateProperties.updatedReqs),
            e = m("filterByTags")(e, p.filteredRequirementsByTags);
        return e = m("filterByCategories")(e, p.selectedCategory), e = m("filter")(e, {
            shortName: p.textFilters.shortName,
            description: p.textFilters.description
        }), e = m("filterByStatus")(e, p.selectedStatusColumn, p.statusColumns), e = m("filterTicketStatus")(e, p.jiraStatus.selectedStatus), e = m("filter")(e, p.search), e = m("filterOptColumnByText")(e, p.textFilters.optColumns, p.optColumns), m("filterStatusColumnByText")(e, p.textFilters.statusColumns, p.statusColumns)
    }, p.updatesAvailableClicked = function() {
        angular.forEach(m("filter")(p.filterCategory, {
            isNew: !0
        }), function(e) {
            delete e.isNew
        }), p.backUpForUpdateCancelation = {
            requirements: [],
            updatesCounter: p.updateProperties.updatesCounter
        }, angular.copy(p.requirements, p.backUpForUpdateCancelation.requirements), 0 < p.newRequirements.length && (angular.forEach(p.newRequirements, function(e) {
            e.updateTooltip = "New requirement in the SecurityRAT database", p.requirements.push(angular.extend({}, e))
        }), p.updateProperties.updatedReqs = !0), 0 < m("filter")(p.requirements, {
            markAsOld: !0
        }).length && angular.forEach(m("filter")(p.requirements, {
            markAsOld: !0
        }), function(e) {
            e.isOld = !0, e.updateTooltip = "Requisito obsoleto en su archivo YAML"
        });
        var e;
        0 < p.deletedReqs.length && (p.updateProperties.updatesCounter += p.deletedReqs.length, angular.forEach(p.deletedReqs, function(e) {
            for (var t = 0; t < p.requirements.length; t++) {
                var n = p.requirements[t];
                if (n.id === e.id) {
                    n.isOld = !0, n.toBeRemoved = !0, n.needsUpdate = !0, n.updateTooltip = "Requisito obsoleto en su archivo YAML";
                    break
                }
            }
        }), p.updateProperties.updatedReqs = !0), 0 === p.updateProperties.updatesCounter && 0 === p.newCounter ? h.showWarning("ActualizaciÃ³n de reuquisitos exitosa", "No se encontraron actualizaciones. Todos sus requisitos estÃ¡n al dÃ­a.", h.SUCCESS) : 0 < p.updateProperties.updatesCounter && (e = "Summary:<ul><li>" + p.updateCounter + " requirement(s) updates were found</li><li> " + p.newCounter + " new requirement(s) were found</li><li> " + p.deletedReqs.length + " removable requirement(s) were found.</li></ul><BR>You can now review the updates. The obsolete requirement is marked in <span style='background-color:rgb(255, 204, 204);'>light red</span> and the new requirement in <span style='background-color:rgb(204, 255, 204);'>light green</span> Please accept the change by clicking on the <button class='btn btn-success'><span class='glyphicon glyphicon-ok'></span></button> button to keep the new requirement or by clicking on the <button class='btn btn-danger'><span class='glyphicon glyphicon-remove'></span></button> to keep the obsolete requirement.", h.showWarning("ActualizaciÃ³n de requisitos exitosa", e, h.INFO))
    }, p.revertUpdates = function() {
        p.updateProperties.updatedReqs = !1, p.requirements = [], angular.copy(p.backUpForUpdateCancelation.requirements, p.requirements), p.updateProperties.updatesCounter = p.backUpForUpdateCancelation.updatesCounter, p.backUpForUpdateCancelation = {}, p.requirementProperties.requirementsEdited = !1
    }, p.acceptAllUpdates = function() {
        for (var e = angular.copy(p.requirements), t = 0; t < e.length; t++) {
            var n = e[t];
            void 0 !== n.isNew && n.isNew ? p.applyChanges(n.id, !0) : void 0 !== n.toBeRemoved && n.toBeRemoved && p.applyChanges(n.id, !1)
        }
    }, p.applyChanges = function(t, e) {
        for (var n = !1, a = p.requirements.length - 1; 0 <= a; a--) {
            var o = p.requirements[a];
            o.id === t && e && !o.isNew && angular.isUndefined(o.toBeRemoved) ? (o.updateTooltip = "", p.requirements.splice(a, 1), n || p.updateProperties.updatesCounter--, p.requirementProperties.requirementsEdited = !0, n = !0) : o.id !== t || e || !o.isNew && !o.toBeRemoved ? o.id === t && e && (o.isNew || o.toBeRemoved) ? (o.isNew = !1, o.updateTooltip = "", o.toBeRemoved = !1, o.isOld = !1, o.needsUpdate = !1, o.applyUpdate = " ", n || (p.requirementProperties.requirementsEdited = !0, p.updateProperties.updatesCounter--), n = !0) : o.id !== t || e || o.isNew || (o.updateTooltip = "", o.isOld = !1, o.toBeRemoved = !1, o.needsUpdate = !1, o.oldOrder && (o.order = o.oldOrder, delete o.oldOrder), o.oldCategoryId && (o.categoryId = o.oldCategoryId, o.category = o.oldCategoryName, o.categoryOrder = o.oldCategoryOrder, delete o.oldCategoryName, delete o.oldCategoryId, delete o.oldCategoryOrder)) : (o.updateTooltip = "", p.requirements.splice(a, 1), n || p.updateProperties.updatesCounter--, n = !0)
        }
        angular.forEach(p.requirements, function(e) {
            e.isNew && e.id === t && (e.isNew = !1, e.needsUpdate = !1, e.applyUpdate = " ", n || (p.requirementProperties.requirementsEdited = !0, p.updateProperties.updatesCounter--))
        }), p.updateProperties.updatesCounter <= 0 && (p.updateProperties.updatedReqs = !1, p.updateProperties.updatesAvailable = !1, p.backUpForUpdateCancelation = {})
    }, p.removeUnwantedChars = function(e, t) {
        for (var n = 0; n < t.length; n++) e = e.replace(t[n], "");
        var a = e.split(" ");
        e = "";
        for (var o = 0; o < a.length; o++) 0 < o && (e += "_"), e += a[o];
        return e
    }, p.exportPTT = function() {
        n.open({
            size: "lg",
            backdrop: "static",
            templateUrl: "scripts/app/editor/presentation/configuration/config-modal.html",
            controller: "EditPresentation",
            resolve: {
                entity: function() {
                    var e = {};
                    return e.requirements = angular.copy(m("orderBy")(m("filter")(p.requirements, {
                        selected: !0
                    }), ["categoryOrder", "order"])), e.optionColumns = angular.copy(m("orderBy")(p.optColumns, ["showOrder"])), e.statusColumns = angular.copy(m("orderBy")(p.statusColumns, ["showOrder"])), e.artifactName = p.systemSettings.name, e
                }
            }
        })
    }, p.excelToggle = function(e, t) {
        angular.isDefined(e) && !e ? p.withselectedDropdown.toggleExcel = !1 : angular.isUndefined(e) && (p.withselectedDropdown.toggleExcel = !0)
    }, p.configExcel = function() {
        n.open({
            size: "lg",
            backdrop: "static",
            templateUrl: "scripts/app/editor/excel/excel.config.html",
            controller: "EditExcel",
            resolve: {}
        }).result.then(function(e) {
            p.exportExcel(e.statusValues)
        })
    }, p.exportExcel = function(e) {
        p.withselectedDropdown.toggleExcel = !1, p.withselectedDropdown.isopen = !1;
        for (var t = (t = p.removeUnwantedChars(p.systemSettings.name, ["[", "]", "'", ":", "*", "?", "|", "/", "\\", ":", "*"])).replace("&", "&amp;"), n = [], a = 0, o = 0; o < p.statusColumns.length; o++) p.statusColumns[o].isEnum && (n[a] = {}, n[a].values = [], n[a].values = p.statusColumns[o].values, n[a].statusname = p.statusColumns[o].name, a++);
        var i = p.optColumns.length + p.statusColumns.length + 3;
        JSON.parse(g.showProperties.toLowerCase()) && (i = p.optColumns.length + p.statusColumns.length + 4);
        var i = function(e, t) {
                for (var n = function(a) {
                        var o = [];
                        JSON.parse(g.showProperties.toLowerCase()) && (o = ["collectionInstances"]);
                        o = o.concat(["category", "shortName", "description"]);
                        var e = m("orderBy")(m("filter")(p.requirements, {
                                selected: !0
                            }), ["categoryOrder", "order"]),
                            i = 0,
                            t = {
                                font: {
                                    sz: "12"
                                },
                                xfinnertags: [{
                                    alignment: {
                                        horizontal: "center"
                                    },
                                    name: "alignment"
                                }]
                            };
                        p.tableArray[i] = [{
                            value: p.systemSettings.name,
                            format: {
                                font: {
                                    sz: "20"
                                }
                            }
                        }, {
                            value: null
                        }, {
                            value: null
                        }, {
                            value: d.getCurrentDate(),
                            format: {
                                font: {
                                    sz: "20"
                                },
                                xfinnertags: [{
                                    alignment: {
                                        horizontal: "right"
                                    },
                                    name: "alignment"
                                }]
                            }
                        }], i++, p.tableArray[i] = [], i++, p.tableArray[i] = [];
                        var n = [];
                        JSON.parse(g.showProperties.toLowerCase()) && (n = ["Properties"]);
                        return (n = n.concat(["Category", "Short name", "Description"])).forEach(function(e) {
                            angular.equals(e, "Description") ? p.tableArray[i].push({
                                value: e,
                                format: {
                                    font: {
                                        sz: "12"
                                    },
                                    xfinnertags: [{
                                        alignment: {
                                            wrapText: "1"
                                        },
                                        name: "alignment"
                                    }]
                                }
                            }) : p.tableArray[i].push({
                                value: e,
                                format: t
                            })
                        }), angular.forEach(m("orderBy")(p.optColumns, ["showOrder"]), function(e) {
                            p.tableArray[i].push({
                                value: e.name,
                                format: t
                            })
                        }), angular.forEach(m("orderBy")(p.statusColumns, ["showOrder"]), function(e) {
                            e.isEnum ? p.tableArray[i].push({
                                value: e.name,
                                comment: "statusColumn",
                                format: t
                            }) : p.tableArray[i].push({
                                value: e.name,
                                format: t
                            })
                        }), angular.forEach(e, function(e) {
                            i++, p.tableArray[i] = [];
                            for (var t, n = 0; n < o.length; n++) JSON.parse(g.showProperties.toLowerCase()) ? "collectionInstances" === o[n] ? (t = "", angular.forEach(m("orderBy")(e.collectionInstances, ["showOrder"]), function(e) {
                                t += e.name + " \n\n"
                            }), p.tableArray[i].push({
                                value: t,
                                format: {
                                    fontId: 0,
                                    xfinnertags: [{
                                        alignment: {
                                            wrapText: "1"
                                        },
                                        name: "alignment"
                                    }]
                                }
                            })) : "collectionInstances" === o[n] ? p.tableArray[i].push({
                                value: e.Control,
                                format: {
                                    fontId: 0,
                                    xfinnertags: [{
                                        alignment: {
                                            wrapText: "1"
                                        },
                                        name: "alignment"
                                    }]
                                }
                            }) : p.tableArray[i].push({
                                value: e[o[n]],
                                format: {
                                    fontId: 0,
                                    xfinnertags: [{
                                        alignment: {
                                            wrapText: "1"
                                        },
                                        name: "alignment"
                                    }]
                                }
                            }) : p.tableArray[i].push({
                                value: e[o[n]],
                                format: {
                                    fontId: 0,
                                    xfinnertags: [{
                                        alignment: {
                                            wrapText: "1"
                                        },
                                        name: "alignment"
                                    }]
                                }
                            });
                            angular.forEach(m("orderBy")(e.optionColumns, ["showOrder"]), function(e) {
                                var t = "";
                                angular.forEach(e.content, function(e) {
                                    t += e.content
                                }), p.tableArray[i].push({
                                    value: d.removeMarkdown(t, "requirement"),
                                    format: {
                                        fontId: 0,
                                        xfinnertags: [{
                                            alignment: {
                                                wrapText: "1"
                                            },
                                            name: "alignment"
                                        }]
                                    }
                                })
                            }), angular.forEach(m("orderBy")(e.statusColumns, ["showOrder"]), function(e) {
                                a ? p.tableArray[i].push({
                                    value: e.value,
                                    format: {
                                        fontId: 0
                                    }
                                }) : p.tableArray[i].push({
                                    value: "",
                                    format: {
                                        fontId: 0
                                    }
                                })
                            })
                        }), ++i
                    }(t), a = {}, o = {
                        s: {
                            c: 1e7,
                            r: 1e7
                        },
                        e: {
                            c: 0,
                            r: 0
                        }
                    }, i = 0; i !== n; ++i)
                    for (var r = 0; r < e; r++) {
                        o.s.r > i && (o.s.r = i), o.s.c > r && (o.s.c = r), o.e.r < i && (o.e.r = i), o.e.c < r && (o.e.c = r);
                        var s, l = {};
                        angular.isUndefined(p.tableArray[i][r]) || (angular.extend(l, {
                            v: p.tableArray[i][r].value
                        }), null !== l.v && (angular.extend(l, {
                            s: p.tableArray[i][r].format
                        }), angular.isDefined(p.tableArray[i][r].comment) && angular.extend(l, {
                            c: p.tableArray[i][r].comment
                        }), s = XLSX.utils.encode_cell({
                            c: r,
                            r: i
                        }), "number" == typeof l.v ? l.t = "n" : "boolean" == typeof l.v ? l.t = "b" : l.t = "s", a[s] = l))
                    }
                o.s.c < 1e7 && (a["!ref"] = XLSX.utils.encode_range(o));
                return a
            }(i, e),
            r = [{
                wch: 20
            }, {
                wch: 12
            }, {
                wch: 45
            }];
        angular.forEach(p.optColumns, function() {
            r.push({
                wch: 50
            })
        }), angular.forEach(p.statusColumns, function() {
            r.push({
                wch: 10
            })
        });
        e = new q;
        e.SheetNames.push(t), e.Sheets[t] = i, 0 < n.length && (e.SheetNames.push("dropdown"), e.Sheets.dropdown = p.buildDropdownList(n)), i["!cols"] = r;
        e = XLSX.write(e, {
            bookType: "xlsx",
            bookSST: !1,
            type: "binary"
        }); - 1 !== navigator.userAgent.indexOf("Safari") && -1 === navigator.userAgent.indexOf("Chrome") ? window.open("data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8;base64," + window.btoa(e), "", "width=300,height=150") : saveAs(new Blob([function(e) {
            for (var t = new ArrayBuffer(e.length), n = new Uint8Array(t), a = 0; a !== e.length; ++a) n[a] = 255 & e.charCodeAt(a);
            return t
        }(e)], {
            type: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet ;charset=utf-8"
        }), g.filenamePrefix + "_" + p.removeUnwantedChars(p.systemSettings.name, ["/", "\\", ":", "*", "?", "'", "<", ">", "|", "."]) + "_" + d.getCurrentDate() + ".xlsx")
    }, p.adjustExcelSyntaxSymbols = function(e) {
        for (var t = ["&", ":", "*", "?", "|"], n = 0; n < t.length; n++) e = e.replace(t[n], "'" + t[n]);
        return e
    }, p.buildDropdownList = function(e) {
        for (var t = {}, n = {
                s: {
                    c: 1e7,
                    r: 1e7
                },
                e: {
                    c: 0,
                    r: 0
                }
            }, a = 0; a < e.length; a++)
            for (var o = 0; o < e[a].values.length; o++) {
                n.s.r > o && (n.s.r = o), n.s.c > a && (n.s.c = a), n.e.r < o && (n.e.r = o), n.e.c < a && (n.e.c = a);
                var i, r = {};
                0 === o && angular.extend(r, {
                    c: "statusColumn" + e[a].statusname
                }), angular.extend(r, {
                    v: e[a].values[o].name
                }), null !== r.v && (i = XLSX.utils.encode_cell({
                    c: a,
                    r: o
                }), "number" == typeof r.v ? r.t = "n" : "boolean" == typeof r.v ? r.t = "b" : r.t = "s", t[i] = r)
            }
        return n.s.c < 1e7 && (t["!ref"] = XLSX.utils.encode_range(n)), t
    }, p.createTicketReqs = function() {
        var e = {};
        p.withselectedDropdown.isopen = !1, angular.extend(e, {
            name: p.systemSettings.name,
            ticket: p.ticket,
            projectType: p.systemSettings.project,
            collections: p.systemSettings.colls,
            generatedOn: p.generatedOn,
            lastChanged: d.getCurrentDate(),
            requirements: p.requirements,
            statusColumns: p.statusColumns,
            defaultJIRAHost: g.defaultJIRAHost
        }), t.setProperty(e), n.open({
            size: "lg",
            backdrop: "static",
            templateUrl: "scripts/app/editor/export/createTicket.html",
            controller: "ExportController"
        }).result.then(function(e) {
            0 < p.jiraStatus.allStatus.length ? angular.forEach(e.allStatus, function(e) {
                0 === m("filter")(p.jiraStatus.allStatus, {
                    name: e.name
                }).length && p.jiraStatus.allStatus.push(e)
            }) : (p.jiraStatus.allStatus = e.allStatus, p.jiraStatus.allStatus.push({
                name: "No ticket"
            })), p.disableSave(!0), p.requirementProperties.hasIssueLinks = !0
        })
    }, p.checkExistingTickets = function() {
        var t = !1;
        return p.existingTickets = "", angular.forEach(m("filter")(p.requirements, {
            selected: !0
        }), function(e) {
            angular.isDefined(e.tickets) && 0 < e.tickets.length && (angular.equals(p.existingTickets, "") || (p.existingTickets += ", "), p.existingTickets += e.shortName, t = !0)
        }), t
    }, p.exportSystem = function() {
        var e = {};
        angular.extend(e, {
            name: p.systemSettings.name,
            ticket: p.ticket,
            projectType: p.systemSettings.project,
            collections: p.systemSettings.colls,
            generatedOn: p.generatedOn,
            lastChanged: d.getCurrentDate(),
            requirements: p.requirements,
            defaultJIRAUrl: g.defaultJIRAQueueForYAML
        }), t.setProperty(e), n.open({
            size: "lg",
            backdrop: "static",
            templateUrl: "scripts/app/editor/export/export.html",
            controller: "ExportController"
        }).result.then(function(e) {
            angular.isDefined(e.ticket) && angular.isDefined(e.ticket.url) && angular.isDefined(e.ticket.key) && (p.ticket.url = e.ticket.url, p.ticket.key = e.ticket.key, b.document.title = b.document.title.split(":")[0] + ": " + p.ticket.key), angular.isDefined(e.hasReqTicket) && !e.hasReqTicket && (p.requirementProperties.hasIssueLinks = !1), p.disableSave(!0), s.isSupported && s.remove(g.localStorageKey)
        })
    }, p.onTimeout = function() {
        var e;
        s.isSupported && p.requirementProperties.requirementsEdited && !p.updateProperties.updatedReqs && (e = I(), e = jsyaml.safeDump(e), s.set(g.localStorageKey, e))
    }, p.setFixedPosition = function() {
        return {
            position: "fixed",
            top: p.mouseY + 5,
            left: p.mouseX - 10
        }
    }, p.pushCoordinates = function(e) {
        p.mouseX = e.clientX, p.mouseY = e.clientY
    }, p.routeChange = function(e, t, n) {
        p.requirementProperties.requirementsEdited && (i({
            text: "You have unsaved data. Are you sure you want to leave the page without saving?",
            title: "Confirm",
            ok: "Ignore Changes",
            cancel: "Cancel"
        }, {
            templateUrl: "scripts/app/editor/confirm-modal.html"
        }).then(function() {
            p.onRouteChangeOff = "", p.requirementProperties.requirementsEdited = !1, window.onbeforeunload = function(e) {}, window.location.href = r.url(t).hash()
        }), e.preventDefault())
    }, p.startAutomatedTest = function() {
        var e = m("filter")(p.requirements, {
            selected: !0
        });
        n.open({
            templateUrl: "scripts/app/editor/requirements/requirements-test.html",
            controller: "TestRequirements",
            backdrop: "static",
            size: "lg",
            resolve: {
                entity: function() {
                    return e
                }
            }
        }).result.then(function() {}, function() {})
    }, p.cleanUpIssueLinking = function(e) {
        e.linkStatus.enableTooltip = !1, e.tempTicket = "", p.manageTicketProperty.sameTicketError = !1, p.manageTicketProperty.jhError.show = !1, C.cancelPromises(p.manageTicketProperty.promise), p.manageTicketProperty.spinnerProperty.showSpinner = !1
    }, p.doIssueLinking = function(t, n, a) {
        var o, i;
        a = f.buildJiraUrl(a), t.tempTicket = a, p.manageTicketProperty.error = !1, p.manageTicketProperty.authenticationFailure = !1, p.manageTicketProperty.jhError.show = !1, p.manageTicketProperty.jhError.msg = "", angular.equals(a, p.ticket.url) ? (p.manageTicketProperty.jhError.show = !0, p.manageTicketProperty.jhError.msg = "You cannot link a ticket to itself.") : (p.manageTicketProperty.jhError.show = !1, o = {}, (i = {}).apiUrl = d.buildJiraUrl(p.ticket.url.split("/")), i.key = i.apiUrl.ticketKey[0], i.url = p.ticket.url, o.apiUrl = d.buildJiraUrl(a.split("/")), 1 === o.apiUrl.ticketKey.length ? (p.manageTicketProperty.error = !1, o.key = o.apiUrl.ticketKey[0], o.url = a, p.manageTicketProperty.authenticatorProperty = {
            url: p.ticket.url,
            message: "No estÃ¡ autenticado, haga clic en el siguiente enlace para autenticarse. TendrÃ¡ un minuto despuÃ©s de hacer clic en el enlace."
        }, p.manageTicketProperty.promise.derefer = v.defer(), u.jiraAuth(f.buildUrlCall("issueKey", i.apiUrl), p.manageTicketProperty.authenticatorProperty, p.manageTicketProperty.spinnerProperty, p.manageTicketProperty.promise).then(function(e) {
            return i.fields = e.fields, i.key = e.key, p.manageTicketProperty.authenticatorProperty = {
                url: a,
                message: "No estÃ¡ autenticado, haga clic en el siguiente enlace para autenticarse. TendrÃ¡ un minuto despuÃ©s de hacer clic en el enlace."
            }, p.manageTicketProperty.promise.derefer = v.defer(), Promise.all([e, u.jiraAuth(f.buildUrlCall("issueKey", o.apiUrl), p.manageTicketProperty.authenticatorProperty, p.manageTicketProperty.spinnerProperty, p.manageTicketProperty.promise)])
        }).then(function(e) {
            o.key = e[1].key, o.fields = e[1].fields, n(t, i, o, a)
        }).catch(function(e) {
            503 === e.status ? p.manageTicketProperty.authenticationFailureMessage = "Service is not available for the moment. Please try again later." : 404 === e.status ? p.manageTicketProperty.authenticationFailureMessage = "The request to the issue tracker responded with 404 Not found. Please make sure that the given ticket exist." : p.manageTicketProperty.authenticationFailureMessage = "The authentication to the issue tracker was unsuccesful. Please make sure you have permission to see the specified issue", p.manageTicketProperty.authenticationFailure = !0, p.manageTicketProperty.spinnerProperty.showSpinner = !1
        })) : p.manageTicketProperty.error = !0)
    }, p.validateURLTicketValue = function(e) {
        return d.validateURLTicketValue(e)
    }, p.addManualTicket = function(e, o, i, t) {
        p.manageTicketProperty.spinnerProperty.showSpinner = !0, -1 === e.tickets.indexOf(t) ? (e.tickets.push(e.tempTicket), e.tempTicket = "", e.linkStatus.link && f.addIssueLinks(o, i).then(function() {
            p.manageTicketProperty.spinnerProperty.showSpinner = !1
        }).catch(function(e) {
            var t, n, a;
            p.manageTicketProperty.spinnerProperty.showSpinner = !1, t = e, n = o.url, a = i.url, e = "", 500 !== t.status && (0 === t.errorException.opened.$$state.status && (t.errorException.opened.$$state.value = !1, t.errorException.opened.$$state.status = 1), 404 === parseInt(t.status) ? (e = "No se pudo vincular el Issue. Esto puede ocurrir cuando la vinculaciÃ³n entre el Issue " + n + " y " + a + " esta desactivada.", h.showWarning("Enlace de Issue invalido", e, h.DANGER)) : 401 === t.status && (p.exportProperty.issuelink = "permission", e = "No se pudo vincular el Issues. No tienes permiso para vincular Issues.", h.showWarning("Enlace de Issue invalido", e, h.DANGER)))
        }), t = {
            iconUrl: i.fields.status.iconUrl,
            name: i.fields.status.name,
            issueKey: i.key,
            summary: i.fields.summary,
            url: t
        }, e.linkStatus.ticketStatus.push(t), 0 === p.jiraStatus.allStatus.length ? (p.jiraStatus.allStatus.push(t), p.jiraStatus.allStatus.push({
            name: "No ticket"
        })) : 0 === m("filter")(p.jiraStatus.allStatus, {
            name: t.name
        }).length && p.jiraStatus.allStatus.push(t), t = f.addAttachmentAndComment(o, {
            content: I(),
            artifactName: p.systemSettings.name,
            errorHandlingProperty: p.manageTicketProperty
        }), angular.isDefined(t) && t.then(function() {
            p.manageTicketProperty.spinnerProperty.showSpinner = !1, e.linkStatus.enableTooltip = !1, p.manageTicketProperty.jhError.show = !1
        }).catch(function() {})) : (p.manageTicketProperty.jhError.show = !0, p.manageTicketProperty.spinnerProperty.showSpinner = !1, p.manageTicketProperty.jhError.msg = "This ticket is already linked to this requirement. Please provide another one.")
    }, p.removeManualTicket = function(e, t, n, a) {
        if (1 === m("filterTicketStatus")(p.requirements, [n.fields.status]).length)
            for (var o = 0; o < p.jiraStatus.allStatus.length; o++) p.jiraStatus.allStatus[o].name === n.fields.status.name && p.jiraStatus.allStatus.splice(o, 1);
        1 === p.jiraStatus.allStatus.length && "no ticket" === p.jiraStatus.allStatus[0].name.toLowerCase() && (p.jiraStatus.allStatus = []);
        var i = e.tickets.indexOf(a);
        e.tickets.splice(i, 1);
        for (var r = 0; r < e.linkStatus.ticketStatus.length; r++) {
            var s = e.linkStatus.ticketStatus[r];
            angular.equals(s.url, a) && e.linkStatus.ticketStatus.splice(r, 1)
        }
        f.addAttachmentAndComment(t, {
            content: I(),
            artifactName: p.systemSettings.name,
            errorHandlingProperty: p.manageTicketProperty
        })
    }, p.$on("$destroy", function() {
        a.cancel(p.promiseForStorage), p.requirementProperties.requirementsEdited = !1, p.onRouteChangeOff = ""
    }), p.isStatusArrayEmpty = function() {
        return 0 === p.jiraStatus.allStatus.length
    }, p.fetchTicketStatus = function(i, r) {
        var s = {};
        0 === p.jiraStatus.allStatus.length && p.jiraStatus.allStatus.push({
            name: "No ticket"
        }), angular.forEach(i.tickets, function(e) {
            var n = d.buildJiraUrl(e.split("/")),
                a = f.buildUrlCall("issueKey", n);
            angular.isUndefined(s.ticketStatus) && (s.ticketStatus = []);
            var o = n.http + "//" + n.host + "/" + n.path.join("/") + "/" + n.ticketKey[0];
            l.getJIRAInfo(a).then(function(e) {
                var t = {
                    iconUrl: e.fields.status.iconUrl,
                    name: e.fields.status.name,
                    summary: e.fields.summary,
                    issueKey: e.key,
                    url: o
                };
                s.ticketStatus.push(t), angular.extend(i.linkStatus, s), 0 === m("filter")(p.jiraStatus.allStatus, {
                    name: e.fields.status.name
                }).length && p.jiraStatus.allStatus.push(t)
            }, function(e) {
                var t;
                401 === e.status ? (p[n.ticketKey[0]] = {}, p[n.ticketKey[0]].derefer = v.defer(), t = {
                    url: -1 === r.indexOf(n.host) ? o : "",
                    message: "The status of issue linked in your requirement set could not be determined because you are not authenticated.Please click on the following link to authenticate yourself. You will have one minute after a click on the link."
                }, -1 === r.indexOf(n.host) && (r.push(n.host), d.addCheckAuthenticationModal(p[n.ticketKey[0]])), u.jiraAuth(a, t, p.manageTicketProperty.spinnerProperty, p[n.ticketKey[0]]).then(function(e) {
                    var t = {
                        iconUrl: e.fields.status.iconUrl,
                        name: e.fields.status.name,
                        summary: e.fields.summary,
                        issueKey: e.key,
                        url: o
                    };
                    s.ticketStatus.push(t), angular.extend(i.linkStatus, s), 0 === m("filter")(p.jiraStatus.allStatus, {
                        name: e.fields.status.name
                    }).length && p.jiraStatus.allStatus.push(t)
                }).catch(function() {
                    403 === e.status ? h.showWarning("Fallo el llamado al Issue", "No tiene permiso para ver el ticket " + o, h.DANGER) : 500 === e.status && h.showWarning("Error interno del servidor", "El servidor encontrÃ³ una condiciÃ³n inesperada que le impidiÃ³ cumplir con la solicitud.", h.DANGER)
                })) : 403 === e.status ? h.showWarning("Fallo el llamado al Issue", "No tiene permiso para ver el ticket " + o, h.DANGER) : 404 === e.status ? (0 === e.errorException.opened.$$state.status && (e.errorException.opened.$$state.value = !1, e.errorException.opened.$$state.status = 1), h.showWarning("Fallo el llamado al Issue", "El Ticket " + o + " no existe.", h.DANGER)) : 503 === e.status && h.showWarning("Fallo el llamado al Issue", "The request to " + o + " returned service unavailble.", h.DANGER)
            })
        })
    };
    var R = document.getElementById("backToTop");
    p.moveToTop = function() {
        document.body.scrollTop = 0, document.documentElement.scrollTop = 0
    }, window.onscroll = function() {
        1e3 < document.body.scrollTop || 1e3 < document.documentElement.scrollTop ? R.style.display = "block" : R.style.display = "none"
    }
}]), angular.module("sdlctoolApp").controller("TestRequirements", ["entity", "$scope", "$uibModalInstance", "$filter", "appConfig", "$window", "testAutomation", "$q", "authenticatorService", "$uibModalStack", "$timeout", "AlertService", function(e, s, t, l, n, a, o, i, c, r, d, u) {
    var p = !1;
    s.STATUSCONSTANT = {
        ERROR: -1,
        IN_PROGRESS: 0,
        PASSED: 1,
        FAILED: 2
    };
    var m = 200,
        g = [".", ":", ".", ";", " ", "\n", "\t", "\r"];

    function h(e, t, n, a) {
        s.displayProperties.showCloseButton = t;
        e = l("filter")(s.templates, {
            name: e
        }).pop();
        s.templateInScope.url = e.url, s.templateInScope.title = e.title, s.error.class = n, s.error.message = a
    }

    function f(e) {
        s.animation = "slide-animate", s.testId = e.location.split("/").pop();
        var t = "";
        s.acceptedHeaderConfig = e.config, re_weburl.test(e.location) || (t = (t = s.authenticationProperties.displayProperty.url).endsWith("/") ? t.substr(0, t.length - 1) : t),
            function i(r) {
                o.fetchResult(r, s.acceptedHeaderConfig).then(function(e) {
                    h("result", !0, s.error.class, s.error.message), s.testResults.self = r;
                    for (var t = !0, n = 0; n < s.testResults.reqs.length; n++) {
                        var a, o = s.testResults.reqs[n];
                        0 === o.status && (a = l("filter")(e, {
                            requirement: o.shortName
                        }).pop(), angular.isDefined(a) && 0 === o.testResults.length && angular.copy(a.testResults, o.testResults), o.status = 1, angular.forEach(a.testResults, function(i) {
                            angular.forEach(o.testResults, function(e) {
                                if (i.tool === e.tool && "" !== i.message && angular.isUndefined(e.complete) && !e.complete) {
                                    e.confidenceLevel = i.confidenceLevel, e.status = i.status, e.message = i.message, e.complete = !0;
                                    var t = e.message.split("`");
                                    if (e.limitDesc = m, e.backUpLimitDesc = e.limitDesc, 1 < t.length)
                                        for (var n = 0, a = 0, o = 0; o < t.length; o++) {
                                            if (!((n += t[o].length) < m || a % 2 == 1)) {
                                                e.limitDesc = n - t[o].length, e.backUpLimitDesc = e.limitDesc;
                                                break
                                            }
                                            o < t.length - 1 ? (a++, n += 1) : o === t.length - 1 && angular.equals(t[o], "") && (e.message += "\n")
                                        }
                                    for (; - 1 === g.indexOf(e.message[e.limitDesc]) && e.limitDesc < e.message.length;) e.limitDesc++;
                                    e.backUpLimitDesc = e.limitDesc
                                }
                            }), s.STATUSCONSTANT[i.status] === s.STATUSCONSTANT.IN_PROGRESS && (o.status = 0, t = !1)
                        }))
                    }
                    t || p ? (s.authenticationProperties.spinnerProperty.showSpinner = !1, s.stopTimeout(), c.cancelPromises(s.authenticationProperties.authenticatorpromise)) : (s.authenticationProperties.spinnerProperty.text = "Automated test still in progress...", s.authenticationProperties.spinnerProperty.showSpinner = !0, s.fetchResultInterval = d(function() {
                        p || i(r)
                    }, 5e3))
                }).catch(function(e) {
                    angular.isDefined(e.data[0]) && null == e.data[0].requirement ? h("error", !0, "alert alert-danger", e.data[0].testResults[0].message) : 0 === l("filter")(s.testResults.reqs, {
                        status: 1
                    }).length ? h("error", !0, "alert alert-danger", "An error occurred when fetching the results.") : (u.clear(), u.error("An error occurred when fetching the remaining results.", ""), h("result", !0, "", "")), s.stopTimeout(), c.cancelPromises(s.authenticationProperties.authenticatorpromise), s.authenticationProperties.spinnerProperty.showSpinner = !1
                })
            }(t += e.location)
    }

    function v() {
        0 === l("filter")(s.testResults.reqs, {
            status: 1
        }).length ? s.clear() : (s.stopTimeout(), h("result", !0, "", ""))
    }
    s.entity = e, s.testObject = {
        testProperties: {}
    }, s.testResults = {}, s.urlPattern = urlpattern.javascriptStringRegex, s.displayProperties = {
        show: !0,
        showTypes: "Show selected requirements",
        myglyphicon: "glyphicon glyphicon-plus",
        showCloseButton: !0,
        inProgressMessage: "test running..."
    }, s.authenticationProperties = {
        spinnerProperty: {
            fail: !1,
            showSpinner: !1,
            failed: "",
            text: "SecurityCAT Authentication running..."
        },
        displayProperty: {
            url: n.securityCAT,
            message: "No estÃ¡ autenticado, haga clic en el siguiente enlace para autenticarse. TendrÃ¡ un minuto despuÃ©s de hacer clic en el enlace."
        },
        checkerUrl: "/api/account",
        authenticatorpromise: {}
    }, s.error = {
        message: "",
        class: "",
        display: !1
    }, s.templates = [{
        name: "info",
        url: "scripts/app/editor/requirements/testRequirementsTemplates/infoTemplate.html",
        title: "Test requirements"
    }, {
        name: "loading",
        url: "scripts/app/editor/requirements/testRequirementsTemplates/loadingTemplate.html",
        title: "Test requirements"
    }, {
        name: "result",
        url: "scripts/app/editor/requirements/testRequirementsTemplates/resultTemplate.html",
        title: "Test results"
    }, {
        name: "error",
        url: "scripts/app/editor/requirements/testRequirementsTemplates/errorTemplate.html",
        title: "Error"
    }], s.templateInScope = {
        title: "Test requirements",
        url: "scripts/app/editor/requirements/testRequirementsTemplates/infoTemplate.html"
    }, s.stopTimeout = function() {
        angular.isDefined(s.fetchResultInterval) && d.cancel(s.fetchResultInterval)
    }, s.toggleShowHide = function() {
        s.displayProperties.show = !s.displayProperties.show, s.displayProperties.show ? (s.displayProperties.showTypes = "Show selected requirements", s.displayProperties.myglyphicon = "glyphicon glyphicon-plus") : (s.displayProperties.showTypes = "Hide selected requirements", s.displayProperties.myglyphicon = "glyphicon glyphicon-minus")
    }, s.removeReq = function(e) {
        for (var t = 0; t < s.entity.length; t++)
            if (s.entity[t].shortName === e) {
                s.entity.splice(t, 1);
                break
            }
    }, s.init = function() {
        p = !1, s.error.display = !1, s.authenticationProperties.showSpinner = !1
    }, s.parseEntity = function() {
        s.testObject.requirements = [], s.testResults.reqs = [], angular.forEach(s.entity, function(e) {
            e.remove = !1, s.testResults.reqs.push({
                shortName: e.shortName,
                showOrder: e.order,
                description: e.description,
                testResults: [],
                status: 0
            }), s.testObject.requirements.push(e.shortName)
        })
    }, s.showLongdesc = function(e) {
        e.backUpLimitDesc = e.limitDesc, e.limitDesc = void 0
    }, s.hideLongdesc = function(e) {
        e.limitDesc = e.backUpLimitDesc
    }, s.startTest = function(t) {
        s.parseEntity(), s.error.display = !1, s.authenticationProperties.authenticatorpromise.derefer = i.defer(), s.authenticationProperties.spinnerProperty.showSpinner = !0, o.headerConfig.withCredentials = !1, o.startTest(s.testObject, s.authenticationProperties.displayProperty.url).then(f).catch(function(e) {
            500 !== e.status && 403 !== e.status ? o.checkAuthentication(s.testObject, s.authenticationProperties.displayProperty, s.authenticationProperties.spinnerProperty, s.authenticationProperties.authenticatorpromise).then(f).catch(function(e) {
                t.$submitted = !1, "Ex001" !== e && h("error", !0, "alert alert-danger", "CORS" === e ? "Communication with the SecurityCAT Server was not possible due to Cross origin policy. Please make sure this is properly set." : "The authentication to the securityCAT tool was unsuccessful. This can sometimes be due to wrong CORS header configurations. Please check this and try again.")
            }) : (s.error.display = !0, s.error.class = "alert alert-danger", s.error.message = "An error occured when starting the test.")
        })
    }, s.stopTest = function() {
        p = !0, o.stopTest(s.testId, s.acceptedHeaderConfig, s.authenticationProperties.displayProperty.url).then(function() {
            u.success("The test was successfully cancelled.", ""), v()
        }).catch(function() {
            u.add({
                type: "danger",
                msg: "The running test could not be cancelled.",
                params: []
            }), v()
        }), s.displayProperties.inProgressMessage = "N/A", s.authenticationProperties.spinnerProperty.showSpinner = !1
    }, s.getProgressbarType = function(e) {
        var t = "";
        return e < 50 ? t = "danger" : e < 80 ? t = "warning" : e <= 100 && (t = "success"), t
    }, s.backToInfo = function() {
        p = !1, s.testResults = {}, s.displayProperties.inProgressMessage = "test running...", s.parseEntity(), s.authenticationProperties.spinnerProperty.showSpinner = !1, h("info", !0, "", "")
    }, s.pushCoordinates = function(e) {
        s.mouseX = e.clientX, s.mouseY = e.clientY
    }, s.clear = function() {
        s.stopTimeout(), c.cancelPromises(s.authenticationProperties.authenticatorpromise), s.authenticationProperties.spinnerProperty.showSpinner = !1, t.dismiss()
    }
}]), angular.module("sdlctoolApp").controller("EditPresentation", ["$scope", "$uibModalInstance", "$rootScope", "$state", "entity", "localStorageService", "Account", function(a, e, t, n, o, i, r) {
    var s = {};
    a.optionColumns = [], s.requirements = [], a.config = {}, a.config.theme = "black", a.config.transition = "concave", a.config.end = "Thank you.", a.init = function() {
        a.themes = ["beige", "black", "blood", "league", "moon", "night", "serif", "simple", "sky", "solarized", "white"], a.transitions = ["none", "fade", "slide", "convex", "concave", "zoom"], s.requirements = o.requirements, a.optionColumns = o.optionColumns, a.statusColumns = o.statusColumns, a.config.title = o.artifactName, a.config.description = !0, a.config.optionColumns = {}, a.config.statusColumns = {}, angular.forEach(a.optionColumns, function(e) {
            a.config.optionColumns[e.id] = !0
        }), angular.forEach(a.statusColumns, function(e) {
            a.config.statusColumns[e.id] = !0
        }), r.get().$promise.then(function(e) {
            a.config.presenter = e.data.firstName + " " + e.data.lastName
        }), a.config.subtitle = "Security requirements"
    }, a.cancel = function() {
        e.dismiss("cancel")
    }, a.confirm = function() {
        s.config = a.config, angular.forEach(s.requirements, function(t) {
            a.config.description || delete t.description;
            for (var e = 0; e < t.optionColumns.length; e++) a.config.optionColumns[t.optionColumns[e].showOrder] || (t.optionColumns.splice(e, 1), e--);
            for (var n = 0; n < t.statusColumns.length; n++) a.config.statusColumns[t.statusColumns[n].id] ? angular.forEach(a.statusColumns, function(e) {
                t.statusColumns[n].id === e.id && (t.statusColumns[n].name = e.name)
            }) : (t.statusColumns.splice(n, 1), n--)
        }), i.isSupported && (i.set("myRevealjs", JSON.stringify(s)), window.open(n.href("presentation", {
            theme: a.config.theme + ".css"
        }), "_blank")), e.close("closed")
    }
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("presentation", {
        parent: "site",
        url: "/presentation?theme",
        data: {
            roles: ["ROLE_FRONTEND_USER", "ROLE_USER", "ROLE_ADMIN"],
            pageTitle: "Presentation"
        },
        params: {
            theme: "securityrat.css"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/editor/presentation/presentation.html",
                controller: "PresentationController"
            }
        },
        onEnter: ["$state", "$stateParams", function(e, t) {
            var n = document.createElement("link");
            n.id = "theme", n.rel = "stylesheet", n.type = "text/css";
            /[a-z\.]+\.css/i.test(t.theme) ? n.href = "/bower_components/reveal.js/dist/theme/" + t.theme : n.href = "/bower_components/reveal.js/dist/theme/black.css";
            var a = document.createElement("link");
            a.id = "pdf", a.rel = "stylesheet", a.type = "text/x-scss", a.href = "bower_components/reveal.js/css/print/paper.scss";
            t = document.createElement("link");
            t.id = "reveal", t.rel = "stylesheet", t.type = "text/css", t.href = "bower_components/reveal.js/dist/reveal.css", document.getElementsByTagName("head")[0].appendChild(t), document.getElementsByTagName("head")[0].appendChild(n), document.getElementsByTagName("head")[0].appendChild(a);
            for (var o = document.getElementsByTagName("link"), i = 0; i < o.length; i++) - 1 !== o[i].href.indexOf("main.css") && document.head.removeChild(o[i])
        }],
        onExit: function() {
            var e = document.createElement("link");
            e.id = "theme", e.rel = "stylesheet", e.type = "text/css", e.href = "/assets/styles/main.css", document.getElementsByTagName("head")[0].appendChild(e);
            var t = document.getElementById("theme"),
                n = document.getElementById("reveal"),
                e = document.getElementById("pdf");
            document.head.removeChild(t), document.head.removeChild(n), document.head.removeChild(e)
        },
        resolve: {}
    })
}]), angular.module("sdlctoolApp").controller("PresentationController", ["$scope", "$rootScope", "localStorageService", "$filter", "$timeout", "$state", function(t, e, n, a, o, i) {
    t.values = n.get("myRevealjs"), n.remove("myRevealjs"), t.categories = [], t.regex = /^\s+$/g, null !== t.values ? (angular.forEach(t.values.requirements, function(e) {
        ! function(e, t) {
            for (var n = 0; n < t.length; n++)
                if (t[n].id === e) return 1
        }(e.categoryId, t.categories) && t.categories.push({
            name: e.category,
            id: e.categoryId,
            showOrder: e.categoryOrder
        })
    }), Reveal.initialize({
        loop: !1,
        controls: !0,
        progress: !0,
        center: !0,
        transition: t.values.config.transition,
        dependencies: [{
            src: "bower_components/revealjs/lib/js/classList.js",
            condition: function() {
                return !document.body.classList
            }
        }, {
            src: "bower_components/revealjs/plugin/markdown/marked.js"
        }, {
            src: "bower_components/revealjs/plugin/markdown/markdown.js"
        }, {
            src: "bower_components/revealjs/plugin/notes/notes.js",
            async: !0
        }, {
            src: "bower_components/revealjs/plugin/zoom-js/zoom.js",
            async: !0
        }]
    }), o(function() {
        $(document).ready(function() {
            $("pre code").each(function(e, t) {
                hljs.highlightBlock(t)
            })
        })
    })) : i.go("editor")
}]), angular.module("sdlctoolApp").controller("EditExcel", ["$scope", "$uibModalInstance", function(e, t) {
    e.config = {}, e.config.statusValues = !0, e.cancel = function() {
        t.dismiss("cancel")
    }, e.confirm = function() {
        t.close(e.config)
    }
}]), angular.module("sdlctoolApp").controller("ModalAlertController", ["$scope", "$uibModalInstance", "$window", "headerText", "message", "type", function(a, e, t, n, o, i) {
    a.confirm = function() {
        e.close("confirm")
    }, a.modalInstance = e, a.$watch("modalInstance.opened.$$state.value", function(e, t, n) {
        e || a.confirm()
    }), a.reload = function() {
        t.location.reload()
    }, a.headerText = n, a.message = o, a.type = i
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("export", {
        parent: "site",
        url: "/export",
        data: {
            roles: ["ROLE_FRONTEND_USER", "ROLE_USER", "ROLE_ADMIN"]
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/editor/export/export.html",
                controller: "ExportController"
            }
        },
        resolve: {}
    })
}]), angular.module("sdlctoolApp").controller("ExportController", ["$scope", "apiFactory", "sharedProperties", "$uibModalStack", "$uibModalInstance", "$timeout", "appConfig", "authenticatorService", "$uibModal", "$interval", "$q", "SDLCToolExceptionService", "$filter", "$confirm", "$window", "Helper", "checkAuthentication", "JiraService", function(s, l, e, t, n, a, o, i, r, c, d, u, p, m, g, h, f, v) {
    function y(e) {
        s.apiUrl = {}, s.apiUrl.ticketKey = [], angular.extend(s.apiUrl, h.buildJiraUrl(e)), 1 === s.apiUrl.ticketKey.length && (s.checks.isTicket = !0)
    }

    function b(e, t) {
        var n, a = "";
        500 !== e.status && (0 === e.errorException.opened.$$state.status && (e.errorException.opened.$$state.value = !1, e.errorException.opened.$$state.status = 1), 404 === parseInt(e.status) ? (n = s.jiraUrl.url.split("/").pop(), s.exportProperty.issuelink = "disabled", a = "No se pudo vincular el Issue. Esto puede ocurrir cuando la vinculaciÃ³n entre el Issue " + s.exported.ticket.url + " y " + s.jiraUrl.url.slice(0, s.jiraUrl.url.indexOf(n)) + t + " esta desactivada.", u.showWarning("Enlace de Issue invalido", a, u.DANGER)) : 401 === e.status && (s.exportProperty.issuelink = "permission", a = "No se pudo vincular el Issues. No tienes permiso para vincular Issues.", u.showWarning("Enlace de Issue invalido", a, u.DANGER)))
    }

    function C(e, o, i) {
        s.jiraAlternatives.mandatoryFields = [];
        var t = s.buildUrlCall("ticket") + "/createmeta?projectKeys=" + e.projectKey;
        angular.isDefined(e.issuetypeName) && (t += "&issuetypeNames=" + e.issuetypeName), t += "&expand=projects.issuetypes.fields";
        var r = ["date", "datetime"];
        l.getJIRAInfo(t).then(function(e) {
            angular.forEach(e.projects, function(e) {
                angular.forEach(e.issuetypes[0].fields, function(t, n) {
                    var a, e = d.defer(); - 1 !== i.indexOf(n) || -1 !== o.indexOf(n) || angular.equals(t.schema.type, "array") && 1 === t.operations.length && -1 !== t.operations.indexOf("set") || angular.equals(t.schema.type, "any") || (angular.isDefined(t.allowedValues) && (0 < t.allowedValues.length ? a = t.allowedValues : e.reject(!1), angular.equals(t.schema.type, "array") && (s.fields[n] = [])), -1 !== r.indexOf(t.schema.type) && (s.datePicker[n] = {}, s.datePicker[n].opened = !1, s.fields[n] = new Date), e.resolve(!0), e.promise.then(function() {
                        var e = t.autoCompleteUrl;
                        angular.isDefined(e) && -1 !== e.indexOf("=null") && (e = void 0), s.jiraAlternatives.mandatoryFields.push({
                            key: n,
                            name: t.name,
                            type: t.schema.type,
                            schemaCustom: t.schema.custom,
                            itemType: t.schema.items,
                            values: a,
                            configurable: (!s.selection.createTickets || "labels" !== n) && !t.required,
                            mandatory: !(!s.selection.createTickets || "labels" !== n) || t.required,
                            required: t.required,
                            autoCompleteUrl: e
                        })
                    }))
                })
            })
        })
    }

    function w() {
        s.checks.isTicket ? s.sendAttachment() : s.createTicket(s.fields, !0).then()
    }

    function k() {
        angular.isDefined(s.exported.ticket.url) && "" === s.ticketURL ? s.ticketURL = s.exported.ticket.url : s.selection.jira && "" !== s.ticketURL && (s.exported.ticket = {}, s.exported.ticket.url = s.ticketURL, s.exported.ticket.key = s.apiUrl.ticketKey[0]);
        var e = angular.copy(s.exported);
        return angular.forEach(e.requirements, function(e) {
            e.tickets = s.getTicketValue(e)
        }), h.buildYAMLFile(e)
    }
    s.jiraUrl = {}, s.checks = {}, s.extension = {}, s.fields = {}, s.apiUrl = {}, s.jiraAlternatives = {}, s.exportProperty = {
        promise: {},
        urlPlaceholder: "e.g. https://your-jira.url/browse/YOURPROJECT"
    }, s.jiraStatus = {}, s.issueLinkObject = {}, s.selection = {
        file: !1,
        jira: !0,
        createTickets: !1
    }, s.ticketURL = "", s.backupUrl = "", s.label = {}, s.ticketsToLink = [], s.datePicker = {}, s.autoComplete = {}, s.toggleAutoCompleteDropdown = {}, s.tempMandatoryValue = [], s.init = function() {
        s.manFilterObject = {}, s.extension = "yaml", angular.extend(s.exportProperty, {
            fail: !1,
            showSpinner: !1,
            failed: "",
            authenticating: !1
        }), s.exported = e.getProperty(), s.selection.createTickets && angular.isDefined(s.exported.defaultJIRAHost) && "" !== s.exported.defaultJIRAHost.trim() ? (s.exportProperty.urlPlaceholder = "e.g. YOURPROJECT or https://your-jira.url/browse/YOURPROJECT", s.exportProperty.defaultJIRAHost = s.exported.defaultJIRAHost) : s.jiraUrl.url = s.exported.defaultJIRAUrl, s.jiraAlternatives.issueTypes = [], s.jiraAlternatives.projects = [], s.jiraAlternatives.mandatoryFields = [], s.jiraStatus.allStatus = [], s.ticketURLs = [], s.checks.url = {
            pattern: urlpattern.javascriptStringRegex,
            errorMessage: "Invalid URL. Please specify URL like https://www.example-jira.com/browse/DUMBQ",
            createTicketURLErrorMessage: "Invalid Queue or URL. Please specify URL like https://www.example-jira.com/browse/DUMBQ or Queue like DUMBQ"
        }, angular.extend(s.checks, {
            isNotProject: !1,
            issueKey: !1,
            isQueue: !1,
            isTicket: !1,
            exporting: !1
        }), void 0 === s.exported.ticket.url || s.selection.createTickets || (s.jiraUrl.url = s.exported.ticket.url)
    }, s.initcreateTicket = function() {
        s.selection.jira = !1, s.selection.createTickets = !0, s.init()
    }, s.validateURLQueueValue = function(e) {
        return h.validateURLQueueValue(e)
    }, s.removeLabel = function(e) {
        e = s.fields.labels.indexOf(e); - 1 !== e && s.fields.labels.splice(e, 1)
    }, s.addLabel = function(e) {
        "" !== e && void 0 !== e && s.fields.labels.push(e.replace(" ", "_")), s.label.labelValue = ""
    }, s.initLabels = function() {
        var e;
        s.fields.labels = [], s.selection.jira && o.summaryPrefix && (s.fields.labels = [o.summaryPrefix.trim().replace(/\s/g, "_")]), s.selection.createTickets && o.summaryPrefix && (e = o.summaryPrefix.trim().replace(/\s/g, "_"), s.fields.labels = ["Â§prefixÂ§_REQUIREMENT".replace("Â§prefixÂ§", e)])
    }, s.fillDefaultValues = function() {
        s.fields.summary = o.summaryPrefix + " " + s.exported.name, s.fields.description = o.ticketDescription
    }, s.calDueDate = function(e, t) {
        s.datePicker[t].opened = !0
    }, s.close = function() {
        var e;
        s.selection.createTickets ? n.close(s.jiraStatus) : (e = {
            ticket: s.exported.ticket
        }, angular.isDefined(s.checks.hasReqTicket) && !s.checks.hasReqTicket && (e.hasReqTicket = s.checks.hasReqTicket), n.close(e))
    }, s.cancel = function() {
        i.cancelPromises(s.exportProperty.promise), s.exportProperty.showSpinner = !1, t.dismissAll("closing export")
    }, s.buildUrlCall = function(e) {
        return v.buildUrlCall(e, s.apiUrl)
    }, s.checkQueue = function(n, e, t) {
        var a = !1;
        l.getJIRAInfo(s.buildUrlCall("project")).then(function(e) {
            s.jiraAlternatives.projects = e;
            for (var t = 0; t < e.length; t++)
                if (angular.equals(e[t].key, n)) {
                    s.manFilterObject.projectKey = n, s.manFilterObject.issuetypeName = void 0, s.getIssueTypes(n), s.checks.isQueue = !0, s.checks.isNotProject = !1, a = !0, s.fields.project = {}, angular.extend(s.fields.project, {
                        key: n
                    });
                    break
                }
            a || (s.jiraUrl.url = s.apiUrl.cachedUrl, s.checks.isNotProject = !0, s.exportProperty.fail = !0, s.exportProperty.failed = "You have entered a wrong queue. Please select a valid queue and click on Export again.", s.alertType = "danger"), s.checks.exporting = !1
        }).catch(function() {})
    }, s.getIssueTypes = function(e) {
        s.jiraAlternatives.issueTypes = [];
        e = s.buildUrlCall("project") + "/" + e;
        l.getJIRAInfo(e).then(function(e) {
            angular.forEach(e.issueTypes, function(e) {
                e.subtask || s.jiraAlternatives.issueTypes.push(e)
            }), s.fields.issuetype = {
                name: s.jiraAlternatives.issueTypes[0].name
            }
        }, function() {})
    }, s.checkTicketAndSendAttachment = function() {
        l.getJIRAInfo(s.buildUrlCall("issueKey")).then(function(e) {
            s.checks.isTicket = !0, s.checks.exporting = !0, s.ticketURL = s.apiUrl.jiraUrl + "/browse/" + s.apiUrl.ticketKey[0], angular.isDefined(s.exported.ticket.url) ? angular.equals(s.exported.ticket.url, s.ticketURL) ? s.sendAttachment() : m({
                text: "Ya has exportado este artefacto en el Ticket " + s.exported.ticket.url + ". Are you sure you want to export into " + s.ticketURL,
                title: "Confirm",
                ok: "OK",
                cancel: "Cancel"
            }, {
                templateUrl: "scripts/app/editor/confirm-modal.html"
            }).then(function() {
                s.checkForTicketInReqSet()
            }, function() {
                s.checks.exporting = !1
            }) : 0 !== e.fields.attachment.length ? m({
                text: "This ticket already contains a Secure SDLC Artifact. Are you sure you want to export another one into " + s.ticketURL + "?",
                title: "Confirm",
                ok: "OK",
                cancel: "Cancel"
            }, {
                templateUrl: "scripts/app/editor/confirm-modal.html"
            }).then(function() {
                s.sendAttachment()
            }, function() {
                s.checks.exporting = !1
            }) : s.sendAttachment()
        }).catch(function(e) {
            s.checks.exporting = !1, 404 === e.status && (s.exportProperty.failed = "You have entered an invalid ticket. Please provide a valid one.", s.alertType = "danger", s.exportProperty.fail = !0)
        })
    }, s.requestAutoComplete = function(t) {
        s.autoComplete[t.key] = [], s.getHeight(t.key);
        var e = "";
        if (s.fields[t.key] && angular.isDefined(t.autoCompleteUrl)) {
            switch (t.type) {
                case "array":
                    "user" === t.itemType && (e = JSON.parse(s.fields[t.key][s.fields[t.key].length - 1]).name);
                    break;
                case "user":
                    e = s.fields[t.key].name
            }
            1 < e.length && l.getJIRAInfo(t.autoCompleteUrl.replace("/null/", "/") + e).then(function(e) {
                switch (t.type) {
                    case "array":
                        "user" === t.itemType && (s.autoComplete[t.key] = e.users, s.toggleAutoCompleteDropdown[t.key] = 0 < e.total);
                        break;
                    case "user":
                        s.autoComplete[t.key] = e, s.toggleAutoCompleteDropdown[t.key] = 0 < e.length
                }
            }, function() {
                angular.forEach(s.jiraAlternatives.mandatoryFields, function(e) {
                    angular.equals(e.key, t.key) && delete e.autoCompleteUrl
                })
            })
        }
    }, s.finishAutocomplete = function(e, t) {
        var n = {};
        switch (e.type) {
            case "array":
                "user" === e.itemType && ((n = JSON.parse(s.fields[e.key][s.fields[e.key].length - 1])).name = t), s.fields[e.key].pop(), s.fields[e.key].push(JSON.stringify(n));
                break;
            case "user":
                s.fields[e.key].name = t
        }
    }, s.$watch("fields.issuetype.name", function(e, t, n) {
        s.manFilterObject.projectKey = s.apiUrl.projectKey, s.manFilterObject.issuetypeName = e;
        var a = {};
        angular.extend(a, s.fields), s.fields = {}, angular.extend(s.fields, {
            description: a.description,
            summary: a.summary,
            project: a.project,
            issuetype: a.issuetype,
            labels: a.labels
        }), angular.isDefined(e) && C(s.manFilterObject, ["summary", "issuetype", "project", "reporter", "description"], ["attachment", "issuelinks"])
    }), s.getHeight = function(e) {
        e = $(window).height() - ($("#" + e).offset().top - $(window).scrollTop()) - $("#" + e).height();
        s.maxHeight = e + "px"
    }, s.$watch("fields.project.key", function(e, t, n) {
        void 0 !== s.apiUrl.http && void 0 !== e && (s.apiUrl.projectkey = e, s.jiraUrl.url = s.apiUrl.jiraUrl + "/browse/" + e, s.backupUrl = s.jiraUrl.url)
    }), s.createTicket = function(e, t) {
        var n = d.defer(),
            a = {};
        angular.isDefined(e.req) && (angular.extend(a, e.req), delete e.req);
        for (var o = 0; o < s.jiraAlternatives.mandatoryFields.length && 0 < s.jiraAlternatives.mandatoryFields.length; o++) s.jiraAlternatives.mandatoryFields[o].mandatory || delete e[s.jiraAlternatives.mandatoryFields[o].key];
        angular.isDefined(e.timetracking) && (e.timetracking.remainingEstimate = s.fields.timetracking.originalEstimate);
        var i = {};
        return angular.extend(i, {
            fields: e
        }), l.postExport(s.buildUrlCall("ticket"), i, {
            "X-Atlassian-Token": "no-check",
            "Content-Type": "application/json"
        }).then(function(e) {
            void 0 !== e && (e.req = a, s.apiUrl.ticketKey = [], s.apiUrl.ticketKey.push(e.key), n.resolve(e), s.ticketURL = s.apiUrl.jiraUrl + "/browse/" + e.key, s.ticketURLs.push(s.ticketURL), t && (s.commentForTicketImport(), s.sendAttachment()))
        }).catch(function(e) {
            s.checks.exporting = !1, 400 === e.status && angular.forEach(e.data.errors, function(e, t) {
                for (var n = e.split(" "), a = "", o = 0; o < n.length; o++) a += encodeURI(n[o]) + " ";
                for (var i = 0; i < s.jiraAlternatives.mandatoryFields.length; i++) s.jiraAlternatives.mandatoryFields[i].key === t && (s.exportProperty.fail = !0, s.exportProperty.failed = "Value to field " + s.jiraAlternatives.mandatoryFields[i].name + " " + a, angular.isDefined(s.fields[t]) && (s.fields[t] = "")), angular.isDefined(s.tempMandatoryValue[s.jiraAlternatives.mandatoryFields[i].key]) && (s.fields[s.jiraAlternatives.mandatoryFields[i].key] = s.tempMandatoryValue[s.jiraAlternatives.mandatoryFields[i].key]), g.scrollTo(0, 0)
            })
        }), n.promise
    }, s.commentForTicketImport = function() {
        var e = {
            body: "Con el siguiente enlace, puede importar su artefacto directamente a la herramienta y seleccionar la versión más reciente. También puede usar este enlace para compartirlo con otros: " + (window.location.origin || window.location.protocol + "//" + window.location.hostname + (window.location.port ? ":" + window.location.port : "")) + "/?ticket=" + s.ticketURL
        };
        l.postExport(s.buildUrlCall("comment"), e, {
            "X-Atlassian-Token": "no-check",
            "Content-Type": "application/json"
        }).then(function() {})
    }, s.sendAttachment = function() {
        var e = k(),
            a = {};
        s.ticketAuthentication = {}, s.exported.ticket.apiUrl = s.apiUrl, s.exported.ticket.key = s.apiUrl.ticketKey[0], angular.forEach(s.ticketsToLink, function(t) {
            var e = t.split("/"),
                n = {};
            angular.extend(n, h.buildJiraUrl(e)), a[n.ticketKey[0]] = {}, a[n.ticketKey[0]].apiUrl = n, a[n.ticketKey[0]].url = t, a[n.ticketKey[0]].key = n.ticketKey[0], s.ticketAuthentication[n.ticketKey[0]] = {
                authenticatorProperty: {},
                promise: {},
                showSpinner: !1
            }, s.ticketAuthentication[n.ticketKey[0]].authenticatorProperty.url = t, s.ticketAuthentication[n.ticketKey[0]].authenticatorProperty.message = "In order to link this issue, you have to authenticated. Please click on the following link to authenticate yourself. You will have one minute after a click on the link.", s.ticketAuthentication[n.ticketKey[0]].promise.derefer = d.defer(), f.jiraAuth(v.buildUrlCall("issueKey", n), s.ticketAuthentication[n.ticketKey[0]].authenticatorProperty, s.ticketAuthentication[n.ticketKey[0]], s.ticketAuthentication[n.ticketKey[0]].promise).then(function(t) {
                a[t.key].fields = t.fields, v.addIssueLinks(s.exported.ticket, a[t.key]).then().catch(function(e) {
                    b(e, t.key)
                })
            }).catch(function(e) {
                u.showWarning("Ocurrio un problema", "El Issue " + t + " no se vinculÃ³ porque el usuario no estaba autenticado.", u.DANGER)
            })
        });
        e = v.addAttachmentAndComment(s.exported.ticket, {
            content: e,
            artifactName: s.exported.name
        });
        angular.isDefined(e) && e.then(function() {
            s.selection.jira && (s.close(), u.showWarning("ExportaciÃ³n exitosa", "El artefacto SDLC seguro" + s.exported.name + " fue exportado con Ã©xito a:\n" + s.ticketURL, u.SUCCESS))
        }).catch(function() {})
    }, s.checkForTicketInReqSet = function() {
        var e, t = [];
        angular.forEach(s.exported.requirements, function(e) {
            angular.isDefined(e.tickets) && 0 < e.tickets.length && t.push(e.shortName)
        }), 0 < t.length ? (e = "El Requerimiento " + t.toString(), m({
            text: e += " tienen tickets asociados a ellos. Â¿DeberÃ­an tomarse estas URL de boletos y vincularse al nuevo boleto?",
            title: "Confirm",
            ok: "Yes",
            cancel: "No"
        }, {
            templateUrl: "scripts/app/editor/confirm-modal.html"
        }).then(function() {
            angular.extend(s.checks, {
                hasReqTicket: !0
            }), w()
        }, function() {
            angular.extend(s.checks, {
                hasReqTicket: !1
            }), w()
        })) : w()
    }, s.confirm = function() {
        s.exportProperty.fail = !1;
        var e, t, r = s.checks.isTicket = !1;
        s.jiraUrl.url = v.buildJiraUrl(s.jiraUrl.url), s.selection.jira || s.selection.createTickets ? (s.exportProperty.authenticatorProperty = {
            url: s.jiraUrl.url,
            message: "No estÃ¡ autenticado, haga clic en el siguiente enlace para autenticarse. TendrÃ¡ un minuto despuÃ©s de hacer clic en el enlace."
        }, y(s.jiraUrl.url.split("/")), s.exportProperty.promise.derefer = d.defer(), f.jiraAuth(s.buildUrlCall("issueType"), s.exportProperty.authenticatorProperty, s.exportProperty, s.exportProperty.promise).then(function(e) {
            if (s.checks.exporting = !0, s.checks.isTicket && s.selection.jira) s.fields = {}, s.checkTicketAndSendAttachment();
            else if (s.checks.isTicket && s.selection.createTickets) s.exportProperty.fail = !0, s.exportProperty.failed = "You have entered a ticket. Please provide a queue.", s.checks.isQueue = !1, s.checks.exporting = !1;
            else if (1 < s.apiUrl.ticketKey.length) s.exportProperty.fail = !0, s.alertType = "danger", s.exportProperty.failed = "You have entered a invalid ticket. Please provide a valid ticket.", s.checks.exporting = !1;
            else {
                var t = ["summary", "issuetype", "reporter", "project", "description"],
                    n = ["attachment", "issuelinks"];
                if (angular.equals(s.jiraUrl.url.trim(), s.backupUrl) || (s.backupUrl = s.jiraUrl.url.trim(), s.fields = {}), angular.isUndefined(s.fields.project) || s.checks.isNotProject) s.checks.isQueue = !1, s.checkQueue(s.apiUrl.projectKey, t, n);
                else {
                    s.checks.isQueue = !0, s.manFilterObject.projectKey = s.fields.project.key, s.manFilterObject.issuetypeName = void 0, s.checks.isNotProject = !1, 0 === s.jiraAlternatives.mandatoryFields.length && C(s.manFilterObject, t, n), 0 === s.jiraAlternatives.issueTypes.length && s.getIssueTypes(s.fields.project.key);
                    for (var a = 0; a < s.jiraAlternatives.mandatoryFields.length; a++)
                        if (s.jiraAlternatives.mandatoryFields[a].mandatory) {
                            if (s.jiraAlternatives.mandatoryFields[a].required && (angular.isUndefined(s.fields[s.jiraAlternatives.mandatoryFields[a].key]) || angular.isDefined(s.fields[s.jiraAlternatives.mandatoryFields[a].key]) && s.fields[s.jiraAlternatives.mandatoryFields[a].key].length <= 0)) {
                                r = !0, u.showWarning("FallÃ³ la creaciÃ³n del ticket", "El campo <strong>" + s.jiraAlternatives.mandatoryFields[a].name + "</strong> no tiene valor o el dato es incorrecto. Verifiquelo.", u.DANGER);
                                break
                            }
                            if ("array" !== s.jiraAlternatives.mandatoryFields[a].type || s.jiraAlternatives.mandatoryFields[a].values) "datetime" === s.jiraAlternatives.mandatoryFields[a].type && (s.fields[s.jiraAlternatives.mandatoryFields[a].key] = p("date")(s.fields[s.jiraAlternatives.mandatoryFields[a].key], "yyyy-MM-dd'T'hh:mm:ss'.000'Z"));
                            else if ("string" !== s.jiraAlternatives.mandatoryFields[a].itemType) {
                                var o = 0,
                                    i = s.fields[s.jiraAlternatives.mandatoryFields[a].key];
                                for (s.fields[s.jiraAlternatives.mandatoryFields[a].key] = []; i[o];) s.fields[s.jiraAlternatives.mandatoryFields[a].key].push(JSON.parse(i[o])), o++
                            }
                        } else delete s.fields[s.jiraAlternatives.mandatoryFields[a].key];
                    r ? s.checks.exporting = !1 : s.selection.jira ? angular.isDefined(s.exported.ticket.url) ? m({
                        text: "Ya has exportado este artefacto en el Ticket " + s.exported.ticket.url + ". Â¿EstÃ¡ seguro de que desea exportar a un nuevo ticket en la cola(queue)?" + s.jiraUrl.url,
                        title: "Confirm",
                        ok: "OK",
                        cancel: "Cancel"
                    }, {
                        templateUrl: "scripts/app/editor/confirm-modal.html"
                    }).then(function(e) {
                        s.checkForTicketInReqSet()
                    }, function() {
                        s.checks.exporting = !1
                    }) : (angular.isUndefined(s.exported.ticket.url) || angular.equals(s.exported.ticket.url, "")) && s.createTicket(s.fields, !0).then() : s.selection.createTickets && s.createReqTickets()
                }
            }
        }, function() {
            s.exportProperty.authenticating = !1
        })) : s.selection.file && "yaml" === s.extension && (e = jsyaml.safeDump(k()), t = document.createElement("a"), angular.isDefined(t.download) ? (t.href = "data:application/x-yaml;charset=utf-8," + encodeURIComponent(e), t.download = o.filenamePrefix + "_" + s.exported.name + "_" + h.getDetailedCurrentDate() + ".yml", t.target = "_blank", document.body.appendChild(t), a(function() {
            t.click(), s.close()
        })) : (s.exportProperty.fail = !0, s.exportProperty.failed = "Export not supported by this browser use Firefox or Chrome"))
    }, s.createReqTickets = function() {
        s.numRequirementTicketToCreate = p("filter")(s.exported.requirements, {
            selected: !0
        }).length;
        var e = s.exported.ticket.url.split("/");
        s.exported.ticket.apiUrl = {}, angular.extend(s.exported.ticket.apiUrl, h.buildJiraUrl(e)), s.exportProperty.promise.derefer = d.defer(), s.exportProperty.authenticatorProperty.url = s.exported.ticket.url, f.jiraAuth(v.buildUrlCall("issueKey", s.exported.ticket.apiUrl), s.exportProperty.authenticatorProperty, s.exportProperty, s.exportProperty.promise).then(function(e) {
            s.exported.ticket.fields = e.fields, angular.forEach(p("orderBy")(p("filter")(s.exported.requirements, {
                selected: !0
            }), ["categoryOrder", "order"]), function(e) {
                var n = {};
                angular.extend(n, s.fields);
                s.exported.name.replace(" ", "_");
                n.description = "", n.req = e, n.summary = "", n.summary += "[" + s.exported.name + "] " + e.description + " (" + e.shortName + ")", n.description += "Category:\n", n.description += e.category + "\n\n", n.description += "Short name:\n", n.description += e.shortName + "\n\n", n.description += "Requirement description:\n", n.description += e.description + "\n", angular.forEach(p("orderBy")(e.optionColumns, "showOrder"), function(e) {
                    n.description += "\n" + e.name + ":\n", angular.forEach(e.content, function(e) {
                        n.description += h.removeMarkdown(e.content, "export"), n.description += "\n"
                    })
                }), angular.forEach(e.statusColumns, function(t) {
                    angular.forEach(p("orderBy")(s.exported.statusColumns, "showOrder"), function(e) {
                        e.id === t.id && (n.description += "\n" + e.name + "\n", n.description += t.value, n.description += "\n")
                    })
                }), s.createTicket(n, !1).then(function(e) {
                    var r;
                    r = e, l.getJIRAInfo(r.self).then(function(i) {
                        angular.forEach(p("filter")(s.exported.requirements, {
                            selected: !0
                        }), function(e) {
                            if (e.id === r.req.id && e.shortName === r.req.shortName) {
                                var t = {};
                                t.url = s.jiraUrl.url + "-" + i.key.split("-").pop(), t.apiUrl = h.buildJiraUrl(t.url.split("/")), t.apiUrl.ticketKey = [], t.apiUrl.ticketKey.push(i.key), t.apiUrl.projectKey = i.fields.project.key, t.fields = i.fields, t.key = i.key, e.tickets.push(t.url), s.numRequirementTicketToCreate--;
                                var n = {
                                    iconUrl: i.fields.status.iconUrl,
                                    name: i.fields.status.name,
                                    summary: i.fields.summary,
                                    issueKey: i.key,
                                    url: t.url
                                };
                                if (e.linkStatus.ticketStatus.push(n), 0 === p("filter")(s.jiraStatus.allStatus, {
                                        name: n.name
                                    }).length && s.jiraStatus.allStatus.push(n), v.addIssueLinks(s.exported.ticket, t).then().catch(function(e) {
                                        b(e, t.key)
                                    }), 0 === s.numRequirementTicketToCreate) {
                                    y(s.exported.ticket.url.split("/")), s.sendAttachment();
                                    for (var a = "\n", o = 0; o < s.ticketURLs.length; o++) a += s.ticketURLs[o], a += "\r\n";
                                    s.close(), u.showWarning("CreaciÃ³n de tickets exitosa", "Los siguientes tickets fueron creados exitosamente: " + a, u.SUCCESS)
                                }
                            }
                        })
                    })
                })
            })
        }).catch(function() {
            s.checks.exporting = !1, s.exportProperty.authenticating = !1
        })
    }, s.getTicketValue = function(e) {
        return angular.isUndefined(s.checks.hasReqTicket) ? e.tickets : s.checks.hasReqTicket ? s.checks.hasReqTicket ? (0 < e.tickets.length && (s.ticketsToLink = s.ticketsToLink.concat(e.tickets)), e.tickets) : void 0 : (e.tickets = [], [])
    }
}]), angular.module("sdlctoolApp").controller("customRequirementController", ["$scope", "$location", "$uibModalInstance", "crObject", "$filter", "appConfig", function(i, e, a, t, n, o) {
    i.crObject = t, i.requirement = {}, i.categories = n("orderBy")(i.crObject.filterCategory, "showOrder"), i.requirement.optionColumns = [], i.requirement.tagInstances = [], i.statValue = {}, i.status = {
        add: !1,
        edit: !1
    }, i.setOptionColumns = function() {
        angular.forEach(i.crObject.optionColumns, function(e) {
            i.value = {
                content: [{
                    id: 0,
                    content: ""
                }],
                name: e.name,
                showOrder: e.id
            }, i.requirement.optionColumns.push(i.value)
        })
    }, i.setShortName = function() {
        0 <= i.crObject.shortnameIndex && i.crObject.shortnameIndex < 10 ? i.requirement.shortName = o.customRequirement + "0" + i.crObject.shortnameIndex.toString() : 10 <= i.crObject.shortnameIndex && i.crObject.shortnameIndex < 100 && (i.requirement.shortName = o.customRequirement + i.crObject.shortnameIndex.toString())
    }, i.setStatusColumn = function() {
        var o = [];
        angular.forEach(i.crObject.statusColumns, function(e) {
            var t, n, a;
            e.isEnum ? (t = 1e3, angular.forEach(e.values, function(e) {
                e.showOrder < t && (t = e.showOrder, n = e.name, a = e.id, i.statValue.value = e)
            }), o.push({
                id: e.id,
                value: n,
                isEnum: e.isEnum,
                valueId: a
            })) : o.push({
                id: e.id,
                value: "",
                isEnum: e.isEnum
            })
        }), i.requirement.statusColumns = o
    }, i.init = function() {
        angular.isUndefined(i.crObject.requirements) ? (i.setStatusColumn(), i.setOptionColumns(), i.setShortName(), i.requirement.categoryId = i.categories[0].id, i.status.add = !0) : (i.status.edit = !0, i.requirement = {}, i.req = {}, angular.extend(i.requirement, i.crObject.requirements[0]), angular.extend(i.req, i.crObject.requirements[0]), i.getStatusColumn())
    }, i.getStatusColumn = function() {
        angular.forEach(i.requirement.statusColumns, function(t) {
            t.isEnum && angular.forEach(i.crObject.statusColumns, function(e) {
                e.isEnum && t.id === e.id && angular.forEach(e.values, function(e) {
                    t.valueId === e.id && (i.statValue.value = e)
                })
            })
        })
    }, i.selectRequirement = function(t) {
        angular.forEach(i.crObject.requirements, function(e) {
            e.id === t && (angular.extend(i.requirement, e), i.getStatusColumn())
        })
    }, i.selectStatusValue = function(t, n) {
        angular.forEach(i.requirement.statusColumns, function(e) {
            e.id === t && (e.value = n.name, e.valueId = n.id)
        })
    }, i.cancel = function() {
        a.dismiss("cancel")
    }, i.updateOptColumns = function() {
        angular.forEach(i.requirement.optionColumns, function(e) {
            angular.forEach(e.content, function(e) {
                -1 === e.content.indexOf(">") && -1 === e.content.indexOf("<") || (e.content = _.escape(e.content))
            })
        })
    }, i.close = function() {
        var e, t = -1,
            n = 0;
        angular.forEach(i.categories, function(e) {
            t++, e.id === i.requirement.categoryId && (i.requirement.categoryOrder = e.showOrder, i.requirement.category = e.label, i.requirement.order = e.lastElemOrder + 10, n = t)
        }), e = {
            requirement: i.requirement,
            categoryIndex: n
        }, a.close(e)
    }
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("import", {
        parent: "site",
        url: "/import",
        data: {
            roles: ["ROLE_FRONTEND_USER", "ROLE_USER", "ROLE_ADMIN"]
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/editor/import/import-modal.html",
                controller: "ImportController"
            }
        },
        resolve: {}
    })
}]), angular.module("sdlctoolApp").controller("ImportController", ["$scope", "$location", "$uibModalStack", "sharedProperties", "getRequirementsFromImport", "Helper", "checkAuthentication", "apiFactory", "$filter", "authenticatorService", "SDLCToolExceptionService", "$timeout", "appConfig", "$q", "$uibModal", "localStorageService", "JiraService", function(l, a, e, i, t, r, o, s, c, d, u, p, m, g, n, h, f) {
    function v(e) {
        l.apiUrl = {}, l.apiUrl.ticketKey = [], angular.extend(l.apiUrl, r.buildJiraUrl(e))
    }
    l.status = {
        file: !1,
        jira: !1
    }, l.importObject = {}, l.uploadFail = !1, l.failMessage = "", l.selectedAlternativeSets = [], l.requirements = [], l.lastRequirementId = 0, l.optionColumns = [], l.filterCategory = [], l.statusColumns = [], l.jiraLink = {}, l.apiUrl = {}, l.name = "", l.importProperty = {
        spinner: {},
        promise: {},
        importing: !1,
        authenticating: !1,
        defaultJIRAHost: m.defaultJIRAHost,
        jiraTicketInputPlaceholder: m.defaultJIRAHost ? "e.g. TEST-01 or https://your-jira.url/browse/YOURPROJECT-123" : "e.g. https://your-jira.url/browse/YOURPROJECT-123"
    }, l.checks = {
        url: {
            pattern: urlpattern.javascriptStringRegex,
            errorMessage: "The entered URL is invalid. Please provide a valid URL"
        }
    }, l.attachmentProperties = {};

    function y(e) {
        return (void 0 !== a.search().file || void 0 !== e) && void 0 === a.search().ticket
    }

    function b(e) {
        var r = !1,
            s = {};
        angular.forEach(e, function(o) {
            var i = 0;
            angular.forEach(o.requirements, function(n) {
                0;
                var t = [];
                s[n.id] = {}, angular.forEach(n.optColumns, function(e) {
                    angular.forEach(e.content, function(e) {
                        var t;
                        void 0 !== e.setId && (t = e.content.split("**\n\n"), s[n.id][e.id] = {
                            title: t[0] + "**",
                            body: t[1]
                        }, -1 === l.selectedAlternativeSets.indexOf(e.setId) && l.selectedAlternativeSets.push(e.setId))
                    }), t.push({
                        content: e.content,
                        name: e.name,
                        showOrder: e.showOrder
                    })
                });
                var a = [];
                angular.forEach(n.statusColumns, function(t) {
                    t.isEnum && angular.isDefined(t.valueId) ? a.push({
                        id: t.id,
                        isEnum: t.isEnum,
                        value: t.value,
                        valueId: t.valueId
                    }) : t.isEnum && angular.isUndefined(t.valueId) ? angular.forEach(l.statusColumns, function(e) {
                        angular.forEach(e.values, function(e) {
                            angular.equals(e.name, t.value) && a.push({
                                id: t.id,
                                isEnum: t.isEnum,
                                value: t.value,
                                valueId: e.id
                            })
                        })
                    }) : t.isEnum || a.push({
                        id: t.id,
                        isEnum: t.isEnum,
                        value: t.value
                    })
                });
                var e = [];
                angular.isDefined(n.tickets) ? (angular.copy(n.tickets, e), n.tickets = [], n.tickets = e, 0 < n.tickets.length && (r = !0)) : angular.isDefined(n.ticket) && !angular.equals(n.ticket, "") && (r = !0, e.push(n.ticket)), l.requirements.push({
                    id: n.id,
                    category: o.category,
                    categoryId: o.categoryId,
                    shortName: n.shortName,
                    universalId: n.universalId,
                    tickets: e,
                    description: n.description,
                    categoryOrder: o.categoryOrder,
                    order: n.showOrder,
                    optionColumns: t,
                    collectionInstances: n.collectionInstances,
                    statusColumns: a,
                    tagInstances: n.tagInstances,
                    selected: !1,
                    linkStatus: {
                        link: !0,
                        ticketStatus: []
                    },
                    isNew: !1,
                    isOld: !1,
                    applyUpdate: " "
                }), n.showOrder > i && (i = n.showOrder), n.id > l.lastRequirementId && (l.lastRequirementId = n.id)
            }), l.filterCategory.push({
                id: o.categoryId,
                showOrder: o.categoryOrder,
                label: o.category,
                lastElemOrder: i
            })
        }), angular.extend(l.importObject, {
            newStyleAlternativeInstances: s,
            requirement: l.requirements,
            filterCategory: l.filterCategory,
            selectedAlternativeSets: l.selectedAlternativeSets,
            lastId: l.lastRequirementId,
            hasIssueLinks: r
        }), t.setProperty(l.importObject).then(function() {
            l.close()
        })
    }

    function C(e) {
        l.name = e.name;
        var o = [],
            t = [];
        angular.forEach(e.collections, function(e) {
            var n = [],
                a = void 0;
            angular.forEach(e.values, function(e) {
                var t = function(e) {
                    if (l.collections)
                        for (var t = 0; t < l.collections.length; t++)
                            for (var n = l.collections[t], a = 0; a < n.collectionInstances.length; a++) {
                                var o = n.collectionInstances[a];
                                if (o.id === e) return {
                                    categoryId: n.id,
                                    categoryName: n.name,
                                    instanceName: o.name
                                }
                            }
                    return
                }(e.collectionInstanceId);
                t && (a = {
                    name: t.categoryName,
                    id: t.categoryId
                }), n.push({
                    type: t ? t.instanceName : e.type,
                    collectionInstanceId: e.collectionInstanceId
                })
            }), t.push({
                categoryName: a ? a.name : e.categoryName,
                values: n
            })
        }), angular.forEach(e.projectType, function(t) {
            var n = [],
                a = [];
            angular.forEach(l.projectTypes, function(e) {
                t.projectTypeId === e.id && (n = e.optionColumns, a = e.statusColumns, l.statusColumns = e.statusColumns)
            }), l.optionColumns = n, o.push({
                projectTypeId: t.projectTypeId,
                name: t.projectTypeName,
                optsColumn: n,
                statsColumn: a
            })
        });
        var n = e.ticket;
        (angular.isUndefined(n) || angular.isDefined(n) && $.isEmptyObject(n)) && l.status.jira && angular.isDefined(l.jiraLink.url) && (n = {
            url: l.jiraLink.url,
            key: r.buildJiraUrl(l.jiraLink.url.split("/")).ticketKey[0]
        });
        e = {
            name: e.name,
            ticket: n,
            generatedOn: e.generatedOn,
            lastChanged: e.lastChanged,
            project: o,
            colls: t
        };
        i.setProperty(e)
    }
    l.init = function() {
        l.status.jira = !0, p(function() {
            $("#jiraLink").focus()
        }, 500);
        var e = i.getProperty();
        angular.extend(l.attachmentProperties, {
            attachments: [],
            hasAttachments: !1,
            selectedAttachment: ""
        }), angular.extend(l.jiraLink, {
            url: "",
            backupUrl: ""
        });
        var n = void 0;
        e instanceof String && (n = e), "RESTORE" == n ? (l.status.jira = !1, l.importProperty.importing = !0, angular.extend(l.importProperty.spinner, {
            showSpinner: !1
        }), s.getAll("collections").then(function(e) {
            l.collections = e
        }, function() {}), s.getAll("projectTypes").then(function(e) {
            l.projectTypes = c("orderBy")(e, "showOrder");
            e = h.get(m.localStorageKey), e = new Blob([e]);
            l.readYamlFileFromLocalStorage(e)
        }, function() {})) : (angular.extend(l.importProperty.spinner, {
            showSpinner: !1
        }), y(n) && (l.status.jira = !1), s.getAll("collections").then(function(e) {
            l.collections = e
        }, function() {}), s.getAll("projectTypes").then(function(e) {
            var t;
            l.projectTypes = c("orderBy")(e, "showOrder"), y(n) ? (t = void 0 !== n ? decodeURIComponent(n.toString()) : decodeURIComponent(a.search().file), re_weburl.test(t) ? (v(t.split("/")), l.importProperty.promise.derefer = g.defer(), r.addCheckAuthenticationModal(l.importProperty.promise), e = {
                url: l.apiUrl.http + "//" + l.apiUrl.host,
                message: "Attachment could not be imported because you are not authenticated. Please click on the following link to authenticate yourself. You will have one minute after a click on the link."
            }, o.jiraAuth(t, e, l.importProperty.spinner, l.importProperty.promise).then(function(e) {
                var t;
                void 0 !== (t = e).self ? (l.importProperty.importing = !0, l.importProperty.spinner.showSpinner = !1, d.cancelPromises(l.importProperty.promise), s.getJIRAInfo(t.content).then(function(e) {
                    e = new Blob([e], {
                        type: t.mimeType
                    });
                    l.readYamlFile(e)
                }, function() {})) : u.showWarning("ImportaciÃ³n fallida", "el parametro archivo en la URL de consulta, no es vÃ¡lido. Ingrese un ticket de JIRA vÃ¡lido con un archivo adjunto.", u.DANGER)
            }).catch(function(e) {
                l.importProperty.authenticating = !1, 404 === e.status && u.showWarning("Import unsuccessful", "No attachment with this id was found.", u.DANGER)
            })) : u.showWarning("ImportaciÃ³n fallida", "el parametro archivo de la URL de consulta no es vÃ¡lido.", u.DANGER)) : void 0 !== a.search().ticket && (l.jiraLink.url = a.search().ticket, l.status.jira = !0, l.uploadJira())
        }, function() {}))
    }, l.upload = function() {
        l.uploadFail = !1, l.status.file ? (l.importProperty.importing = !0, l.uploadFile()) : l.status.jira && l.uploadJira()
    }, l.validateURLTicketValue = function(e) {
        return r.validateURLTicketValue(e)
    }, l.uploadJira = function() {
        var e;
        l.jiraLink.url = f.buildJiraUrl(l.jiraLink.url), v(l.jiraLink.url.split("/")), 1 !== l.apiUrl.ticketKey.length ? (l.importProperty.importing = !1, l.uploadFail = !0, l.failMessage = "You have entered an invalid ticket URL.") : (l.importProperty.promise.derefer = g.defer(), e = {
            url: l.jiraLink.url,
            message: "No estÃ¡ autenticado, haga clic en el siguiente enlace para autenticarse. TendrÃ¡ un minuto despuÃ©s de hacer clic en el enlace."
        }, o.jiraAuth(f.buildUrlCall("issueType", l.apiUrl), e, l.importProperty.spinner, l.importProperty.promise).then(function() {
            l.importProperty.importing = !0, angular.equals(l.jiraLink.backupUrl, l.jiraLink.url) || (l.attachmentProperties = {}, angular.extend(l.attachmentProperties, {
                attachments: [],
                hasAttachments: !1,
                selectedAttachment: ""
            }), l.jiraLink.backupUrl = l.jiraLink.url.trim()), l.checkTicket()
        }).catch(function() {
            l.importProperty.authenticating = !1, l.importProperty.importing = !1
        }))
    }, l.checkTicket = function() {
        0 === l.attachmentProperties.attachments.length ? s.getJIRAInfo(f.buildUrlCall("issueKey", l.apiUrl)).then(function(e) {
            0 === e.fields.attachment.length ? (l.importProperty.importing = !1, u.showWarning("ImportaciÃ³n fallida", "No se encontraron archivos adjuntos en este ticket.", u.DANGER)) : 0 < e.fields.attachment.length && (l.attachmentProperties.attachments = c("orderBy")(l.buildAttachmentsArray(e.fields.attachment), "showOrder", !0), 1 === l.attachmentProperties.attachments.length ? l.getAttachment(l.attachmentProperties.attachments[0].downloadUrl) : 1 < l.attachmentProperties.attachments.length ? (l.attachmentProperties.selectedAttachment = l.attachmentProperties.attachments[0].downloadUrl, l.attachmentProperties.hasAttachments = !0, l.importProperty.importing = !1) : 0 === l.attachmentProperties.attachments.length && (l.importProperty.importing = !1, u.showWarning("Import unsuccessful", "There were no valid yaml attachments found in this ticket.", u.DANGER)))
        }, function(e) {
            l.importProperty.importing = !1, 404 === e.status && (l.uploadFail = !0, l.failMessage = "El ticket ingresado no es vÃ¡lido. Proporcione un ticket vÃ¡lido")
        }) : 1 < l.attachmentProperties.attachments.length && l.getAttachment(l.attachmentProperties.selectedAttachment)
    }, l.getAttachment = function(e) {
        "" !== e ? (e = decodeURIComponent(e), s.getJIRAInfo(e).then(function(e) {
            e = new Blob([e], {
                type: "application/x-yaml"
            });
            l.readYamlFile(e)
        }, function(e) {
            404 === e.status && (l.importProperty.importing = !1, u.showWarning("Import unsuccessful", "No attachment with this id was found.", u.DANGER))
        })) : l.importProperty.importing = !1
    }, l.buildAttachmentsArray = function(e) {
        var a = [];
        return angular.forEach(e, function(e) {
            var t, n;
            "application/x-yaml" === e.mimeType && e.size <= 5e6 && (t = c("date")(e.created, "medium"), n = (n = e.filename.split("_"))[n.indexOf(m.filenamePrefix) + 1], a.push({
                label: n + " created on: " + t,
                downloadUrl: e.content,
                showOrder: e.created
            }))
        }), a
    }, l.uploadFile = function() {
        l.uploadFail = !1;
        var e = document.getElementById("fileUpload");
        0 === e.files.length ? (l.failMessage = "Please select a File.", l.uploadFail = !0, l.importProperty.importing = !1) : 1 < e.files.length ? (l.importProperty.importing = !1, l.failMessage = "You can only upload one File.", l.uploadFail = !0) : (e = e.files[0], l.readYamlFile(e))
    }, l.readYamlFile = function(n) {
        var a, e = new FileReader;
        5e6 < n.size ? (l.importProperty.importing = !1, l.failMessage = "File limit 5MB exceeded.", l.uploadFail = !0) : (e.onload = function(e) {
            a = e.target.result;
            try {
                var t = jsyaml.safeLoad(a, {
                    filename: n.name
                });
                C(t), b(t.requirementCategories)
            } catch (e) {
                console.log(e), l.importProperty.importing = !1, u.showWarning("Import unsuccessful", "Yaml file could not be read please contact the developers.", u.DANGER)
            }
        }, e.readAsText(n))
    }, l.readYamlFileFromLocalStorage = function(n) {
        var a, e = new FileReader;
        5e6 < n.size ? (l.failMessage = "File limit exceeded.", l.uploadFail = !0, l.importProperty.importing = !1) : (e.onload = function(e) {
            a = e.target.result;
            try {
                var t = jsyaml.safeLoad(a, {
                    filename: n.name
                });
                C(t), b(t.requirementCategories)
            } catch (e) {
                l.importProperty.importing = !1, u.showWarning("Restore unsuccessful", "Something wrent wrong restoring your session. Please import a valid one from Jira or create a new artifact.", u.DANGER)
            }
        }, e.readAsText(n))
    }, l.cleanAll = function() {
        d.cancelPromises(l.importProperty.promise), l.importProperty.spinner.showSpinner = !1
    }, l.cancel = function() {
        l.cleanAll(), e.dismissAll("cancel")
    }, l.close = function() {
        a.path("/requirements"), l.cleanAll()
    }
}]), angular.module("sdlctoolApp").controller("AuthenticatorController", ["$scope", "$uibModalInstance", "$timeout", "jira", function(e, t, n, a) {
    e.jira = a, e.cancel = function() {
        t.dismiss("cancel")
    }, e.close = function() {
        t.close("closed")
    }
}]), angular.module("sdlctoolApp").controller("removeCustomRequirementController", ["$scope", "customRequirements", "$uibModalInstance", function(t, e, n) {
    t.customRequirements = e, t.init = function() {
        t.itemToRemove = t.customRequirements[0]
    }, t.selectRequirement = function(e) {
        t.itemToRemove = e
    }, t.cancel = function() {
        n.dismiss("cancel")
    }, t.close = function() {
        n.close(t.itemToRemove)
    }
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("febrowse", {
        abstract: !0,
        parent: "site"
    })
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("ferequirementSkeleton", {
        parent: "febrowse",
        url: "/reqId",
        data: {
            roles: ["ROLE_USER", "ROLE_FRONTEND_USER", "ROLE_ADMIN"],
            pageTitle: "Browse requirements"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/febrowse/ferequirementSkeleton/ferequirementSkeletons.html",
                controller: "FeRequirementSkeletonController"
            }
        },
        resolve: {}
    }).state("ferequirementSkeleton.detail", {
        parent: "ferequirementSkeleton",
        url: "/{id}",
        data: {
            roles: ["ROLE_USER", "ROLE_FRONTEND_USER", "ROLE_ADMIN"],
            pageTitle: "Browse requirement"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/febrowse/ferequirementSkeleton/ferequirementSkeleton-detail.html",
                controller: "FeRequirementSkeletonDetailController"
            }
        },
        resolve: {
            entity: ["$stateParams", "apiFactory", "$state", function(e, t, n) {
                return t.getAll("requirementSkeletons/" + e.id).then(function(e) {
                    return e
                })
            }]
        }
    })
}]), angular.module("sdlctoolApp").controller("FeRequirementSkeletonController", ["$scope", "$filter", "sharedProperties", "apiFactory", "$document", "$uibModal", "ProgressBar", function(r, e, t, n, o, a, i) {
    r.requirementSkeletons = [], r.tagCategories = [], r.collCategories = [], r.dropdowns = {}, r.tagInstances = [], r.projectTypes = [], r.collectionsInstances = [], r.selectedCategory = [], r.selectedTags = [], r.selectedTypes = [], r.selectedColls = [], r.numberToDisplay = 10, r.length = 1e3, r.progressbar = {
        hide: !0,
        barValue: 0,
        intervalPromise: void 0,
        showContent: !1
    }, r.selectedCategorySettings = {
        smartButtonMaxItems: 2,
        showCheckAll: !1,
        showUncheckAll: !1,
        displayProp: "name",
        idProp: "id",
        externalIdProp: ""
    }, r.typeLabelText = {
        buttonDefaultText: "Implementation Types"
    }, r.loadAll = function() {
        i.startProgressbar(r.progressbar), n.getAll("requirementSkeletons").then(function(e) {
            r.requirementSkeletons = e, r.length = r.requirementSkeletons.length, i.finishProgressbar(r.progressbar)
        }), n.getAll("projectTypes").then(function(e) {
            r.projectTypes = e
        }), n.getAll("tags").then(function(e) {
            r.tagCategories = e
        }), n.getAll("collections").then(function(e) {
            r.collCategories = e
        }), r.dropdowns.tag = {
            buttonText: "Tags",
            open: !1,
            defaultText: "Tags"
        }, r.dropdowns.coll = {
            buttonText: "Collections",
            open: !1,
            defaultText: "Collections"
        }
    }, r.loadAll(), r.loadMore = function() {
        r.numberToDisplay + 50 < r.length ? r.numberToDisplay += 50 : r.numberToDisplay = r.length
    }, r.openFeedback = function(e) {
        t.setProperty(e), a.open({
            size: "lg",
            backdrop: "static",
            templateUrl: "scripts/app/editor/feedback/feedback.html",
            controller: "FeedbackController"
        }).result.then()
    }, r.toggleDropdown = function(a, e) {
        var t = ["tag", "coll"];
        if (t.splice(t.indexOf(a), 1), r.dropdowns[a].open) r.dropdowns[a].open = !1;
        else {
            o.on("click", function(e) {
                for (var t = e.target.parentElement, n = !1; angular.isDefined(t) && null !== t && !n;) angular.equals(t.id, "multiselect-parent") && !n && (n = !0), t = t.parentElement;
                n || r.$apply(function() {
                    r.dropdowns[a].open = !1
                })
            });
            for (var n = 0; n < t.length; n++) r.dropdowns[t[n]].open = !1;
            r.dropdowns[a].open = !0
        }
    }, r.selectTagInstance = function(e, t, n) {
        for (var a = !1, o = 0, i = 0; i < r[t].length; i++)
            if (r[t][i].id === e.id) {
                a = !0, o = i;
                break
            }
        if (a ? r[t].splice(o, 1) : r[t].push(e), 0 === r[t].length && (r.dropdowns[n].buttonText = r.dropdowns[n].defaultText), 0 < r[t].length) {
            for (r.dropdowns[n].buttonText = "", r.dropdowns[n].buttonText = r[t][0].name, i = 1; i < r[t].length && i < 2; i++) r.dropdowns[n].buttonText += ", " + r[t][1].name;
            2 < r[t].length && (r.dropdowns[n].buttonText += ",...")
        }
    }, r.isTagSelected = function(e, t) {
        for (var n = !1, a = 0; a < r[t].length; a++)
            if (r[t][a].id === e.id) {
                n = !0;
                break
            }
        return !!n
    }, r.refresh = function() {
        r.loadAll(), r.clear()
    }, r.clear = function() {
        r.requirementSkeleton = {
            universalId: null,
            shortName: null,
            description: null,
            showOrder: null,
            active: null,
            id: null
        }
    }
}]), angular.module("sdlctoolApp").controller("FeRequirementSkeletonDetailController", ["$scope", "$filter", "$rootScope", "entity", "apiFactory", "$window", function(n, t, e, a, o, i) {
    n.requirementSkeleton = a, n.optColumnContents = [], n.altInstances = [], n.tagCategories = [], n.collCategories = [], i.document.title = "Browse requirement [" + a.shortName + "]", angular.forEach(n.requirementSkeleton.collectionInstances, function(e) {
        0 === t("filter")(n.collCategories, {
            id: e.collectionCategory.id
        }).length && n.collCategories.push(e.collectionCategory)
    }), angular.forEach(n.requirementSkeleton.tagInstances, function(e) {
        0 === t("filter")(n.tagCategories, {
            id: e.tagCategory.id
        }).length && n.tagCategories.push(e.tagCategory)
    }), o.getAll("alternativeinstances").then(function(e) {
        angular.forEach(e, function(e) {
            e.requirementSkeleton.id === n.requirementSkeleton.id && n.altInstances.push(e)
        })
    }), o.getAll("optColumnContents").then(function(e) {
        angular.forEach(e, function(e) {
            e.requirementSkeleton.id === n.requirementSkeleton.id && n.optColumnContents.push(e)
        })
    }), e.$on("sdlctoolApp:requirementSkeletonUpdate", function(e, t) {
        n.requirementSkeleton = t
    })
}]), angular.module("sdlctoolApp").controller("FeedbackController", ["$scope", "apiFactory", "sharedProperties", "$filter", "appConfig", "authenticatorService", "$uibModalInstance", "$q", "SDLCToolExceptionService", "Helper", "checkAuthentication", function(i, r, e, s, l, t, c, d, u, p, m) {
    i.requirement = {}, i.requirement = e.getProperty(), i.fields = {}, i.feedbackProperty = {
        showSpinner: !1
    }, i.promise = {}, i.comment = "", i.init = function() {
        angular.extend(i.fields, {
            project: {
                key: l.reportJIRAQueue
            },
            summary: l.summaryForSuggestion,
            issuetype: {
                name: l.reportJIRAIssueType
            }
        })
    }, i.cancel = function() {
        c.dismiss("cancel"), t.cancelPromises(i.promise)
    }, i.close = function() {
        var e = l.reportJIRAHost + l.jiraApiIssueType,
            t = {
                url: l.reportJIRAHost + "/" + l.jiraBrowseUrlPathName + "/" + l.reportJIRAQueue,
                message: "No estÃ¡ autenticado, haga clic en el siguiente enlace para autenticarse. TendrÃ¡ un minuto despuÃ©s de hacer clic en el enlace."
            },
            n = l.reportJIRAHost + l.jiraApiPrefix,
            a = "Short name:\n";
        a += i.requirement.shortName + "\n\n", a += "Requirement description:\n", a += i.requirement.description + "\n", angular.forEach(s("orderBy")(i.requirement.optionColumns, "showOrder"), function(e) {
            a += "\n" + e.name + ":\n", angular.forEach(e.content, function(e) {
                a += p.removeMarkdown(e.content, "feedback"), a += "\n"
            })
        }), a += "\nSuggestion\n", a += i.comment, i.fields.description = a;
        var o = {
            fields: i.fields
        };
        i.promise.derefer = d.defer(), m.jiraAuth(e, t, i.feedbackProperty, i.promise).then(function() {
            r.postExport(n, o, {
                "X-Atlassian-Token": "no-check",
                "Content-Type": "application/json"
            }).then(function(e) {
                c.close();
                e = l.reportJIRAHost + "/browse/" + e.key;
                u.showWarning("Submit successful", "Your suggestion was send. You can check your suggestion here:\n " + e, u.SUCCESS)
            })
        })
    }
}]), angular.module("sdlctoolApp").factory("Training", ["$resource", "DateUtils", function(e, t) {
    return e("api/trainings/:id", {}, {
        query: {
            method: "GET",
            isArray: !0
        },
        get: {
            method: "GET",
            transformResponse: function(e) {
                return e = angular.fromJson(e)
            }
        },
        update: {
            method: "PUT"
        }
    })
}]), angular.module("sdlctoolApp").factory("TrainingSearch", ["$resource", function(e) {
    return e("api/_search/trainings/:query", {}, {
        query: {
            method: "GET",
            isArray: !0
        }
    })
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("slideTemplate", {
        parent: "entity",
        url: "/slideTemplates",
        data: {
            roles: ["ROLE_TRAINER", "ROLE_ADMIN"],
            pageTitle: "SlideTemplates"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/slideTemplate/slideTemplates.html",
                controller: "SlideTemplateController"
            }
        },
        resolve: {}
    }).state("slideTemplate.detail", {
        parent: "slideTemplate",
        url: "/slideTemplates/{id}",
        data: {
            roles: ["ROLE_TRAINER", "ROLE_ADMIN"],
            pageTitle: "SlideTemplate"
        },
        params: {
            isDirty: !1
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/slideTemplate/slideTemplate-detail.html",
                controller: "SlideTemplateDetailController"
            }
        },
        resolve: {
            entity: ["$stateParams", "SlideTemplate", function(e, t) {
                return t.get({
                    id: e.id
                })
            }]
        }
    }).state("slideTemplate.new", {
        parent: "slideTemplate",
        url: "/new",
        data: {
            roles: ["ROLE_TRAINER", "ROLE_ADMIN"]
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/slideTemplate/slideTemplate-detail.html",
                controller: "SlideTemplateDetailController"
            }
        },
        resolve: {
            entity: ["$stateParams", "SlideTemplate", function(e, t) {
                return t()
            }]
        }
    })
}]), angular.module("sdlctoolApp").controller("SlideTemplateController", ["$scope", "SlideTemplate", "SlideTemplateSearch", "$stateParams", function(t, n, e, a) {
    t.slideTemplates = [], t.loadAll = function() {
        n.query(function(e) {
            t.slideTemplates = e
        })
    }, t.loadAll(), t.delete = function(e) {
        n.get({
            id: e
        }, function(e) {
            t.slideTemplate = e, $("#deleteSlideTemplateConfirmation").appendTo("body").modal("show")
        })
    }, t.confirmDelete = function(e) {
        n.delete({
            id: e
        }, function() {
            t.loadAll(), $("#deleteSlideTemplateConfirmation").modal("hide"), t.clear()
        })
    }, t.search = function() {
        e.query({
            query: t.searchQuery
        }, function(e) {
            t.slideTemplates = e
        }, function(e) {
            404 === e.status && t.loadAll()
        })
    }, t.refresh = function() {
        t.loadAll(), t.clear()
    }, t.clear = function() {
        t.slideTemplate = {
            name: null,
            description: null,
            content: null,
            id: null
        }
    }
}]), angular.module("sdlctoolApp").controller("SlideTemplateDetailController", ["$scope", "$stateParams", "$state", "$timeout", "entity", "SlideTemplate", "marked", function(t, n, a, e, o, i, r) {
    t.slideTemplate = angular.isDefined(o) ? o : {}, t.load = function(e) {
        i.get({
            id: e
        }, function(e) {
            t.slideTemplate = e
        })
    };

    function s(e) {
        a.params.isDirty = !1, t.$emit("sdlctoolApp:slideTemplateUpdate", e), a.go("slideTemplate", null, {
            reload: !0
        })
    }
    t.save = function() {
        t.updateSlidePreview(!1, ""), null != t.slideTemplate.id ? i.update(t.slideTemplate, s) : i.save(t.slideTemplate, s)
    }, t.cancel = function() {
        a.params.isDirty = !1, a.go("slideTemplate", {})
    }, t.setDirty = function(e) {
        n.isDirty = e
    }, t.updateSlidePreview = function() {
        var e;
        angular.isDefined(t.slideTemplate.content) && (n.isDirty = !0, e = (e = t.slideTemplate.content).replace(/({{ *training.name *}})/g, "TrainingName").replace(/({{ *parent.name *}})/g, "ParentName"), document.getElementById("previewFrameId").contentWindow.postMessage(JSON.stringify({
            method: "updateSlide",
            args: [r(e)]
        }), "*"))
    }, e(function() {
        t.updateSlidePreview(), n.isDirty = !1
    }, 500)
}]), angular.module("sdlctoolApp").factory("SlideTemplate", ["$resource", "DateUtils", function(e, t) {
    return e("api/slideTemplates/:id", {}, {
        query: {
            method: "GET",
            isArray: !0
        },
        get: {
            method: "GET",
            transformResponse: function(e) {
                return e = angular.fromJson(e)
            }
        },
        update: {
            method: "PUT"
        }
    })
}]), angular.module("sdlctoolApp").factory("SlideTemplateSearch", ["$resource", function(e) {
    return e("api/_search/slideTemplates/:query", {}, {
        query: {
            method: "GET",
            isArray: !0
        }
    })
}]), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("training", {
        parent: "entity",
        url: "/trainings",
        params: {
            isDirty: !1
        },
        data: {
            roles: ["ROLE_TRAINER", "ROLE_ADMIN"],
            pageTitle: "Trainings"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/training/trainings.html",
                controller: "TrainingController"
            }
        },
        resolve: {}
    }).state("training.detail", {
        parent: "training",
        url: "/training/{id}",
        data: {
            roles: ["ROLE_TRAINER", "ROLE_ADMIN"],
            pageTitle: "Training"
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/training/training-detail.html",
                controller: "TrainingDetailController"
            }
        },
        resolve: {
            entity: ["$stateParams", "Training", function(e, t) {
                return t.get({
                    id: e.id
                })
            }]
        }
    }).state("training.generate", {
        parent: "training",
        abstract: "true",
        data: {
            roles: ["ROLE_TRAINER", "ROLE_ADMIN"]
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/training/training-generate.html",
                controller: "TrainingGenerateController"
            }
        },
        resolve: {
            entity: ["$stateParams", "Training", function(e, t) {
                return new t
            }],
            trainingRoot: ["TrainingTreeNode", function(e) {
                return new e
            }]
        }
    }).state("training.new", {
        parent: "training.generate",
        url: "/generate",
        data: {
            roles: ["ROLE_TRAINER", "ROLE_ADMIN"]
        },
        views: {
            "skeleton@training.generate": {
                templateUrl: "scripts/app/entities/training/nested-views/training-skeleton.html",
                controller: "TrainingSkeletonController"
            },
            "requirements@training.generate": {
                templateUrl: "scripts/app/entities/training/nested-views/training-requirements.html",
                controller: "TrainingRequirementsController"
            },
            "optcolumns@training.generate": {
                templateUrl: "scripts/app/entities/training/nested-views/training-content.html",
                controller: "TrainingContentController"
            },
            "customize@training.generate": {
                templateUrl: "scripts/app/entities/training/nested-views/training-customize.html",
                controller: "TrainingCustomizeController"
            }
        }
    }).state("training.edit", {
        parent: "training",
        url: "/{id}",
        abstract: "true",
        data: {
            roles: ["ROLE_TRAINER", "ROLE_ADMIN"]
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/training/training-edit.html",
                controller: "TrainingEditController"
            }
        },
        resolve: {
            entity: ["$stateParams", "Training", function(e, t) {
                return t.get({
                    id: e.id
                })
            }]
        }
    }).state("training.edit.state", {
        parent: "training.edit",
        url: "/edit",
        data: {
            roles: ["ROLE_TRAINER", "ROLE_ADMIN"]
        },
        views: {
            "skeleton@training.edit": {
                templateUrl: "scripts/app/entities/training/nested-views/training-skeleton.html",
                controller: "TrainingSkeletonController"
            }
        }
    }).state("training.editTree", {
        parent: "training",
        url: "/tree/{id}",
        abstract: "true",
        data: {
            roles: ["ROLE_TRAINER", "ROLE_ADMIN"]
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/training/training-editTree.html",
                controller: "TrainingEditTreeController"
            }
        },
        resolve: {
            entity: ["$stateParams", "Training", function(e, t) {
                return t.get({
                    id: e.id
                })
            }]
        }
    }).state("training.editTree.state", {
        parent: "training.editTree",
        url: "/edit",
        data: {
            roles: ["ROLE_TRAINER", "ROLE_ADMIN"]
        },
        views: {
            "customize@training.editTree": {
                templateUrl: "scripts/app/entities/training/nested-views/training-customize.html",
                controller: "TrainingCustomizeController"
            }
        }
    }).state("training.editSelection", {
        parent: "training",
        url: "/selection/{id}",
        abstract: "true",
        data: {
            roles: ["ROLE_TRAINER", "ROLE_ADMIN"]
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/training/training-editSelection.html",
                controller: "TrainingEditSelectionController"
            }
        },
        resolve: {
            entity: ["$stateParams", "Training", function(e, t) {
                return t.get({
                    id: e.id
                })
            }]
        }
    }).state("training.editSelection.state", {
        parent: "training.editSelection",
        url: "/edit",
        data: {
            roles: ["ROLE_TRAINER", "ROLE_ADMIN"]
        },
        views: {
            "requirements@training.editSelection": {
                templateUrl: "scripts/app/entities/training/nested-views/training-requirements.html",
                controller: "TrainingRequirementsController"
            },
            "optcolumns@training.editSelection": {
                templateUrl: "scripts/app/entities/training/nested-views/training-content.html",
                controller: "TrainingContentController"
            }
        }
    }), e.state("viewTraining", {
        parent: "site",
        url: "/training/{id}/view",
        data: {
            roles: ["ROLE_TRAINER", "ROLE_ADMIN"]
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/entities/training/training-view.html",
                controller: "TrainingViewController"
            }
        },
        onEnter: ["$state", "$stateParams", "$timeout", function(e, t, n) {
            var a = document.createElement("link");
            a.id = "theme", a.rel = "stylesheet", a.type = "text/css", a.href = "bower_components/revealjs/css/theme/black.css";
            var o = document.createElement("link");
            o.id = "pdf", o.rel = "stylesheet", o.type = "text/css", o.href = "bower_components/revealjs/css/print/paper.css";
            var i = document.createElement("link");
            i.id = "reveal", i.rel = "stylesheet", i.type = "text/css", i.href = "bower_components/revealjs/css/reveal.css", document.getElementsByTagName("head")[0].appendChild(i), document.getElementsByTagName("head")[0].appendChild(a), document.getElementsByTagName("head")[0].appendChild(o);
            for (var r = document.getElementsByTagName("link"), s = 0; s < r.length; s++) - 1 !== r[s].href.indexOf("main.css") && document.head.removeChild(r[s])
        }],
        onExit: function() {
            var e = document.createElement("link");
            e.id = "theme", e.rel = "stylesheet", e.type = "text/css", e.href = "/assets/styles/main.css", document.getElementsByTagName("head")[0].appendChild(e);
            var t = document.getElementById("theme"),
                n = document.getElementById("reveal"),
                e = document.getElementById("pdf");
            document.head.removeChild(t), document.head.removeChild(n), document.head.removeChild(e)
        },
        resolve: {
            entity: ["$stateParams", "Training", function(e, t) {
                return t.get({
                    id: e.id
                })
            }]
        }
    })
}]), angular.module("sdlctoolApp").controller("TrainingController", ["$scope", "$filter", "$state", "Training", "TrainingSearch", "TrainingTreeUtil", "TrainingTreeNode", "$uibModal", function(a, e, t, n, o, i, r, s) {
    a.trainings = [], a.today = e("date")(new Date, "mediumDate"), a.loadAll = function() {
        n.query(function(e) {
            a.trainings = e
        })
    }, a.loadAll(), a.delete = function(e) {
        n.get({
            id: e
        }, function(e) {
            a.training = e, $("#deleteTrainingConfirmation").appendTo("body").modal("show")
        })
    }, a.confirmDelete = function(t) {
        i.RootNodeOfTraining.query({
            id: t
        }).$promise.then(function(e) {
            r.delete(e).$promise.then(function() {
                n.delete({
                    id: t
                }, function() {
                    a.loadAll(), $("#deleteTrainingConfirmation").modal("hide"), a.clear()
                })
            })
        })
    }, a.search = function() {
        o.query({
            query: a.searchQuery
        }, function(e) {
            a.trainings = e
        }, function(e) {
            404 === e.status && a.loadAll()
        })
    }, a.refresh = function() {
        a.loadAll(), a.clear()
    }, a.clear = function() {
        a.training = {
            name: null,
            description: null,
            allRequirementsSelected: null,
            id: null
        }
    }, a.startPresentation = function(e) {
        window.open(t.href("viewTraining", {
            id: e
        }, "_blank"))
    }, a.checkUpdate = function(e) {
        i.RootNodeOfTraining.query({
            id: e
        }).$promise.then(function(e) {
            a.rootNode = e, i.CheckUpdate.query({
                id: e.id
            }).$promise.then(function(e) {
                e.hasUpdates ? a.openFeedbackModal("Structural updates found", "The structure of this training is not longer up to date. Do you want to apply the changes?", !0) : a.openFeedbackModal("No structural updates found", "The structure of this training is up to date. ", !1)
            })
        })
    }, a.openFeedbackModal = function(e, t, n) {
        a.feedback = {
            title: e,
            message: t,
            showUpdateButton: n,
            showProgressIndicator: !1
        }, a.feedbackModalInstance = s.open({
            size: "md",
            backdrop: "static",
            templateUrl: "scripts/app/entities/training/training-feedbackModal.html",
            scope: a
        })
    }, a.closeFeedbackModal = function(e) {
        e ? (a.feedback.showProgressIndicator = !0, i.ExecuteUpdate.save({
            id: a.rootNode.id
        }).$promise.then(function(e) {
            a.feedback.title = "Update finished", a.feedback.message = "The structure of this training has been updated successfully", a.feedback.showUpdateButton = !1, a.feedback.showProgressIndicator = !1
        })) : a.feedbackModalInstance.close()
    }
}]), angular.module("sdlctoolApp").controller("TrainingDetailController", ["$scope", "$rootScope", "$stateParams", "entity", "Training", "TrainingTreeNode", "OptColumn", "CollectionInstance", function(n, e, t, a, o, i, r, s) {
    n.training = a, n.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            n.training = e
        })
    }, e.$on("sdlctoolApp:trainingUpdate", function(e, t) {
        n.training = t
    })
}]), angular.module("sdlctoolApp").controller("TrainingGenerateController", ["$scope", "$rootScope", "$stateParams", "$state", "$interval", "$timeout", "$uibModal", "apiFactory", "entity", "trainingRoot", "Training", "TrainingTreeNode", function(a, t, e, n, o, r, s, l, c, d, u, p) {
    a.Training = c, t.trainingTreeData = [], a.trainingRoot = d, a.treeGenerated = !1, a.progressbar = {
        hide: !0,
        barValue: 0,
        intervalPromise: void 0
    }, a.modalProgressbar = {
        barValue: 0,
        intervalPromise: void 0
    }, a.activeStep = 1, a.showStep = function(e) {
        null != a.Training.name && 0 < a.Training.name.length ? a.activeStep = e : a.activeStep = 1, 4 === a.activeStep && a.updateNumberOfRequirements()
    }, a.startProgressbar = function() {
        a.progressbar.intervalPromise = o(function() {
            a.progressbar.barValue += 1
        }, 100, 95), a.progressbar.hide = !1
    }, a.finishProgressbar = function() {
        angular.isDefined(a.progressbar.intervalPromise) && (o.cancel(a.progressbar.intervalPromise), a.progressbar.intervalPromise = void 0), a.progressbar.barValue = 100, r(function() {
            for (a.progressbar.barValue = 0, a.progressbar.hide = !0, i = 1; i < 10; i++) id_next = "#step" + i + "div", $(id_next).fadeOut();
            $("#finishedBlock").css("visibility", "visible").fadeIn()
        }, 2500)
    };

    function m(e) {
        a.$emit("sdlctoolApp:trainingUpdate", e)
    }
    a.openSaveProgressModal = function() {
        a.modalProgressbar.intervalPromise = o(function() {
            a.modalProgressbar.barValue += 1
        }, 100, 99), a.progressModalTitle = "Saving to database", a.saveProgressModalInstance = s.open({
            size: "md",
            backdrop: "static",
            templateUrl: "scripts/app/entities/training/training-progressModal.html",
            scope: a
        })
    }, a.closeSaveProgressModal = function() {
        angular.isDefined(a.modalProgressbar.intervalPromise) && (o.cancel(a.modalProgressbar.intervalPromise), a.modalProgressbar.intervalPromise = void 0), a.modalProgressbar.barValue = 100, r(function() {
            n.params.isDirty = !1, a.saveProgressModalInstance.close(), n.go("training", null, {
                reload: !0
            })
        }, 2500)
    }, a.save = function() {
        var e = null != a.Training.id ? u.update(a.Training, m) : u.save(a.Training, m);
        e.$promise.then(function(e) {
            d.fromJSON(t.getTreeJSON()), d.json_training_id = e.id, a.openSaveProgressModal(), p.save(d).$promise.then(function() {
                a.closeSaveProgressModal()
            }, function() {
                a.closeSaveProgressModal(), console.error("tree save operation failed")
            })
        })
    };

    function g() {
        var e = d.addBranchNode("Outro");
        e.addCustomSlideNode("Title", "<h2>{{ parent.name }}</h2>"), e.addCustomSlideNode("Questions", "<h2>End of {{ training.name }}</h2>Please feel free to ask questions")
    }

    function h() {
        t.trainingTreeData[0] = p.JSON_to_JSTree(d), t.displayTree()
    }

    function f(e) {
        1 < e.length && e.sort(function(e, t) {
            return e.showOrder < t.showOrder ? -1 : e.showOrder > t.showOrder ? 1 : 0
        })
    }
    a.generate = function() {
        a.startProgressbar(), (d = new p).name = a.Training.name, d.node_type = "RootNode", d.sort_order = 0, d.opened = !0,
            function() {
                d.addCustomSlideNode("Title", "<h1>{{ training.name }}</h1>");
                var e = d.addBranchNode("Introduction");
                e.addCustomSlideNode("Title", "<h2>{{ parent.name }}</h2>"), e.addCustomSlideNode("Welcome", "<h2>Welcome to {{ training.name }}</h2>"), e.addCustomSlideNode("Who am I", "<h2>Who am I?</h2>\nJohn Doe, Security Analyst"), e.addCustomSlideNode("Portfolio", "<h2>John Doe</h2>\n<ul><li>Security Trainer</li>\n<li>Expert in Security</li>\n<li>Elite programmer</li></ul>")
            }();
        var e = t.buildQueryParams();
        "" != e ? l.getByQuery("categoriesWithRequirements", "filter", e).then(function(e) {
            f(e), a.requirementSkeletons = e;
            var t = d.addContentNode();
            e.forEach(function(e) {
                var n;
                null != e.requirements && 0 < e.requirements.length && ((n = t.addCategoryNode(e.name, {
                    id: e.id
                }, !1)).addCustomSlideNode("Title", "<h2>{{ parent.name }}</h2>"), f(e.requirements), e.requirements.forEach(function(e) {
                    var t = n.addRequirementNode(e, !1);
                    null != a.Training.optColumns && a.Training.optColumns.forEach(function(e) {
                        t.addGeneratedSlideNode(e)
                    })
                }))
            })
        }, function(e) {}).then(function() {
            g(), h(), a.finishProgressbar(), a.treeGenerated = !0
        }) : (g(), h(), a.finishProgressbar(), a.treeGenerated = !0)
    }, a.cancel = function() {
        n.params.isDirty = !1, n.go("training", {})
    }
}]), angular.module("sdlctoolApp").controller("TrainingEditController", ["$scope", "$rootScope", "$stateParams", "$state", "entity", "Training", function(t, e, n, a, o, i) {
    t.Training = o;

    function r(e) {
        t.$emit("sdlctoolApp:trainingUpdate", e), a.go("training", null, {
            reload: !0
        })
    }
    t.save = function() {
        a.params.isDirty = !1, null != t.Training.id ? i.update(t.Training, r) : i.save(t.Training, r)
    }, t.cancel = function() {
        a.params.isDirty = !1, a.go("training", {})
    }
}]), angular.module("sdlctoolApp").controller("TrainingEditTreeController", ["$scope", "$rootScope", "$stateParams", "$state", "$timeout", "$interval", "$uibModal", "entity", "Training", "TrainingTreeNode", "TrainingTreeUtil", function(n, t, e, a, o, i, r, s, l, c, d) {
    n.training = s, t.trainingTreeData = [], n.loadingProgressbar = {
        hide: !1,
        barValue: 0,
        intervalPromise: void 0
    }, n.modalProgressbar = {
        barValue: 0,
        intervalPromise: void 0
    }, n.treeReady = !1;
    n.startLoadingProgressBar = function() {
        n.loadingProgressbar.intervalPromise = i(function() {
            n.loadingProgressbar.barValue += 1
        }, 100, 99)
    }, n.pauseLoadingProgressBar = function(e) {
        angular.isDefined(n.loadingProgressbar.intervalPromise) && i.cancel(n.loadingProgressbar.intervalPromise), n.loadingProgressbar.barValue = e
    }, n.stopLoadingProgresBar = function() {
        angular.isDefined(n.loadingProgressbar.intervalPromise) && i.cancel(n.loadingProgressbar.intervalPromise), n.loadingProgressbar.barValue = 100, n.loadingProgressbar.hide = !0
    }, n.openSaveProgressModal = function() {
        n.modalProgressbar.intervalPromise = i(function() {
            n.modalProgressbar.barValue += 1
        }, 100, 99), n.progressModalTitle = "Saving to database", n.saveProgressModalInstance = r.open({
            size: "md",
            backdrop: "static",
            templateUrl: "scripts/app/entities/training/training-progressModal.html",
            scope: n
        })
    }, n.closeSaveProgressModal = function() {
        angular.isDefined(n.modalProgressbar.intervalPromise) && i.cancel(n.modalProgressbar.intervalPromise), n.modalProgressbar.barValue = 100, o(function() {
            a.params.isDirty = !1, n.saveProgressModalInstance.close(), a.go("training", null, {
                reload: !0
            })
        }, 2500)
    }, n.openFeedbackModal = function(e, t) {
        n.feedback = {
            title: e,
            message: t,
            showUpdateButton: !0,
            showProgressIndicator: !1
        }, n.feedbackModalInstance = r.open({
            size: "md",
            backdrop: "static",
            templateUrl: "scripts/app/entities/training/training-feedbackModal.html",
            scope: n
        })
    }, n.closeFeedbackModal = function(e) {
        n.feedbackModalInstance.close(), n.startLoadingProgressBar(), e ? d.ExecuteUpdate.save({
            id: n.rootNode.id
        }).$promise.then(function(e) {
            n.getAndDisplayTree()
        }) : n.getAndDisplayTree()
    }, n.getAndDisplayTree = function() {
        c.get({
            id: n.rootNode.id
        }).$promise.then(function(e) {
            n.stopLoadingProgresBar(), n.trainingRoot = e, n.trainingRoot.name = n.training.name, n.trainingRoot.opened = !0, t.trainingTreeData[0] = c.JSON_to_JSTree(n.trainingRoot), t.displayTree(), n.treeReady = !0
        })
    }, n.init = function() {
        n.startLoadingProgressBar(), d.RootNodeOfTraining.query({
            id: n.training.id
        }).$promise.then(function(e) {
            n.rootNode = e, d.CheckUpdate.query({
                id: e.id
            }).$promise.then(function(e) {
                e.hasUpdates ? (n.pauseLoadingProgressBar(40), n.openFeedbackModal("Structural updates found", "The structure of your training is not longer up to date. Do you want to apply the changes?")) : n.getAndDisplayTree()
            })
        })
    }, n.training.$promise.then(function() {
        n.init()
    }), n.save = function() {
        null != n.training.id && (n.openSaveProgressModal(), n.trainingRoot.fromJSON(t.getTreeJSON()), n.trainingRoot.json_training_id = n.training.id, c.update(n.trainingRoot).$promise.then(function() {
            n.closeSaveProgressModal()
        }, function(e) {
            n.closeSaveProgressModal(), console.error("saving failed: " + e)
        }))
    }, n.cancel = function() {
        a.params.isDirty = !1, a.go("training", null, {
            reload: !0
        })
    }
}]), angular.module("sdlctoolApp").controller("TrainingEditSelectionController", ["$scope", "$rootScope", "$stateParams", "$state", "$timeout", "$interval", "$uibModal", "entity", "Training", "TrainingTreeUtil", function(t, e, n, a, o, i, r, s, l, c) {
    t.training = s, t.modalProgressbar = {
        barValue: 0,
        intervalPromise: void 0
    }, t.openSaveProgressModal = function() {
        t.modalProgressbar.intervalPromise = i(function() {
            t.modalProgressbar.barValue += 1
        }, 100, 99), t.progressModalTitle = "Regenerating", t.saveProgressModalInstance = r.open({
            size: "md",
            backdrop: "static",
            templateUrl: "scripts/app/entities/training/training-progressModal.html",
            scope: t
        })
    }, t.closeSaveProgressModal = function() {
        a.params.isDirty = !1, angular.isDefined(t.modalProgressbar.intervalPromise) && i.cancel(t.modalProgressbar.intervalPromise), t.modalProgressbar.barValue = 100, o(function() {
            t.saveProgressModalInstance.close()
        }, 2500)
    };

    function d(e) {
        t.$emit("sdlctoolApp:trainingUpdate", e)
    }
    t.save = function() {
        null != t.training.id && (t.openSaveProgressModal(), l.update(t.training, d).$promise.then(function(e) {
            c.RootNodeOfTraining.query({
                id: t.training.id
            }).$promise.then(function(e) {
                c.ExecuteUpdate.save({
                    id: e.id
                }).$promise.then(function(e) {
                    t.closeSaveProgressModal(), a.go("training", null, {
                        reload: !0
                    })
                })
            })
        }))
    }, t.cancel = function() {
        a.params.isDirty = !1, a.go("training", {})
    }
}]), angular.module("sdlctoolApp").controller("TrainingViewController", ["$scope", "$rootScope", "$stateParams", "$state", "$compile", "$timeout", "apiFactory", "entity", "TrainingTreeNode", "TrainingTreeUtil", function(t, e, n, a, o, i, r, s, l, c) {
    t.training = s, t.slides = [], t.init = function() {
        c.RootNodeOfTraining.query({
            id: t.training.id
        }).$promise.then(function(e) {
            null != e.id ? c.TreeWithPreparedContent.query({
                id: e.id
            }).$promise.then(function(e) {
                t.trainingRoot = e, t.slides = l.getSlidesFromJson(t.trainingRoot), Reveal.initialize({
                    loop: !1,
                    controls: !0,
                    progress: !0,
                    center: !0,
                    transition: "slide",
                    dependencies: [{
                        src: "bower_components/revealjs/lib/js/classList.js",
                        condition: function() {
                            return !document.body.classList
                        }
                    }, {
                        src: "bower_components/revealjs/plugin/markdown/marked.js"
                    }, {
                        src: "bower_components/revealjs/plugin/markdown/markdown.js"
                    }, {
                        src: "bower_components/revealjs/plugin/notes/notes.js",
                        async: !0
                    }, {
                        src: "bower_components/revealjs/plugin/zoom-js/zoom.js",
                        async: !0
                    }]
                }), i(function() {
                    $(document).ready(function() {
                        $("pre code").each(function(e, t) {
                            hljs.highlightBlock(t)
                        })
                    })
                })
            }) : console.error("Could not find root node of training")
        })
    }, t.training.$promise.then(function() {
        t.init()
    })
}]), angular.module("sdlctoolApp").controller("TrainingSkeletonController", ["$scope", "$rootScope", "$stateParams", "entity", "Training", "User", "TrainingTreeNode", function(n, e, t, a, o, i, r) {
    n.training = a, n.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            n.training = e
        })
    }, n.setDirty = function() {
        t.isDirty = !0
    }, e.$on("sdlctoolApp:trainingUpdate", function(e, t) {
        n.training = t
    });
    n.update = function() {}
}]), angular.module("sdlctoolApp").controller("TrainingRequirementsController", ["$scope", "$rootScope", "$stateParams", "$filter", "$http", "entity", "Training", "TrainingTreeNode", "apiFactory", function(r, s, a, o, i, e, t, n, l) {
    r.training = e;
    var c = {
        selectedColls: [],
        selectedTypes: [],
        allRequirementsSelected: !0
    };
    null != r.training.$promise ? r.training.$promise.then(function() {
        r.training.allRequirementsSelected ? $("#filterBlock").hide() : $("#filterBlock").show(), r.training.collections.forEach(function(e) {
            r.selectCollections(e, !1)
        }), r.training.projectTypes.forEach(function(e) {
            r.selectedProjectType.push(e)
        }), angular.copy(r.training.collections, c.selectedColls), angular.copy(r.training.projectTypes, c.selectedTypes), c.allRequirementsSelected = r.training.allRequirementsSelected
    }) : (r.training.collections = [], r.training.projectTypes = [], r.training.allRequirementsSelected = !0), r.includeAll = !0, s.requirementsSelected = 0, r.categoriesSelected = 0, s.allCollections = [], s.allProjectTypes = [], r.getSelectedCollectionsByCategory = function(e) {
        var n = [];
        return r.training.collections.forEach(function(t) {
            t.collectionCategory.id === e.id && e.collectionInstances.forEach(function(e) {
                e.id === t.id && n.push(e)
            })
        }), n
    }, s.buildQueryParams = function() {
        var e = "",
            t = [],
            n = [];
        return r.training.allRequirementsSelected ? (t = s.allCollections, n = s.allProjectTypes) : (r.training.collections.forEach(function(e) {
            t.push(e.id)
        }), 0 < r.training.projectTypes.length ? r.training.projectTypes.forEach(function(e) {
            n.push(e.id)
        }) : 0 < r.training.collections.length && (n = s.allProjectTypes)), (0 < t.length || 0 < n.length) && (e += "collections=" + t, e += "&", e += "projectTypes=" + n), e
    }, r.allRequirementsSwitched = function() {
        c.allRequirementsSelected === r.training.allRequirementsSelected ? a.isDirty = !1 : a.isDirty = !0, r.showFilters(), s.updateNumberOfRequirements()
    }, s.updateNumberOfRequirements = function() {
        if (c.allRequirementsSelected === r.training.allRequirementsSelected && c.selectedColls.length === r.training.collections.length && c.selectedTypes.length === r.training.projectTypes.length) {
            a.isDirty = !1;
            for (var e = 0; e < c.selectedTypes.length; e++) {
                var t = c.selectedTypes[e];
                if (0 === o("filter")(r.training.projectTypes, {
                        id: t.id
                    }).length) {
                    a.isDirty = !0;
                    break
                }
            }
            for (e = 0; e < c.selectedColls.length; e++) {
                t = c.selectedColls[e];
                if (0 === o("filter")(r.training.collections, {
                        id: t.id
                    }).length) {
                    a.isDirty = !0;
                    break
                }
            }
        } else a.isDirty = !0;
        var n;
        r.training.allRequirementsSelected || 0 < r.training.collections.length || 0 < r.training.projectTypes.length ? (n = s.buildQueryParams(), i({
            url: "/frontend-api/numberOfRequirements/filter?" + n,
            method: "GET"
        }).then(function(e) {
            s.fetchNumberError = !1, s.requirementsSelected = e.data
        }, function(e) {
            s.fetchNumberError = !0, s.requirementsSelected = "??"
        })) : s.requirementsSelected = 0
    }, r.showFilters = function() {
        $("#filterBlock").toggle()
    }, r.load = function(e) {
        t.get({
            id: e
        }, function(e) {
            r.training = e
        })
    }, s.$on("sdlctoolApp:trainingUpdate", function(e, t) {
        r.training = t
    }), r.selectedCollection = [], r.selectedProjectType = [], r.projectTypeModel = {}, r.selectedCollectionSettings = {
        smartButtonMaxItems: 7,
        closeOnSelect: !0,
        closeOnDeselect: !0,
        showCheckAll: !1,
        showUncheckAll: !1,
        displayProp: "name",
        idProp: "id",
        externalIdProp: ""
    }, r.selectedProjectTypeSettings = r.selectedCollectionSettings, r.selectedCollectionEvents = {
        onItemSelect: function(e) {
            r.selectCollections(e, !0)
        },
        onItemDeselect: function(e) {
            r.deselectCollections(e, !0)
        }
    }, r.selectedProjectTypeEvents = {
        onItemSelect: function(e) {
            r.selectProjectType(e, !0)
        },
        onItemDeselect: function(e) {
            r.deselectProjectType(e, !0)
        }
    };
    var d = [],
        e = l.getAll("collections");
    d.push(e), e.then(function(e) {
        r.categories = e, angular.forEach(r.categories, function(e) {
            e.collectionInstances = o("orderBy")(e.collectionInstances, "showOrder"), angular.extend(e, {
                selectedCollectionSets: r.getSelectedCollectionsByCategory(e)
            }), e.collectionInstances.forEach(function(e) {
                s.allCollections.push(e.id)
            })
        }), r.init()
    }, function(e) {});
    l = l.getAll("projectTypes");
    d.push(l), l.then(function(e) {
        r.projectType = o("orderBy")(e, "showOrder"), r.projectType.forEach(function(e) {
            s.allProjectTypes.push(e.id)
        })
    }, function(e) {}), Promise.all(d).then(function() {
        s.updateNumberOfRequirements()
    }), r.init = function() {
        r.projectTypeModel.name = "Select", null != r.training.collections && 0 < r.training.collections.length && angular.copy(r.training.collections, r.selectedCollection), null != r.training.projectType && null != r.training.projectType && angular.copy(r.training.projectTypes, r.selectedProjectType)
    }, r.selectProjectType = function(t, e) {
        r.projectTypeModel = t;
        var n = !1;
        r.training.projectTypes.forEach(function(e) {
            e.id === t.id && (n = !0)
        }), n || r.training.projectTypes.push(t), e && s.updateNumberOfRequirements()
    }, r.deselectProjectType = function(e, t) {
        for (var n = 0; n < r.training.projectTypes.length; n++) r.training.projectTypes[n].id === e.id && r.training.projectTypes.splice(n, 1);
        t && s.updateNumberOfRequirements()
    }, r.selectCollections = function(n, e) {
        var t, a, o = "";
        angular.forEach(r.categories, function(t) {
            angular.forEach(t.collectionInstances, function(e) {
                e.id === n.id && (o = t.name)
            })
        }), r.searchObjectbyValue(o, r.selectedCollection) ? angular.forEach(r.selectedCollection, function(e) {
            o === e.categoryName && e.values.push({
                collectionInstanceId: n.id,
                type: n.name
            })
        }) : (t = {}, (a = []).push({
            collectionInstanceId: n.id,
            type: n.name
        }), angular.extend(t, {
            categoryName: o,
            values: a
        }), r.selectedCollection.push(t));
        var i = !1;
        r.training.collections.forEach(function(e) {
            e.id === n.id && (i = !0)
        }), i || r.training.collections.push(n), e && s.updateNumberOfRequirements()
    }, r.deselectCollections = function(e, t) {
        for (var n = 0; n < r.selectedCollection.length; n++) {
            var a = r.selectedCollection[n];
            if (null != a.value)
                for (var o = 0; o < a.values.length; o++) a.values[o].collectionInstanceId === e.id && (a.values.splice(o, 1), 0 === a.values.length && r.selectedCollection.splice(n, 1))
        }
        for (var i = 0; i < r.training.collections.length; i++) r.training.collections[i].id === e.id && r.training.collections.splice(i, 1);
        t && s.updateNumberOfRequirements()
    }, r.searchObjectbyValue = function(n, e) {
        var a = !1;
        return angular.forEach(e, function(e) {
            angular.forEach(e, function(e, t) {
                e === n && (a = !0)
            })
        }), a
    }
}]), angular.module("sdlctoolApp").controller("TrainingContentController", ["$scope", "$rootScope", "$stateParams", "$q", "entity", "Training", "OptColumn", function(a, o, e, i, t, n, r) {
    a.training = t, a.optcolumns = r.query(), o.selected = {}, o.optColumnDict = {};
    var s = {};
    i.all([a.training.$promise, a.optcolumns.$promise]).then(function() {
        angular.forEach(a.optcolumns, function(e) {
            o.selected[e.id] = !1
        }), null != a.training.optColumns && (angular.forEach(a.training.optColumns, function(e) {
            o.selected[e.id] = !0
        }), angular.copy(o.selected, s), a.selectAll = a.training.optColumns.length === a.optcolumns.length)
    }), a.optcolumns.$promise.then(function(e) {
        angular.forEach(e, function(e) {
            o.optColumnDict[e.id] = e
        })
    }), a.toggleAll = function() {
        angular.forEach(o.selected, function(e, t) {
            null != e && (o.selected[t] = a.selectAll, a.updateSelection(t))
        })
    };
    a.updateSelection = function(t) {
        var n;
        o.selected[t] ? (n = !0, angular.forEach(o.selected, function(e) {
            null == e || e || (n = !1)
        }), n && (a.selectAll = !0)) : a.selectAll = !1, angular.equals(o.selected, s) ? e.isDirty = !1 : e.isDirty = !0, i.all([a.training.$promise, o.optColumnDict.$promise]).then(function() {
            o.selected[t] ? (null == a.training.optColumns && (a.training.optColumns = []), a.training.optColumns.push(o.optColumnDict[t].toJSON())) : a.training.optColumns = $.grep(a.training.optColumns, function(e) {
                return e.id != t
            })
        })
    }, a.load = function(e) {
        n.get({
            id: e
        }, function(e) {
            a.training = e
        })
    }, o.$on("sdlctoolApp:trainingUpdate", function(e, t) {
        a.training = t
    })
}]), angular.module("sdlctoolApp").controller("TrainingCustomizeController", ["$scope", "$rootScope", "$stateParams", "$timeout", "entity", "Training", "TrainingTreeNode", "TrainingCustomSlideNode", "TrainingTreeUtil", "SlideTemplate", "marked", function(d, e, n, a, t, o, u, i, r, s, l) {
    function c(e) {
        d.$emit("sdlctoolApp:trainingUpdate", e)
    }
    d.training = t, d.firstTimeDrawingTree = !0, d.disabledIcon = "glyphicon glyphicon-remove", d.disableSaveSlideButton = !1, d.showPreview = !1, d.load = function(e) {
        o.get({
            id: e
        }, function(e) {
            d.training = e
        })
    }, d.updateEditableSlides = function() {
        d.disableSaveSlideButton = !1, d.updateSlidePreview(!1, "")
    }, d.slideEditor = function(e) {
        e ? ($("#editBlock").fadeIn(), $("#previewBlock").fadeIn()) : ($("#editBlock").hide(), $("#previewBlock").hide())
    }, d.slideEditor(!1);
    var p = $("#tree");
    p.bind("select_node.jstree", function(e, t) {
        d.selectedNodeJSTree = t, d.selectedNode = new u, d.selectedNode.fromJSON(t.node), d.$apply();
        t = d.selectedNode.node_type;
        "GeneratedSlideNode" == t || "CustomSlideNode" == t ? (d.slideEditor(!0), d.updateSlidePreview("GeneratedSlideNode" == t, ""), "CustomSlideNode" !== t ? ($("#slideTitle").prop("disabled", !0), $("#slideContent").prop("disabled", !0), $("#saveSlideButton").prop("disabled", !0)) : ($("#slideTitle").prop("disabled", !1), $("#slideContent").prop("disabled", !1), $("#saveSlideButton").prop("disabled", !1))) : d.slideEditor(!1)
    }), p.bind("rename_node.jstree", function(e, t) {
        null == t.node.data && (t.node.data = {}), t.node.data.name = t.text, d.updateParentName(t.node.children, t.text)
    }), p.bind("move_node.jstree", function(e, t) {
        var n, a, o = t.node,
            i = p.jstree(!0).get_node(t.parent),
            r = p.jstree(!0).get_node(t.old_parent),
            t = new u;
        if (t.fromJSON(i), null == o.data && (o.data = {}), o.data.parent_id = t, "CustomSlideNode" === o.type || "BranchNode" === o.type) {
            var s = -2;
            if (null != i.children) {
                for (var l = [], c = 0; c < i.children.length && o.id != i.children[c]; c++) l.push(i.children[c]);
                l.forEach(function(e) {
                    e = p.jstree(!0).get_node(e);
                    "CategoryNode" !== e.type && "RequirementNode" !== e.type && "GeneratedSlideNode" !== e.type || null != e.data.json_universal_id && (s = e.data.json_universal_id)
                })
            } else console.error("error in move_node.jstree callback: new parent has no children");
            o.data.anchor = s
        } else "CategoryNode" !== o.type && "RequirementNode" !== o.type && "GeneratedSlideNode" !== o.type || null !== (n = o.data.json_universal_id) && null !== r.children && (a = u.PARENT_ANCHOR, r.children.forEach(function(e) {
            e = p.jstree(!0).get_node(e);
            null != e && null != e.data && ("CustomSlideNode" === e.type || "BranchNode" === e.type ? e.data.anchor === n && (e.data.anchor = a) : "CategoryNode" !== e.type && "RequirementNode" !== e.type && "GeneratedSlideNode" !== e.type || (a = e.data.json_universal_id))
        }));
        "CustomSlideNode" !== o.type && "GeneratedSlideNode" !== o.type || ((r = new u).fromJSON(o), r.loadContent(i.name).then(function(e) {
            o.content = e
        }), r.parent_id = t, r.loadContent(i.name).then(function(e) {
            d.setSlidePreviewContent(e)
        }))
    }), d.saveSlide = function() {
        n.isDirty = !0;
        var e = $("#tree").jstree(!0),
            t = d.selectedNode.name;
        20 < t.length && (t = t.substr(0, 17), t += "..."), e.rename_node(e.get_selected(), t), d.selectedNodeJSTree.node.data.content = d.selectedNode.content, d.selectedNodeJSTree.node.data.name = d.selectedNode.name, null != d.selectedNodeJSTree.node.data.node_id && r.CustomSlideNode.query({
            id: d.selectedNodeJSTree.node.data.node_id
        }).$promise.then(function(e) {
            e.content = d.selectedNode.content, i.update(e, c).$promise.then(function() {
                d.disableSaveSlideButton = !0
            }, function() {
                d.disableSaveSlideButton = !1
            })
        }, function() {
            d.disableSaveSlideButton = !1
        }), n.isDirty = !0, "CustomSlideNode" == d.selectedNode.node_type && d.updateSlidePreview(!1, "")
    }, d.updateParentName = function(e, t) {
        var n = $("#tree").jstree(!0);
        e.forEach(function(e) {
            n.get_node(e).data.parent_id.name = t
        })
    }, d.updateSlidePreview = function(t, e) {
        null != d.selectedNode.training_id && null != d.selectedNode.training_id.name || (d.selectedNode.training_id = d.training), d.selectedNode.loadContent(e).then(function(e) {
            d.setSlidePreviewContent(e), t && a(function() {
                d.selectedNode.content = e, d.$apply()
            })
        }, function(e) {
            console.error("failed to load content from slide: " + e), d.setSlidePreviewContent("")
        })
    }, d.setSlidePreviewContent = function(e) {
        document.getElementById("previewFrameId").contentWindow.postMessage(JSON.stringify({
            method: "updateSlide",
            args: [null !== e ? l(e) : ""]
        }), "*")
    };

    function m(n) {
        var a = $("#tree").jstree(!0),
            e = {
                create_branch: {
                    label: "Create Branch",
                    action: function(e) {
                        var t = a.create_node(n.id, {
                            text: "new Branch",
                            type: "BranchNode"
                        });
                        a.edit(t), $(".jstree-rename-input").attr("maxLength", 20), d.selectedNode.addBranchNode(t.text)
                    },
                    _disabled: !1,
                    _class: "class",
                    separator_before: !1,
                    separator_after: !1,
                    icon: "glyphicon glyphicon-folder-open",
                    submenu: {}
                },
                insert_slide: {
                    label: "Insert Custom Slide",
                    _disabled: !1,
                    _class: "class",
                    separator_before: !1,
                    separator_after: !0,
                    icon: "glyphicon glyphicon-flash",
                    submenu: {
                        empty: {
                            label: "Empty Slide",
                            separator_after: !0,
                            icon: "glyphicon glyphicon-flash",
                            action: function(e) {
                                var t = a.get_node(a.get_selected()),
                                    t = a.create_node(n.id, {
                                        text: "new Customslide",
                                        type: "CustomSlideNode",
                                        data: {
                                            name: "new Customslide",
                                            content: "",
                                            parent_id: {
                                                name: t.text
                                            }
                                        }
                                    });
                                a.deselect_all(), a.select_node(t)
                            }
                        },
                        template: {
                            label: "Template",
                            icon: "glyphicon glyphicon-list-alt",
                            submenu: d.slideTemplateSubMenu
                        }
                    }
                },
                renameItem: {
                    label: "Rename",
                    action: function(e) {
                        a.edit(n), $(".jstree-rename-input").attr("maxLength", 20)
                    },
                    icon: "glyphicon glyphicon-wrench"
                },
                deleteItem: {
                    label: "Delete",
                    action: function(e) {
                        a.delete_node(n)
                    },
                    icon: "glyphicon glyphicon-remove-circle"
                },
                excludeItem: {
                    label: "Exclude",
                    action: function(e) {
                        g(n)
                    },
                    icon: "glyphicon glyphicon-remove"
                },
                includeItem: {
                    label: "Include",
                    action: function(e) {
                        h(n)
                    },
                    icon: "glyphicon glyphicon-repeat"
                }
            };
        switch (n.type) {
            case "CustomSlideNode":
                delete e.create_branch, delete e.insert_slide, delete e.renameItem, delete e.includeItem, delete e.excludeItem;
                break;
            case "RootNode":
                delete e.renameItem, delete e.deleteItem;
            case "BranchNode":
                delete e.includeItem, delete e.excludeItem;
                break;
            case "GeneratedSlideNode":
                delete e.create_branch, delete e.insert_slide, delete e.renameItem, delete e.deleteItem, null == n.data.active || n.data.active ? delete e.includeItem : delete e.excludeItem;
                break;
            case "ContentNode":
            case "RequirementNode":
            case "CategoryNode":
                delete e.renameItem, delete e.deleteItem, null == n.data.active || n.data.active ? delete e.includeItem : delete e.excludeItem
        }
        return e
    }
    var g = function(e) {
            $("#tree").jstree(!0).set_icon(e, d.disabledIcon), null == e.data && (e.data = {}), e.data.active = !1, e.children.forEach(function(e) {
                e = $("#tree").jstree(!0).get_node(e);
                g(e)
            })
        },
        h = function(e) {
            $("#tree").jstree(!0).set_icon(e, d.treeNodeTypes[e.type].icon), null == e.data && (e.data = {}), e.data.active = !0, e.children.forEach(function(e) {
                e = $("#tree").jstree(!0).get_node(e);
                h(e)
            })
        };
    e.createSlideTemplateSubMenu = function() {
        return new Promise(function(t, e) {
            var n = {};
            s.query().$promise.then(function(e) {
                e.forEach(function(a) {
                    var e = {
                        label: a.name,
                        icon: "glyphicon glyphicon-flash",
                        action: function(e) {
                            var t = $("#tree").jstree(!0),
                                n = t.get_node(t.get_selected()),
                                n = t.create_node(d.selectedNodeJSTree.node.id, {
                                    text: a.name,
                                    type: "CustomSlideNode",
                                    data: {
                                        content: a.content,
                                        name: a.name,
                                        parent_id: {
                                            name: n.text
                                        }
                                    }
                                });
                            t.deselect_all(), t.select_node(n)
                        }
                    };
                    n["slideTemplate" + a.id] = e
                }), d.slideTemplateSubMenu = n, t()
            })
        })
    }, d.treeNodeTypes = {
        BranchNode: {
            max_children: -1,
            max_depth: -1,
            valid_children: ["BranchNode", "CustomSlideNode"],
            create_node: !0
        },
        RootNode: {
            max_children: -1,
            max_depth: -1,
            valid_children: ["BranchNode", "CustomSlideNode"],
            create_node: !0
        },
        GeneratedSlideNode: {
            icon: "glyphicon glyphicon-file",
            create_node: !1,
            valid_children: "none",
            li_attr: {
                class: "slide"
            }
        },
        CustomSlideNode: {
            icon: "jstree-file",
            create_node: !1,
            valid_children: "none",
            li_attr: {
                class: "slide"
            }
        },
        RequirementNode: {
            icon: "glyphicon glyphicon-book",
            create_node: !1,
            valid_children: ["GeneratedSlideNode", "CustomSlideNode", "BranchNode"],
            li_attr: {
                class: "slide"
            }
        },
        CategoryNode: {
            icon: "glyphicon glyphicon-folder-open",
            "valid_children:": ["RequirementNode", "CustomSlideNode", "BranchNode"]
        },
        ContentNode: {
            valid_children: ["BranchNode", "CustomSlideNode", "CategoryNode"]
        },
        "#": {
            max_children: 1,
            "valid_children:": ["RootNode"]
        }
    }, e.displayTree = function() {
        e.createSlideTemplateSubMenu().then(function() {
            var n = $("#tree");
            d.firstTimeDrawingTree ? $("#tree").jstree({
                core: {
                    force_text: !0,
                    check_callback: function(e, t, n, a, o) {
                        var i = !0;
                        return "move_node" == e && ("GeneratedSlideNode" === t.type && "CategoryNode" === n.type && (i = !1), "CategoryNode" !== t.type && "GeneratedSlideNode" !== t.type && "RequirementNode" !== t.type || (i = !1)), i
                    },
                    data: e.trainingTreeData
                },
                dnd: {
                    check_while_dragging: !0
                },
                plugins: ["contextmenu", "dnd", "types"],
                contextmenu: {
                    items: m
                },
                types: d.treeNodeTypes
            }) : (n.jstree(!0).settings.core.data = e.trainingTreeData, n.jstree("refresh")), d.showPreview = !0, n.bind("ready.jstree", function(e, t) {
                $("#previewBlock").hide(), $(n.jstree().get_json(n, {
                    flat: !0
                })).each(function(e, t) {
                    0 == t.data.active && n.jstree(!0).set_icon(t, d.disabledIcon)
                })
            }), d.firstTimeDrawingTree = !1
        })
    }, e.getTreeJSON = function() {
        return $("#tree").jstree(!0).get_json("#", {
            flat: !1
        })[0]
    }
}]), angular.module("sdlctoolApp").factory("TrainingTreeNode", ["$resource", "DateUtils", "TrainingCustomSlideNode", "TrainingBranchNode", "TrainingCategoryNode", "TrainingRequirementNode", "TrainingGeneratedSlideNode", "TrainingTreeUtil", "RequirementSkeleton", function(e, t, r, s, l, c, d, u, p) {
    function m(e) {}
    var g = e("api/trainingTreeNodes/:id", {}, {
        query: {
            method: "GET",
            isArray: !0
        },
        get: {
            method: "GET",
            transformResponse: function(e) {
                return e = angular.fromJson(e)
            }
        },
        update: {
            method: "PUT"
        }
    });
    g.prototype.PARENT_ANCHOR = -2, g.prototype.CONTENT_NODE_NAME = "Contents", g.prototype.getChildren = function() {
        return null == this.children && (this.children = []), this.children
    }, g.prototype.getAnchorForPosition = function() {
        var t = this.PARENT_ANCHOR;
        return null != this.children && this.children.forEach(function(e) {
            "CategoryNode" != e.node_type && "RequirementNode" != e.node_type && "GeneratedSlideNode" != e.node_type || (t = e.json_universal_id)
        }), t
    }, g.prototype.addChildNode = function(e, t, n) {
        null == this.children && (this.children = []);
        var a = new g;
        return a.name = t, a.node_type = e, a.opened = n, a.parent_id = {
            name: this.name,
            node_type: this.node_type,
            json_universal_id: this.json_universal_id
        }, this.children.push(a), a
    }, g.prototype.addBranchNode = function(e) {
        e = this.addChildNode("BranchNode", e, !0);
        return e.anchor = this.getAnchorForPosition(), e
    }, g.prototype.addCustomSlideNode = function(e, t) {
        e = this.addChildNode("CustomSlideNode", e, !1);
        return e.anchor = this.getAnchorForPosition(), e.content = t, e
    }, g.prototype.addCategoryNode = function(e, t, n) {
        n = this.addChildNode("CategoryNode", e, n);
        return n.category = t, n.json_universal_id = t.id, n
    }, g.prototype.addRequirementNode = function(e, t) {
        t = this.addChildNode("RequirementNode", e.shortName, t);
        t.requirementSkeleton = e, t.json_universal_id = e.id;
        e = t.addChildNode("GeneratedSlideNode", "Skeleton", !1);
        return e.optColumn = null, e.json_universal_id = -1, t
    }, g.prototype.addGeneratedSlideNode = function(e) {
        var t = this.addChildNode("GeneratedSlideNode", e.name, !1);
        return t.optColumn = e, t.json_universal_id = e.id, t
    }, g.prototype.addContentNode = function() {
        return this.addChildNode("ContentNode", this.CONTENT_NODE_NAME, !0)
    }, g.prototype.setTrainingId = function(t) {
        this.json_training_id = t, null != this.children && this.children.forEach(function(e) {
            e.setTrainingId(t)
        })
    }, g.prototype.saveSubTree = function() {
        var i = this;
        return new Promise(function(a, e) {
            var o = [g.save(i, m).$promise];
            o[0].then(function(t) {
                var n, e = {};
                switch (e.node = t, i.node_type) {
                    case "CustomSlideNode":
                        e.name = i.name, e.content = i.content, o.push(r.save(e, m).$promise);
                        break;
                    case "BranchNode":
                        e.name = i.name, o.push(s.save(e, m).$promise);
                        break;
                    case "CategoryNode":
                        e.name = i.name, e.category = i.category, o.push(l.save(e, m).$promise);
                        break;
                    case "RequirementNode":
                        e.requirementSkeleton = i.requirementSkeleton, o.push(c.save(e, m).$promise);
                        break;
                    case "GeneratedSlideNode":
                        e.optColumn = i.optColumn, o.push(d.save(e, m).$promise)
                }
                null != i.children && (n = 0, i.children.forEach(function(e) {
                    e.sort_order = n++, e.parent_id = t, o.push(e.saveSubTree())
                })), Promise.all(o).then(function() {
                    a()
                })
            })
        })
    }, g.prototype.loadSubTree = function(o) {
        var i = this;
        return new Promise(function(t, e) {
            var n = [u.ChildrenOfNode.query({
                id: i.id
            }).$promise];
            switch (i.children = [], i.node_type) {
                case "CustomSlideNode":
                    var a = u.CustomSlideNode.get({
                        id: i.id
                    }).$promise;
                    n.push(a), a.then(function(e) {
                        i.content = e.content, i.name = e.name
                    });
                    break;
                case "BranchNode":
                    var a = u.BranchNode.get({
                        id: i.id
                    }).$promise;
                    n.push(a), a.then(function(e) {
                        i.name = e.name
                    });
                    break;
                case "RequirementNode":
                    a = u.RequirementNode.get({
                        id: i.id
                    }).$promise;
                    n.push(a), a.then(function(e) {
                        i.requirementSkeleton = e.requirementSkeleton, i.name = e.requirementSkeleton.shortName
                    });
                    break;
                case "GeneratedSlideNode":
                    a = u.GeneratedSlideNode.get({
                        id: i.id
                    }).$promise;
                    n.push(a), a.then(function(e) {
                        i.optColumn = e.optColumn, null != e.optColumn ? i.name = e.optColumn.name : i.name = "Skeleton"
                    });
                    break;
                case "CategoryNode":
                    o && (a = u.CategoryNode.get({
                        id: i.id
                    }).$promise, n.push(a), a.then(function(e) {
                        i.name = e.name
                    }))
            }
            n[0].then(function(e) {
                null != e && e.forEach(function(e) {
                    var t = new g;
                    t.id = e.id, t.node_type = e.node_type, t.parent_id = i, t.sort_order = e.sort_order, t.training_id = e.training_id, n.push(t.loadSubTree(o)), i.children.push(t)
                }), Promise.all(n).then(function() {
                    t()
                })
            })
        })
    };
    return g.prototype.loadContent = function(i) {
        var r = this,
            s = "";
        return null != r.parent_id && null != r.parent_id.name && (i = r.parent_id.name), new Promise(function(e, t) {
            var n = [];
            switch (r.node_type) {
                case "CustomSlideNode":
                    null != (s = r.content) && (s = s.replace(/({{ *training.name *}})/g, (a = "", null != (o = r).training_id && null != o.training_id.name && (a = o.training_id.name), a)).replace(/({{ *parent.name *}})/g, i));
                    break;
                case "GeneratedSlideNode":
                    var a, o = r.parent_id;
                    null == r.json_universal_id || -1 == r.json_universal_id ? (a = p.get({
                        id: o.json_universal_id
                    }).$promise, n.push(a), a.then(function(e) {
                        null != e.description && null != e.shortName && (s = "<h2>" + e.shortName + "</h2>" + e.description)
                    })) : (o = u.OptColumnContent.query({
                        optColumnId: r.json_universal_id,
                        requirementId: o.json_universal_id
                    }).$promise, n.push(o), o.then(function(e) {
                        null != e.content && (s = "<h3>" + e.optColumn.name + "</h3>" + e.content)
                    }, function(e) {
                        s = ""
                    }))
            }
            Promise.all(n).then(function() {
                e(s)
            })
        })
    }, g.getSlidesFromJson = function(e) {
        var t = [];
        return e.active && null != e.content && 0 < e.content.length && t.push({
            content: e.content,
            sort_order: e.sort_order
        }), 1 < e.children.length && e.children.sort(function(e, t) {
            return e.sort_order < t.sort_order ? -1 : e.sort_order > t.sort_order ? 1 : 0
        }), null != e.children && e.children.forEach(function(e) {
            g.getSlidesFromJson(e).forEach(function(e) {
                t.push(e)
            })
        }), t
    }, g.prototype.loadSlides = function() {
        var a = [],
            o = this;
        return new Promise(function(t, e) {
            var n = [o.loadContent()];
            n[0].then(function(e) {
                null != e && "" != e && a.push({
                    content: e
                }), null != o.children && o.children.forEach(function(e) {
                    e = e.loadSlides();
                    n.push(e), e.then(function(e) {
                        e.forEach(function(e) {
                            a.push(e)
                        })
                    })
                }), Promise.all(n).then(function() {
                    t(a)
                })
            })
        })
    }, g.JSON_to_JSTree = function(t) {
        var e = t.name;
        null != e && 20 < e.length && (e = e.substr(0, 17), e += "...");
        var n = {
            text: e,
            state: {
                opened: t.opened
            },
            type: t.node_type,
            children: [],
            data: {}
        };
        switch (null != t.id && (n.data.node_id = t.id), n.data.json_universal_id = t.json_universal_id, n.data.active = t.active, n.data.anchor = t.anchor, n.data.name = t.name, t.node_type) {
            case "BranchNode":
                break;
            case "GeneratedSlideNode":
            case "CustomSlideNode":
                n.data.content = t.content
        }
        return null != t.children && t.children.forEach(function(e) {
            e = g.JSON_to_JSTree(e);
            e.data.parent_id = {
                name: t.name,
                active: t.active,
                json_universal_id: t.json_universal_id
            }, n.children.push(e)
        }), n
    }, g.prototype.fromJSON = function(e) {
        var n = this;
        switch (n.name = e.text, n.node_type = e.type, n.children = [], n.active = !0, null != e.data && (n.json_universal_id = e.data.json_universal_id, n.active = e.data.active, n.parent_id = e.data.parent_id, n.anchor = e.data.anchor), e.type) {
            case "GeneratedSlideNode":
                n.optColumn = e.data.optColumn;
            case "CustomSlideNode":
                n.content = e.data.content, n.name = e.data.name
        }
        null != e.data && (n.parent_id = e.data.parent_id), null != e.children && e.children.forEach(function(e) {
            var t = new g;
            t.fromJSON(e), n.children.push(t)
        })
    }, g
}]), angular.module("sdlctoolApp").factory("TrainingTreeNodeSearch", ["$resource", function(e) {
    return e("api/_search/trainingTreeNodes/:query", {}, {
        query: {
            method: "GET",
            isArray: !0
        }
    })
}]), angular.module("sdlctoolApp").factory("TrainingTreeUtil", ["$resource", function(e) {
    return {
        RootNodeOfTraining: e("api/TrainingTreeNode/rootNode/:id", {}, {
            query: {
                method: "GET",
                isArray: !1
            }
        }),
        ChildrenOfNode: e("api/TrainingTreeNode/childrenOf/:id", {}, {
            query: {
                method: "GET",
                isArray: !0
            }
        }),
        CustomSlideNode: e("api/TrainingCustomSlideNodeByTrainingTreeNode/:id", {}, {
            query: {
                method: "GET",
                isArray: !1
            }
        }),
        BranchNode: e("api/TrainingBranchNodeByTrainingTreeNode/:id", {}, {
            query: {
                method: "GET",
                isArray: !1
            }
        }),
        RequirementNode: e("api/TrainingRequirementNodeByTrainingTreeNode/:id", {}, {
            query: {
                method: "GET",
                isArray: !1
            }
        }),
        GeneratedSlideNode: e("api/TrainingGeneratedSlideNodeByTrainingTreeNode/:id", {}, {
            query: {
                method: "GET",
                isArray: !1
            }
        }),
        CategoryNode: e("api/TrainingCategoryNodeByTrainingTreeNode/:id", {}, {
            query: {
                method: "GET",
                isArray: !1
            }
        }),
        OptColumnContent: e("api/optColumnContents/byOptColumnAndRequirement/:optColumnId/:requirementId", {}, {
            query: {
                method: "GET",
                isArray: !1
            }
        }),
        TreeWithPreparedContent: e("api/trainingTreeNodesWithPreparedContent/:id", {}, {
            query: {
                method: "GET",
                isArray: !1
            }
        }),
        CheckUpdate: e("api/trainingTreeNodeUpdate/:id", {}, {
            query: {
                method: "GET",
                isArray: !1
            }
        }),
        ExecuteUpdate: e("api/trainingTreeNodeUpdate/", {}, {
            query: {
                method: "POST",
                isArray: !1
            }
        })
    }
}]), angular.module("sdlctoolApp").factory("TrainingCustomSlideNode", ["$resource", "DateUtils", function(e, t) {
    return e("api/trainingCustomSlideNodes/:id", {}, {
        query: {
            method: "GET",
            isArray: !0
        },
        get: {
            method: "GET",
            transformResponse: function(e) {
                return e = angular.fromJson(e)
            }
        },
        update: {
            method: "PUT"
        }
    })
}]), angular.module("sdlctoolApp").factory("TrainingCustomSlideNodeSearch", ["$resource", function(e) {
    return e("api/_search/trainingCustomSlideNodes/:query", {}, {
        query: {
            method: "GET",
            isArray: !0
        }
    })
}]), angular.module("sdlctoolApp").factory("TrainingBranchNode", ["$resource", "DateUtils", function(e, t) {
    return e("api/trainingBranchNodes/:id", {}, {
        query: {
            method: "GET",
            isArray: !0
        },
        get: {
            method: "GET",
            transformResponse: function(e) {
                return e = angular.fromJson(e)
            }
        },
        update: {
            method: "PUT"
        }
    })
}]), angular.module("sdlctoolApp").factory("TrainingBranchNodeSearch", ["$resource", function(e) {
    return e("api/_search/trainingBranchNodes/:query", {}, {
        query: {
            method: "GET",
            isArray: !0
        }
    })
}]), angular.module("sdlctoolApp").factory("TrainingCategoryNode", ["$resource", "DateUtils", function(e, t) {
    return e("api/trainingCategoryNodes/:id", {}, {
        query: {
            method: "GET",
            isArray: !0
        },
        get: {
            method: "GET",
            transformResponse: function(e) {
                return e = angular.fromJson(e)
            }
        },
        update: {
            method: "PUT"
        }
    })
}]), angular.module("sdlctoolApp").factory("TrainingCategoryNodeSearch", ["$resource", function(e) {
    return e("api/_search/trainingCategoryNodes/:query", {}, {
        query: {
            method: "GET",
            isArray: !0
        }
    })
}]), angular.module("sdlctoolApp").factory("TrainingRequirementNode", ["$resource", "DateUtils", function(e, t) {
    return e("api/trainingRequirementNodes/:id", {}, {
        query: {
            method: "GET",
            isArray: !0
        },
        get: {
            method: "GET",
            transformResponse: function(e) {
                return e = angular.fromJson(e)
            }
        },
        update: {
            method: "PUT"
        }
    })
}]), angular.module("sdlctoolApp").factory("TrainingRequirementNodeSearch", ["$resource", function(e) {
    return e("api/_search/trainingRequirementNodes/:query", {}, {
        query: {
            method: "GET",
            isArray: !0
        }
    })
}]), angular.module("sdlctoolApp").factory("TrainingGeneratedSlideNode", ["$resource", "DateUtils", function(e, t) {
    return e("api/trainingGeneratedSlideNodes/:id", {}, {
        query: {
            method: "GET",
            isArray: !0
        },
        get: {
            method: "GET",
            transformResponse: function(e) {
                return e = angular.fromJson(e)
            }
        },
        update: {
            method: "PUT"
        }
    })
}]), angular.module("sdlctoolApp").factory("TrainingGeneratedSlideNodeSearch", ["$resource", function(e) {
    return e("api/_search/trainingGeneratedSlideNodes/:query", {}, {
        query: {
            method: "GET",
            isArray: !0
        }
    })
}]), angular.module("sdlctoolApp").service("ImportAssistantHttp", ["$http", "$q", function(n, a) {
    var o = null;
    return {
        getTypes: function() {
            var t = a.defer();
            return o ? t.resolve(o) : n.get("/frontend-api/importer/types").then(function(e) {
                e = e.data;
                o = e, t.resolve(e)
            }).catch(function() {
                t.reject("The server responded with an invalid status code!")
            }), t.promise
        },
        apply: function(e) {
            var t = a.defer();
            return n.post("/frontend-api/importer/apply", e).then(function() {
                t.resolve()
            }).catch(function() {
                t.reject("The server responded with an invalid status code!")
            }), t.promise
        },
        getInstances: function(e) {
            var t = a.defer();
            return n.get("/frontend-api/importer/instances/{typeIdentifier}".replace("{typeIdentifier}", e)).then(function(e) {
                t.resolve(e.data)
            }).catch(function() {
                t.reject("The server responded with an invalid status code!")
            }), t.promise
        }
    }
}]), angular.module("sdlctoolApp").service("ImportAssistantState", function() {
    function e() {
        return {
            table: null,
            entities: null
        }
    }
    var t = e(),
        n = {
            reset: function() {
                t = e()
            }
        };
    return Object.defineProperty(n, "state", {
        get: function() {
            return t
        }
    }), n
}), angular.module("sdlctoolApp").service("ImportAssistantTable", ["$q", function(a) {
    var f = {
            rowToIndex: function(e) {
                if ("number" != typeof e && (e = parseInt(e)), !Number.isInteger(e)) throw new Error("Invalid row!");
                return e - 1
            },
            columnToIndex: function(e) {
                for (var t = e.split("").reverse().join("").toUpperCase(), n = 0, a = 0; a < t.length; a++) {
                    var o = t.charCodeAt(a);
                    if (o < 65 || 90 < o) throw new Error("Invalid column!");
                    0 < a && o++, n += Math.pow(26, a) * (o - 65)
                }
                return n
            },
            indexToRow: function(e) {
                return (e + 1).toString()
            },
            indexToColumn: function(e) {
                var t = "";
                do {
                    for (var n = 1; 26 * n <= e;) n *= 26
                } while (t += String.fromCharCode(65 + Math.floor(e / n)), e %= n, 1 < n && 0 == e && (t += "A"), 0 < e);
                return t
            },
            fromIndices: function(e, t) {
                var n = new Object;
                return Object.defineProperty(n, "column", {
                    get: function() {
                        return f.indexToColumn(t)
                    }
                }), Object.defineProperty(n, "row", {
                    get: function() {
                        return f.indexToRow(e)
                    }
                }), Object.defineProperty(n, "columnIndex", {
                    get: function() {
                        return t
                    }
                }), Object.defineProperty(n, "rowIndex", {
                    get: function() {
                        return e
                    }
                }), Object.defineProperty(n, "columnRowPair", {
                    get: function() {
                        return [n.column, n.row].join("")
                    }
                }), n
            },
            fromColumnRowPair: function(e) {
                var t = e.match(/([A-Z]+)([0-9]+)/);
                if (3 != t.length) throw new Error("Invalid column-row-pair: " + e);
                return f.fromIndices(f.rowToIndex(t[2]), f.columnToIndex(t[1]))
            },
            fromRange: function(e) {
                var t = e.split(":").map(f.fromColumnRowPair);
                if (2 != t.length) throw new Error("Invalid range: " + e);
                var n = new Object;
                return Object.defineProperty(n, "start", {
                    get: function() {
                        return t[0]
                    }
                }), Object.defineProperty(n, "end", {
                    get: function() {
                        return t[1]
                    }
                }), Object.defineProperty(n, "rows", {
                    get: function() {
                        return n.end.rowIndex - n.start.rowIndex
                    }
                }), Object.defineProperty(n, "columns", {
                    get: function() {
                        return n.end.columnIndex - n.start.columnIndex
                    }
                }), n
            }
        },
        e = {
            readTablesFromFile: function(e) {
                var n = a.defer(),
                    t = new FileReader;
                return t.onload = function(e) {
                    var h, t = new Uint8Array(e.target.result);
                    try {
                        h = XLSX.read(t, {
                            type: "array"
                        })
                    } catch (e) {
                        return void n.reject("Invalid input format!")
                    }
                    n.resolve(h.SheetNames.map(function(e) {
                        for (var t, n, a, o, i = h.Sheets[e], r = f.fromRange(i["!ref"]), s = r.columns, l = r.rows, c = new Array(s * l), d = r.start.columnIndex, u = r.start.rowIndex, p = 0; p < l; p++)
                            for (var m = 0; m < s; m++) {
                                var g = i[f.fromIndices(u + p, d + m).columnRowPair];
                                g ? c[p * s + m] = g.v : c[p * s + m] = null
                            }
                        return t = l, n = s, a = c, o = e, e = new Object, Object.defineProperty(e, "rows", {
                            get: function() {
                                return t
                            }
                        }), Object.defineProperty(e, "columns", {
                            get: function() {
                                return n
                            }
                        }), Object.defineProperty(e, "name", {
                            get: function() {
                                return o
                            }
                        }), e.getCellValue = function(e, t) {
                            return a[e * n + t]
                        }, e
                    }))
                }, t.onerror = function() {
                    n.reject("Reading the file failed!")
                }, t.onabort = function(e) {
                    n.reject("Reading the file was aborted!")
                }, t.readAsArrayBuffer(e), n.promise
            }
        };
    return Object.defineProperty(e, "ExcelUtil", {
        get: function() {
            return f
        }
    }), e
}]), angular.module("sdlctoolApp").service("ImportAssistantMapping", function() {
    function u() {
        for (var e = "c/"; e.length < 16;) {
            var t = Math.floor(128 * Math.random());
            (47 < t && t < 58 || 64 < t && t < 91 || 96 < t && t < 123) && (e += String.fromCharCode(t))
        }
        return e
    }
    return {
        createEntityMapping: function() {
            return {
                identifier: u(),
                typeIdentifier: null,
                attributes: new Array,
                replaceRule: "Ignore"
            }
        },
        createAttributeMapping: function() {
            return {
                attributeIdentifier: null,
                type: null,
                keyComponent: !1,
                entityMappingIdentifier: null,
                tableEntryIndex: null,
                value: null,
                jsExpr: null,
                existingEntityIdentifier: null
            }
        },
        performMappings: function(e, t, n, a) {
            for (var o = new Array, i = "row-wise" === n ? e.rows : e.columns, r = 0; r < i; r++)
                if (!a.includes(r)) {
                    var s = new Array;
                    if ("row-wise" === n)
                        for (var l = 0; l < e.columns; l++) s[l] = e.getCellValue(r, l);
                    else
                        for (var c = 0; c < e.rows; c++) s[c] = e.getCellValue(c, r);
                    var d = new Object;
                    t.forEach(function(e) {
                        d[e.identifier] = {
                            identifier: u(),
                            typeIdentifier: e.typeIdentifier,
                            attributes: null,
                            replaceRule: e.replaceRule
                        }
                    }), t.forEach(function(e) {
                        d[e.identifier].attributes = e.attributes.map(function(e) {
                            var t = {
                                attributeIdentifier: e.attributeIdentifier,
                                keyComponent: e.keyComponent
                            };
                            switch (e.type) {
                                case "ExistingEntity":
                                    t.valueType = "ExistingReference", t.value = e.existingEntityIdentifier;
                                    break;
                                case "JavaScript":
                                    t.valueType = "Value";
                                    var n = e.jsExpr,
                                        a = r,
                                        o = s;
                                    t.value = Function("i", "e", "return (" + n + ")").call(null, a, o);
                                    break;
                                case "MappedEntity":
                                    t.valueType = "PoolReference", t.value = d[e.entityMappingIdentifier].identifier;
                                    break;
                                case "TableEntry":
                                    t.valueType = "Value", t.value = s[e.tableEntryIndex];
                                    break;
                                case "Value":
                                    t.valueType = "Value", t.value = e.value
                            }
                            return t
                        })
                    }), Array.prototype.push.apply(o, Object.values(d))
                }
            return o
        }
    }
}), angular.module("sdlctoolApp").config(["$stateProvider", function(e) {
    e.state("importAssistantStep1", {
        parent: "site",
        url: "/import/step1",
        data: {
            roles: ["ROLE_ADMIN"]
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/importAssistant/step1.html",
                controller: "ImportAssistantStep1Controller"
            }
        },
        resolve: {}
    }).state("importAssistantStep2", {
        parent: "site",
        url: "/import/step2",
        data: {
            roles: ["ROLE_ADMIN"]
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/importAssistant/step2.html",
                controller: "ImportAssistantStep2Controller"
            }
        },
        resolve: {}
    }).state("importAssistantStep3", {
        parent: "site",
        url: "/import/step3",
        data: {
            roles: ["ROLE_ADMIN"]
        },
        views: {
            "content@": {
                templateUrl: "scripts/app/importAssistant/step3.html",
                controller: "ImportAssistantStep3Controller"
            }
        },
        resolve: {}
    })
}]), angular.module("sdlctoolApp").controller("ImportAssistantEntityChooser", ["$scope", "$stateParams", "$uibModalInstance", "ImportAssistantHttp", "typeIdentifier", function(e, t, n, a, o) {
    var i = new Array,
        r = new Array;
    e.getAttributeValue = function(e, t) {
        return e.attributes.find(function(e) {
            return e.attributeIdentifier === t
        }).value
    }, e.navigation = {
        closeButton: {
            handleClick: function() {
                n.dismiss("cancel")
            }
        },
        selectButton: {
            handleClick: function(e) {
                n.close(e)
            }
        }
    }, Object.defineProperty(e, "attributeNames", {
        get: function() {
            return i
        }
    }), Object.defineProperty(e, "existingEntities", {
        get: function() {
            return r
        }
    }), a.getInstances(o).then(function(e) {
        Array.prototype.push.apply(r, e), r.forEach(function(e) {
            e.attributes.forEach(function(e) {
                0 <= i.indexOf(e.attributeIdentifier) || i.push(e.attributeIdentifier)
            })
        })
    })
}]), angular.module("sdlctoolApp").controller("ImportAssistantStep1Controller", ["$scope", "$state", "ImportAssistantState", "ImportAssistantTable", function(n, t, a, e) {
    var o = null,
        i = null,
        r = $('<input type="file" accept=".csv,.xls,.xlsx" style="display: none;">').appendTo(document.body).on("change", function() {
            var e = r.get(0);
            e.files && 0 < e.files.length && n.$apply(function() {
                n.fileBox.selectedFile = e.files[0]
            })
        });
    a.reset(), n.fileBox = {
        selectedTableIndex: null,
        handleDragover: function(e) {
            e.preventDefault()
        },
        handleDrop: function(e) {
            e.preventDefault();
            e = "dataTransfer" in e.originalEvent ? e.originalEvent.dataTransfer : null;
            e && e.files && (e.files.length < 1 || (n.fileBox.selectedFile = e.files[0]))
        },
        handleClick: function() {
            n.fileBox.selectedFile || r.click()
        },
        resetButton: {
            handleClick: function(e) {
                e.stopPropagation(), n.fileBox.selectedFile = null
            }
        }
    }, Object.defineProperty(n.fileBox, "selectedFile", {
        get: function() {
            return o
        },
        set: function(t) {
            if (!t) return i = o = null, void(n.selectedTableIndex = null);
            e.readTablesFromFile(t).then(function(e) {
                o = t, i = e, n.selectedTableIndex = null
            })
        }
    }), Object.defineProperty(n.fileBox, "availableTables", {
        get: function() {
            return i
        }
    }), Object.defineProperty(n.fileBox, "selectedTable", {
        get: function() {
            return n.fileBox.availableTables && n.fileBox.selectedTableIndex ? n.fileBox.availableTables[n.fileBox.selectedTableIndex] : null
        }
    }), n.navigation = {
        continueButton: {
            handleClick: function() {
                var e = n.fileBox.selectedTable;
                e && (a.state.table = e, t.go("importAssistantStep2"))
            }
        }
    }, Object.defineProperty(n.navigation.continueButton, "enabled", {
        get: function() {
            return !!n.fileBox.selectedTable
        }
    })
}]), angular.module("sdlctoolApp").controller("ImportAssistantStep2Controller", ["$scope", "$state", "$uibModal", "ImportAssistantState", "ImportAssistantTable", "ImportAssistantMapping", "ImportAssistantHttp", function(a, t, e, n, o, i, r) {
    var s, l;
    n.state.table ? (s = n.state.table, l = new Array, a.generalSettings = {
        selectedEntryType: "row-wise"
    }, Object.defineProperty(a.generalSettings, "ignoredTableEntries", {
        get: function() {
            var e;
            switch (a.generalSettings.selectedEntryType) {
                case "row-wise":
                    e = l.map(o.ExcelUtil.indexToRow);
                    break;
                case "column-wise":
                    e = l.map(o.ExcelUtil.indexToColumn)
            }
            return e.join(", ")
        },
        set: function(e) {
            e = e.split(",").map(function(e) {
                e = e.trim();
                try {
                    switch (a.generalSettings.selectedEntryType) {
                        case "row-wise":
                            return o.ExcelUtil.rowToIndex(e);
                        case "column-wise":
                            return o.ExcelUtil.columnToIndex(e)
                    }
                } catch (e) {}
                return null
            }).filter(function(e) {
                return null !== e
            });
            l = e.reduce(function(e, t) {
                return e.includes(t) || e.push(t), e
            }, new Array)
        }
    }), a.gridView = {
        columnHeaders: new Array(s.columns).fill(0).map(function(e, t) {
            return o.ExcelUtil.indexToColumn(t)
        }),
        rowHeaders: new Array(s.rows).fill(0).map(function(e, t) {
            return o.ExcelUtil.indexToRow(t)
        }),
        getCellValue: function(e, t) {
            return s.getCellValue(e, t)
        }
    }, a.mappingBox = {
        mappings: new Array,
        getEntityMappingTitle: function(t) {
            return a.mappingBox.editor.availableTypes.find(function(e) {
                return e.identifier === t.typeIdentifier
            }).displayName + " (" + t.identifier + ")"
        },
        getEntityTypeAttribute: function(t, n) {
            return a.mappingBox.editor.availableTypes.find(function(e) {
                return e.identifier === t
            }).attributes.find(function(e) {
                return e.identifier === n
            })
        },
        getEntityMapping: function(t) {
            return a.mappingBox.mappings.find(function(e) {
                return e.identifier === t
            })
        },
        getTableEntryName: function(e) {
            switch (a.generalSettings.selectedEntryType) {
                case "row-wise":
                    return a.gridView.columnHeaders[e];
                case "column-wise":
                    return a.gridView.rowHeaders[e]
            }
        },
        removeButton: {
            handleClick: function(e) {
                a.mappingBox.mappings.splice(a.mappingBox.mappings.indexOf(e), 1)
            }
        },
        editor: {
            mapping: i.createEntityMapping(),
            availableTypes: new Array,
            addButton: {
                handleClick: function() {
                    a.mappingBox.mappings.push(a.mappingBox.editor.mapping), a.mappingBox.editor.mapping = i.createEntityMapping()
                }
            },
            attributes: {
                removeButton: {
                    handleClick: function(e) {
                        a.mappingBox.editor.mapping.attributes.splice(a.mappingBox.editor.mapping.attributes.indexOf(e), 1)
                    }
                },
                addButton: {
                    handleClick: function() {
                        a.mappingBox.editor.mapping.attributes.push(i.createAttributeMapping())
                    }
                },
                chooseEntityButton: {
                    handleClick: function(t) {
                        e.open({
                            templateUrl: "scripts/app/importAssistant/entityChooser.html",
                            controller: "ImportAssistantEntityChooser",
                            size: "lg",
                            resolve: {
                                typeIdentifier: function() {
                                    return a.mappingBox.editor.attributes.getType(t).type.referenceIdentifier
                                }
                            }
                        }).result.then(function(e) {
                            t.existingEntityIdentifier = e.identifier
                        })
                    }
                },
                getType: function(t) {
                    var e = a.mappingBox.editor.selectedEntityType;
                    if (e) return e.attributes.find(function(e) {
                        return e.identifier === t.attributeIdentifier
                    })
                },
                getEntityMappings: function(t) {
                    return a.mappingBox.mappings.filter(function(e) {
                        return e.typeIdentifier === t
                    })
                }
            }
        }
    }, Object.defineProperty(a.mappingBox.editor, "selectedEntityType", {
        get: function() {
            return a.mappingBox.editor.mapping.typeIdentifier ? a.mappingBox.editor.availableTypes.find(function(e) {
                return e.identifier === a.mappingBox.editor.mapping.typeIdentifier
            }) : null
        }
    }), Object.defineProperty(a.mappingBox.editor.attributes, "tableEntries", {
        get: function() {
            switch (a.generalSettings.selectedEntryType) {
                case "row-wise":
                    return a.gridView.columnHeaders;
                case "column-wise":
                    return a.gridView.rowHeaders
            }
        }
    }), Object.defineProperty(a.mappingBox.editor, "replaceRules", {
        value: ["Duplicate", "Ignore", "Replace"],
        writable: !1
    }), Object.defineProperty(a.mappingBox.editor.addButton, "enabled", {
        get: function() {
            return !!a.mappingBox.editor.mapping.typeIdentifier && (!!a.mappingBox.editor.mapping.replaceRule && a.mappingBox.editor.mapping.attributes.every(function(e) {
                if (!e.attributeIdentifier) return !1;
                if (!e.type) return !1;
                switch (e.type) {
                    case "ExistingEntity":
                        if (!e.existingEntityIdentifier) return !1;
                        break;
                    case "JavaScript":
                        if (!e.jsExpr) return !1;
                        break;
                    case "MappedEntity":
                        if (!e.entityMappingIdentifier) return !1;
                        break;
                    case "TableEntry":
                        if (!e.tableEntryIndex) return !1;
                        break;
                    case "Value":
                        if (!e.value) return !1
                }
                return !0
            }))
        }
    }), a.navigation = {
        cancelButton: {
            handleClick: function() {
                n.reset(), t.go("editor")
            }
        },
        continueButton: {
            handleClick: function() {
                var e = i.performMappings(s, a.mappingBox.mappings, a.generalSettings.selectedEntryType, l);
                n.state.entities = e, t.go("importAssistantStep3")
            }
        }
    }, angular.element(document).ready(function() {
        $("#grid-view").DataTable({
            scrollX: !0,
            scrollY: !0,
            pageLength: 3,
            lengthMenu: [1, 2, 3, 5, 10, 20, 50]
        })
    }), r.getTypes().then(function(e) {
        Array.prototype.push.apply(a.mappingBox.editor.availableTypes, e), a.mappingBox.editor.availableTypes.sort(function(e, t) {
            return e.displayName > t.displayName ? 1 : e.displayName === t.displayName ? 0 : -1
        })
    })) : t.go("importAssistantStep1")
}]), angular.module("sdlctoolApp").controller("ImportAssistantStep3Controller", ["$scope", "$state", "ImportAssistantState", "ImportAssistantHttp", function(e, t, n, a) {
    var o;
    n.state.entities ? (o = n.state.entities, e.tableViews = o.reduce(function(e, t) {
        var n = e.find(function(e) {
            return e.typeIdentifier === t.typeIdentifier
        });
        n || (n = {
            entities: new Array,
            typeIdentifier: t.typeIdentifier,
            attributes: new Array
        }, e.push(n)), n.entities.push(t);
        for (var a = 0; a < t.attributes.length; a++) {
            var o = t.attributes[a].attributeIdentifier;
            n.attributes.includes(o) || n.attributes.push(o)
        }
        return e
    }, new Array), e.getAttribute = function(e, t) {
        return e.attributes.find(function(e) {
            return e.attributeIdentifier === t
        })
    }, e.navigation = {
        cancelButton: {
            handleClick: function() {
                n.reset(), t.go("editor")
            }
        },
        applyButton: {
            handleClick: function() {
                a.apply(o), t.go("editor")
            }
        }
    }) : t.go("importAssistantStep1")
}]), angular.module("sdlctoolApp").run(["$templateCache", function(e) {
    "use strict";
    e.put("scripts/app/account/activate/activate.html", '<div> <div class=row> <div class="col-md-8 col-md-offset-2"> <h1>ActivaciÃ³n</h1> <div class="alert alert-success" ng-show=success> <strong>Tu usuario ha sido activado.</strong> Por favor <a ui-sref=login>inicie sesiÃ³n</a>. </div> <div class="alert alert-danger" ng-show=error> <strong>Tu usuario no pudo ser activado.</strong> Utilice el formulario de registro para registrarse. </div> </div> </div> </div> '), e.put("scripts/app/account/confirmPassword/confirmPassword.html", '<div> <div class=row> <div class="col-md-4 col-md-offset-4"> <h1>Confirmar contraseÃ±a</h1> \x3c!-- <div class="alert alert-danger" data-ng-show="authenticationError">\n                <strong>!ContraseÃ±a incorrecta!</strong> .\n            </div> --\x3e <br> <form class=form role=form data-ng-submit=confirm($event)> <div class=form-group> <label for=password>ContraseÃ±a</label> <input type=password class=form-control id=password placeholder="ContraseÃ±a" data-ng-model=password data-ng-class={wrongPassword:authenticationError} uib-popover="Â¡Error en la confirmaciÃ³n de la contraseÃ±a! Por favor, compruebe su entrada y vuelva a intentarlo." popover-enable={{authenticationError}} popover-placement=right popover-trigger=mouseenter popover-append-to-body=true popover-class=wrongPasswordTooltip /> </div> <button type=submit class="btn btn-primary">Confirm</button> </form> </div> </div> </div> '), e.put("scripts/app/account/login/login.html", '<div> <div class=row> <div class="col-md-4 col-md-offset-4"> <h1>Iniciar SesiÃ³n</h1> <div class="alert alert-danger" data-ng-show=authenticationError id=loginError> <strong>Â¡Inicio de sesiÃ³n fallo!</strong> Please check your credentials and try again. </div> <form class=form role=form data-ng-submit=login($event)> <div class=form-group> <label for=username>Usuario</label> <input class=form-control id=username placeholder="Usuario" data-ng-model=username> </div> <div class=form-group> <label for=password>ContraseÃ±a</label> <input type=password class=form-control id=password placeholder="ContraseÃ±a" data-ng-model=password /> </div> <div class=form-group> <label for=rememberMe> <input type=checkbox id=rememberMe data-ng-model=rememberMe checked> <span>Recuerdame</span> </label> </div> <button type=submit class="btn btn-primary">Iniciar SesiÃ³n</button> </form> <p></p> <div class="alert alert-warning"> <a ui-sref=requestReset>Â¿Olvidaste tu contraseÃ±a?</a> </div> <div class="alert alert-warning" data-ng-class="{hidden: !REGISTRATIONTYPE}"> Â¿TodavÃ­a no tienes una cuenta? <a ui-sref=register>Registrar una nueva cuenta</a> </div> </div> </div> </div> '), e.put("scripts/app/account/logout/logout.html", '<div data-ng-cloak> <div class=row> <div class=col-md-4> </div> <div class=col-md-4> <div class="alert alert-success"> <h1 class=text-center>SecurityRAT!</h1> <p class="lead text-center">Cierre de sesiÃ³n exitoso</p> </div> <div class="alert alert-warning"> Â¿Tienes una cuenta? <a ui-sref=login>Autenticar</a> </div> <div class="alert alert-warning" data-ng-show="REGISTRATIONTYPE && !AUTHENTICATIONTYPE"> Â¿TodavÃ­a no tienes una cuenta? <a ui-sref=register>Registrar una nueva cuenta</a> </div>  </div> </div> </div> '), e.put("scripts/app/account/password/password.html", '<div> <div class=row> <div class="col-md-8 col-md-offset-2"> <h2>ContraseÃ±a para [<strong>{{account.login}}</strong>]</h2> <div uib-alert class="alert alert-success" data-ng-show=success dismiss-on-timeout=5000 id=success> <strong>Â¡ContraseÃ±a cambiada!</strong> </div> <div class="alert alert-danger" data-ng-show=error> <strong>RecuerdameÂ¡Se ha producido un error!</strong> No se pudo cambiar la contraseÃ±a.</div> <div class="alert alert-danger" data-ng-show=doNotMatch> Â¡La contraseÃ±a y su confirmaciÃ³n no coinciden!</div> <form name=form role=form novalidate data-ng-submit=changePassword() show-validation> <div class=form-group> <label for=password>Nueva contraseÃ±a</label> <input type=password class=form-control id=password name=password placeholder="ContraseÃ±a" data-ng-model=password data-ng-minlength=8 data-ng-maxlength=50 data-ng-pattern=passwordPattern required> <div data-ng-show="form.password.$dirty && form.password.$invalid"> <p class=help-block data-ng-show=form.password.$error.required> Tu contraseÃ±a es requerida. </p> <p class=help-block data-ng-show=form.password.$error.minlength> Su contraseÃ±a debe tener al menos 8 caracteres. </p> <p class=help-block data-ng-show=form.password.$error.maxlength> Su contraseÃ±a no puede tener mÃ¡s de 50 caracteres. </p> <div class=help-block data-ng-show=form.password.$error.pattern> <p>Su contraseÃ±a debe tener:</p> <ul> <li>al menos <strong>una</strong> mayÃºscula</li> <li>al menos <strong>una</strong> minÃºscula</li> <li>al menos <strong>un</strong> dÃ­gito</li> <li>al menos <strong>un</strong> sÃ­mbolo</li> </ul> Caracteres permitidos: <ul><li><strong>A-Z, a-z, 0-9</strong></li></ul> SÃ­mbolos permitidos <ul><li><strong>!"#$%&\'()*+,-./:;&lt;&gt;=?@[]^_`{|}~</strong></li></ul> </div> </div> <password-strength-bar password-to-check=password></password-strength-bar> </div> <div class=form-group> <label for=confirmPassword>Nueva contraseÃ±a</label> <input type=password class=form-control id=confirmPassword name=confirmPassword placeholder="Confirme la nueva contraseÃ±a" data-ng-model=confirmPassword data-ng-minlength=8 data-ng-maxlength=50 data-ng-pattern=passwordPattern required> <div data-ng-show="form.confirmPassword.$dirty && form.confirmPassword.$invalid"> <p class=help-block data-ng-show=form.confirmPassword.$error.required> Se requiere su contraseÃ±a de confirmaciÃ³n. </p> <p class=help-block data-ng-show=form.confirmPassword.$error.minlength> Su contraseÃ±a de confirmaciÃ³n debe tener al menos 8 caracteres. </p> <p class=help-block data-ng-show=form.confirmPassword.$error.maxlength> Su contraseÃ±a de confirmaciÃ³n no puede tener mÃ¡s de 50 caracteres. </p> <div class=help-block data-ng-show=form.confirmPassword.$error.pattern> <p>Su contraseÃ±a debe tener:</p> <ul> <li>al menos <strong>una</strong> mayÃºscula</li> <li>al menos <strong>una</strong> minÃºscula</li> <li>al menos <strong>un</strong> dÃ­gito</li> <li>al menos <strong>un</strong> sÃ­mbolo</li> </ul> Caracteres permitidos: <ul><li><strong>A-Z, a-z, 0-9</strong></li></ul> SÃ­mbolos permitidos <ul><li><strong>!"#$%&\'()*+,-./:;&lt;&gt;=?@[]^_`{|}~</strong></li></ul> </div> </div> </div> <button type=submit data-ng-disabled=form.$invalid class="btn btn-primary">Guardar</button> </form> </div> </div> </div> '), e.put("scripts/app/account/register/register.html", '<div> <div class=row> <div class="col-md-8 col-md-offset-2"> <h1>Registro</h1> <div class="alert alert-success" data-ng-show=success id=successReg> <strong>Â¡Registro exitoso!</strong> Por favor revise su correo electrÃ³nico para confirmaciÃ³n. </div> <div class="alert alert-danger" data-ng-show=error id=failReg> <strong>Registration failed!</strong> Please try again later. </div> <div class="alert alert-danger" data-ng-show=errorUserExists id=userExist> <strong>Â¡Nombre de inicio de sesiÃ³n ya registrado!</strong> Please choose another one. </div> <div class="alert alert-danger" data-ng-show=errorEmailExists id=wrongEmail> <strong>Â¡Correo electrÃ³nico ya estÃ¡ en uso!</strong> Please choose another one. </div> <div class="alert alert-danger" data-ng-show=doNotMatch id=PassNotMatch> Â¡La contraseÃ±a y su confirmaciÃ³n no coinciden! </div> <form data-ng-show=!success name=form role=form novalidate data-ng-submit=register() show-validation> <div class=form-group> <label for=firstName>Nombre</label> <input class=form-control id=firstName name=firstName placeholder="Nombre" data-ng-model=registerAccount.firstName data-ng-maxlength=50 required> <div data-ng-show="form.firstName.$dirty && form.firstName.$invalid"> <p class=help-block data-ng-show=form.firstName.$error.required> Su nombre es requerido. </p> <p class=help-block data-ng-show=form.firstName.$error.maxlength> Su nombre no puede tener mas de 30 caracteres. </p> </div> </div> <div class=form-group> <label for=firstName>Apellido</label> <input class=form-control id=lastName name=lastName placeholder="Apellido" data-ng-model=registerAccount.lastName data-ng-maxlength=50 required> <div data-ng-show="form.lastName.$dirty && form.lastName.$invalid"> <p class=help-block data-ng-show=form.lastName.$error.required> Su apellido es requerido. </p> <p class=help-block data-ng-show=form.lastName.$error.maxlength> Su apellido no puede tener mÃ¡s de 50 caracteres. </p> </div> </div> <div class=form-group> <label for=login>Usuario</label> <input class=form-control id=login name=login placeholder="Usuario" data-ng-model=registerAccount.login data-ng-maxlength=50 data-ng-pattern=/^[a-z0-9]*$/ required> <div data-ng-show="form.login.$dirty && form.login.$invalid"> <p class=help-block data-ng-show=form.login.$error.required> Su nombre de usuario es requerido. </p> <p class=help-block data-ng-show=form.login.$error.maxlength> Su nombre de usuario no puede tener mas de 50 caracteres </p> <p class=help-block data-ng-show=form.login.$error.pattern id=patternLoginError> Su nombre de usuario solo puede contener letras minÃºsculas y dÃ­gitos. </p> </div> </div> <div class=form-group> <label for=email>E-mail</label> <input type=email class=form-control id=email name=email placeholder="e-mail" data-ng-model=registerAccount.email data-ng-minlength=5 data-ng-maxlength=100 required> <div data-ng-show="form.email.$dirty && form.email.$invalid"> <p class=help-block data-ng-show=form.email.$error.required> Su e-mail es requerido. </p> <p class=help-block data-ng-show=form.email.$error.email id=emailError> Su e-mail es invalido. </p> <p class=help-block data-ng-show=form.email.$error.minlength> Su e-mail es requerido debe tener al menos 5 caracteres. </p> <p class=help-block data-ng-show=form.email.$error.maxlength> Su e-mail no puede tener mÃ¡s de 100 caracteres. </p> </div> </div> <div class=form-group> <label for=password>ContraseÃ±a Nueva</label> <input type=password class=form-control id=password name=password placeholder="ContraseÃ±a" data-ng-model=registerAccount.password data-ng-minlength=8 data-ng-maxlength=50 data-ng-pattern=passwordPattern required> <div data-ng-show="form.password.$dirty && form.password.$invalid"> <p class=help-block data-ng-show=form.password.$error.required> Tu contraseÃ±a es requerida. </p> <p class=help-block data-ng-show=form.password.$error.minlength id=minlengthPass> Su contraseÃ±a debe tener al menos 8 caracteres. </p> <p class=help-block data-ng-show=form.password.$error.maxlength> Su contraseÃ±a no puede tener mÃ¡s de 50 caracteres. </p> <div class=help-block data-ng-show=form.password.$error.pattern id=patternPassError> <p>Su contraseÃ±a debe tener:</p> <ul> <li>al menos <strong>una</strong> mayÃºscula</li> <li>al menos <strong>una</strong> minÃºscula</li> <li>al menos <strong>un</strong> dÃ­gito</li> <li>al menos <strong>un</strong> sÃ­mbolo</li> </ul> Caracteres permitidos: <ul><li><strong>A-Z, a-z, 0-9</strong></li></ul> SÃ­mbolos permitidos <ul><li><strong>!"#$%&\'()*+,-./:;&lt;&gt;=?@[]^_`{|}~</strong></li></ul> </div> </div> <password-strength-bar password-to-check=registerAccount.password></password-strength-bar> </div> <div class=form-group> <label for=confirmPassword>ConfrmaciÃ³n de nueva contraseÃ±a</label> <input type=password class=form-control id=confirmPassword name=confirmPassword placeholder="ContraseÃ±a" data-ng-model=confirmPassword data-ng-minlength=8 data-ng-maxlength=50 data-ng-pattern=passwordPattern required> <div data-ng-show="form.confirmPassword.$dirty && form.confirmPassword.$invalid"> <p class=help-block data-ng-show=form.confirmPassword.$error.required> Se requiere su contraseÃ±a de confirmaciÃ³n. </p> <p class=help-block data-ng-show=form.confirmPassword.$error.minlength> Su contraseÃ±a debe tenerSu contraseÃ±a de confirmaciÃ³n debe tener al menos 8 caracteres. </p> <p class=help-block data-ng-show=form.confirmPassword.$error.maxlength> Su contraseÃ±a de confirmaciÃ³n no puede tener mÃ¡s de 50 caracteres. </p> <div class=help-block data-ng-show=form.password.$error.pattern> <p>Su contraseÃ±a debe tener:</p> <ul> <li>al menos <strong>una</strong> mayÃºscula</li> <li>al menos <strong>una</strong> minÃºscula</li> <li>al menos <strong>un</strong> dÃ­gito</li> <li>al menos <strong>un</strong> sÃ­mbolo</li> </ul> Caracteres permitidos: <ul><li><strong>A-Z, a-z, 0-9</strong></li></ul> SÃ­mbolos permitidos <ul><li><strong>!"#$%&\'()*+,-./:;&lt;&gt;=?@[]^_`{|}~</strong></li></ul> </div> </div> </div> <button type=submit data-ng-disabled=form.$invalid class="btn btn-primary">Registrar</button> </form> <p></p> </div> </div> </div> '), e.put("scripts/app/account/reset/finish/reset.finish.html", '<div> <div class=row> <div class="col-md-4 col-md-offset-4"> <h1>Restablecer contraseÃ±a</h1> <div class="alert alert-danger" data-ng-show=keyMissing> <strong>Falta la clave de restablecimiento de contraseÃ±a.</strong> </div> <div class="alert alert-warning" data-ng-hide="success || keyMissing"> <p>Choose a ContraseÃ±a nueva</p> </div> <div class="alert alert-danger" data-ng-show=error> <p>Falta la clave de restablecimiento de contraseÃ±a.No se pudo restablecer su contraseÃ±a. Recuerde que una solicitud de contraseÃ±a solo es vÃ¡lida durante 24 horas.</p> </div> <div class="alert alert-success" data-ng-show=success> <p><strong>Su contraseÃ±a se ha restablecido.</strong> Please <a ui-sref=login>authenticate</a>.</p> </div> <div class="alert alert-danger" data-ng-show=doNotMatch> Â¡La contraseÃ±a y su confirmaciÃ³n no coinciden! </div> <div data-ng-hide=keyMissing> <form data-ng-show=!success name=form role=form novalidate data-ng-submit=finishReset() show-validation> <div class=form-group> <label for=password>ContraseÃ±a nueva</label> <input type=password class=form-control id=password name=password placeholder="ContraseÃ±a nueva" data-ng-model=resetAccount.password data-ng-minlength=8 data-ng-maxlength=50 data-ng-pattern=passwordPattern required> <div data-ng-show="form.password.$dirty && form.password.$invalid"> <p class=help-block data-ng-show=form.password.$error.required> Tu contraseÃ±a es requerida. </p> <p class=help-block data-ng-show=form.password.$error.minlength> Su contraseÃ±a debe tener al menos 8 caracteres. </p> <p class=help-block data-ng-show=form.password.$error.maxlength> Su contraseÃ±a no puede tener mÃ¡s de 50 caracteres. </p> <div class=help-block data-ng-show=form.password.$error.pattern> <p>Su contraseÃ±a debe tener:</p> <ul> <li>al menos <b>one</b> mayÃºscula</li> <li>al menos <b>one</b> minÃºscula</li> <li>al menos <b>one</b> dÃ­gito</li> <li>al menos <b>one</b> sÃ­mbolo</li> </ul> Caracteres permitidos: <ul><li><b>A-Z, a-z, 0-9</b></li></ul> SÃ­mbolos permitidos <ul><li><b>!"#$%&\'()*+,-./:;&lt;&gt;=?@[]^_`{|}~</b></li></ul> </div> </div> <password-strength-bar password-to-check=resetAccount.password></password-strength-bar> </div> <div class=form-group> <label for=confirmPassword>confirmaciÃ³n de nueva contraseÃ±a</label> <input type=password class=form-control id=confirmPassword name=confirmPassword placeholder="Confirme la nueva contraseÃ±a" data-ng-model=confirmPassword data-ng-minlength=8 data-ng-maxlength=50 data-ng-pattern=passwordPattern required> <div data-ng-show="form.confirmPassword.$dirty && form.confirmPassword.$invalid"> <p class=help-block data-ng-show=form.confirmPassword.$error.required> Se requiere la confirmaciÃ³n de su contraseÃ±a.</p> <p class=help-block data-ng-show=form.confirmPassword.$error.minlength> Se requiere que la confirmaciÃ³n de su contraseÃ±a tenga al menos 8 caracteres. </p> <p class=help-block data-ng-show=form.confirmPassword.$error.maxlength> La confirmaciÃ³n de su contraseÃ±a no puede tener mÃ¡s de 50 caracteres. </p> <div class=help-block data-ng-show=form.confirmPassword.$error.pattern> <p>Su contraseÃ±a debe tener:</p> <ul> <li>al menos <b>one</b> mayÃºscula</li> <li>al menos <b>one</b> minÃºscula</li> <li>al menos <b>one</b> dÃ­gito</li> <li>al menos <b>one</b> sÃ­mbolo</li> </ul> Caracteres permitidos: <ul><li><b>A-Z, a-z, 0-9</b></li></ul> SÃ­mbolos permitidos <ul><li><b>!"#$%&\'()*+,-./:;&lt;&gt;=?@[]^_`{|}~</b></li></ul> </div> </div> </div> <button type=submit data-ng-disabled=form.$invalid class="btn btn-primary">Restablecer contraseÃ±a</button> </form> </div> </div> </div> </div> '), e.put("scripts/app/account/reset/request/reset.request.html", '<div> <div class=row> <div class="col-md-8 col-md-offset-2"> <h1>Restablecer contraseÃ±a</h1> <div class="alert alert-danger" data-ng-show=errorEmailNotExists> <strong>Â¡La direcciÃ³n de correo electrÃ³nico no estÃ¡ registrada!</strong> Please check and try again. </div> <div class="alert alert-warning" data-ng-hide=success> <p>Introduzca la direcciÃ³n de correo electrÃ³nico que utilizÃ³ para registrarse.</p> </div> <div class="alert alert-success" data-ng-show="success == \'OK\'"> <p>Check your e-mails for details on how to Restablecer contraseÃ±a.</p> </div> <form data-ng-show=!success name=form role=form novalidate data-ng-submit=requestReset() show-validation> <div class=form-group> <label for=email>E-mail</label> <input type=email class=form-control id=email name=email placeholder="e-mail" data-ng-model=resetAccount.email data-ng-minlength=5 data-ng-maxlength=100 required> <div data-ng-show="form.email.$dirty && form.email.$invalid"> <p class=help-block data-ng-show=form.email.$error.required> Su e-mail es requerido. </p> <p class=help-block data-ng-show=form.email.$error.email> Su e-mail es invalido. </p> <p class=help-block data-ng-show=form.email.$error.minlength> Su e-mail es requerido debe tener al menos 5 caracteres. </p> <p class=help-block data-ng-show=form.email.$error.maxlength> Su e-mail no puede tener mÃ¡s de 100 caracteres. </p> </div> </div> <button type=submit data-ng-disabled=form.$invalid class="btn btn-primary">Reset</button> </form> </div> </div> </div> '), e.put("scripts/app/account/sessions/sessions.html", '<div> <h2>Sesiones activas para [<b>{{account.login}}</b>]</h2> <div class="alert alert-success" ng-show=success> <strong>Â¡Su SesiÃ³n fue cerrada exitosamente!</strong> </div> <div class="alert alert-danger" ng-show=error> <strong>Â¡Un error ha ocurrido!</strong> The session could not be invalidated. </div> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> <th>IP Address</th> <th>User agent</th> <th>Fecha</th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="session in sessions"> <td>{{session.ipAddress}}</td> <td>{{session.userAgent}}</td> <td>{{session.formattedTokenDate}}</td> <td> <button type=submit class="btn btn-primary" ng-click=invalidate(session.series)> Invalidar </button> </td> </tr> </tbody> </table> </div> </div> '), e.put("scripts/app/account/settings/settings.html", '<div> <div class=row> <div class="col-md-8 col-md-offset-2"> <h2>ConfiguraciÃ³n de usuario para [<b>{{settingsAccount.login}}</b>]</h2> <div class="alert alert-success" data-ng-show=success> <strong>Â¡Ajustes guardados!</strong> </div> <div class="alert alert-danger" data-ng-show=errorEmailExists> <strong>Â¡Correo electrÃ³nico ya estÃ¡ en uso!</strong> Please choose another one. </div> <div class="alert alert-danger" data-ng-show=errorUserExists> <strong>Â¡Nombre de usuario ya registrado!</strong> Please choose another one. </div> <div class="alert alert-danger" data-ng-show=error> <strong>!Ha ocurrido un error!</strong> No se pudieron guardar los ajustes. </div> <form name=form role=form novalidate data-ng-submit=save() show-validation> <div class=form-group> <label for=firstName>Nombre</label> <input class=form-control id=firstName name=firstName placeholder="Nombre" data-ng-model=settingsAccount.firstName data-ng-minlength=1 data-ng-maxlength=50 required> <div data-ng-show="form.firstName.$dirty && form.firstName.$invalid"> <p class=help-block data-ng-show=form.firstName.$error.required> Su nombre es requerido. </p> <p class=help-block data-ng-show=form.firstName.$error.minlength> Su nombre es requerido, debe tener al menos 1 caracter. </p> <p class=help-block data-ng-show=form.firstName.$error.maxlength> Su nombre no puede tener mÃ¡s de 50 caracteres. </p> </div> </div> <div class=form-group> <label for=lastName>Apellido</label> <input class=form-control id=lastName name=lastName placeholder="Apellido" data-ng-model=settingsAccount.lastName data-ng-minlength=1 data-ng-maxlength=50 required> <div data-ng-show="form.lastName.$dirty && form.lastName.$invalid"> <p class=help-block data-ng-show=form.lastName.$error.required> Su apellido es requerido. </p> <p class=help-block data-ng-show=form.lastName.$error.minlength> Su apellido es requerido al menos debe tener 1 caracter. </p> <p class=help-block data-ng-show=form.lastName.$error.maxlength> Su apellido no puede tener mÃ¡s de 50 caracteres. </p> </div> </div> <div class=form-group> <label for=email>E-mail</label> <input type=email class=form-control id=email name=email placeholder="e-mail" data-ng-model=settingsAccount.email data-ng-minlength=5 data-ng-maxlength=100 required> <div data-ng-show="form.email.$dirty && form.email.$invalid"> <p class=help-block data-ng-show=form.email.$error.required> Su e-mail es requerido. </p> <p class=help-block data-ng-show=form.email.$error.email> Su e-mail es invalido. </p> <p class=help-block data-ng-show=form.email.$error.minlength> Su e-mail es requerido debe tener al menos 5 caracteres. </p> <p class=help-block data-ng-show=form.email.$error.maxlength> Su e-mail no puede tener mÃ¡s de 100 caracteres. </p> </div> </div> <button type=submit data-ng-disabled=form.$invalid class="btn btn-primary">Guardar</button> </form> </div> </div> </div> '), e.put("scripts/app/admin/audits/audits.html", '<div> <h2 class=page-header>AuditorÃ­a</h2> <div class=row> <div class=col-md-5> <h4>Filtrar por dato</h4> <p class=input-group> <span class=input-group-addon>Desde</span> <input type=date class="input-sm form-control" name=start ng-model=fromDate ng-change=onChangeDate() required/> <span class=input-group-addon>Hasta</span> <input type=date class="input-sm form-control" name=end ng-model=toDate ng-change=onChangeDate() required/> </p> </div> </div> <table class="table table-condensed table-striped table-bordered table-responsive"> <thead> <tr> <th ng-click="predicate = \'timestamp\'; reverse=!reverse"><span>Fecha</span></th> <th ng-click="predicate = \'principal\'; reverse=!reverse"><span>Usuario</span></th> <th ng-click="predicate = \'type\'; reverse=!reverse"><span>Registro</span></th> <th ng-click="predicate = \'data.message\'; reverse=!reverse"><span>Datos adicionales</span></th> </tr> </thead> <tr ng-repeat="audit in audits | filter:filter | orderBy:predicate:reverse" ng-hide=audit.filtered> <td><span>{{audit.timestamp| date:\'medium\'}}</span></td> <td><small>{{audit.principal}}</small></td> <td>{{audit.type}}</td> <td> <span ng-show=audit.data.message>{{audit.data.message}}</span> <span ng-show=audit.data.remoteAddress><span>Remote Address</span> {{audit.data.remoteAddress}}</span> </td> </tr> </table> </div> '), e.put("scripts/app/admin/configConstant/configConstant-detail.html", ' <div> <h2><span>Constante</span> {{constant.id}}</h2> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> <th>Field</th> <th>Valor</th> </tr> </thead> <tbody> <tr> <td> <span>Nombre</span> </td> <td> <span class=form-control-static>{{constant.name}}</span> </td> </tr> <tr> <td> <span>Valor</span> </td> <td> <span class=form-control-static>{{constant.value}}</span> </td> </tr> <tr> <td> <span>DescripciÃ³n</span> </td> <td> <span class=form-control-static>{{constant.description}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class="btn btn-info"> <span class="glyphicon glyphicon-arrow-left"></span>&nbsp;<span> Back</span> </button> </div> '), e.put("scripts/app/admin/configConstant/configConstant-dialog.html", ' <form name=editForm role=form novalidate data-ng-submit=save()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title id=myConfigConstantLabel>Edit a Constant</h4> \x3c!-- Crear o editar una Constante --\x3e </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id>ID</label> <input class=form-control id=id name=id data-ng-model=constant.id readonly> </div> <div class=form-group> <label for=field_name>Nombre</label> <input class=form-control name=name id=field_name data-ng-model=constant.name readonly> </div> <div class=form-group> <label for=field_name>Valor</label> <textarea class=form-control name=value id=field_value data-ng-model=constant.value rows=3 cols=128></textarea> </div> <div class=form-group data-ng-if=constant.value> <label for=field_value_preview>Value preview</label> <div id=field_value_preview data-ng-bind-html="constant.value | trusted"></div> </div> <div class=form-group> <label for=field_description>DescripciÃ³n</label> <textarea name=description id=field_description data-ng-model=constant.description class=form-control rows=5 cols=128 required></textarea> </div> <div class=form-group data-ng-if=constant.description> <label for=field_description_preview>Description preview</label> <div id=field_description_preview data-ng-bind-html="constant.description | trusted"></div> </div> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit data-ng-disabled="editForm.$invalid || editForm.$submitted" class="btn btn-primary"> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </form> '), e.put("scripts/app/admin/configConstant/configConstant.html", '<div> <h2 class=page-header>Constantes</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class="col-md-offset-4 col-md-8"> <form name=searchForm class=form-inline> <div class=input-group> <input class=form-control data-ng-model=searchQuery id=searchQuery placeholder="Buscar una constante"> <span class=input-group-btn> <button class="btn btn-info" id=searchButton><span class="glyphicon glyphicon-search"></span> </button> </span> </div> </form> </div> </div> </div> <div class="modal fade" id=deleteConfigConstantConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm data-ng-submit=confirmDelete(constant.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title>Confirmar desactivaciÃ³n de funciones</h4> </div> <div class=modal-body> <p>Â¿EstÃ¡s seguro de que quieres desactivar?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=refresh()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit data-ng-disabled=deleteForm.$invalid class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Confirmar</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class="table table-striped"> <col style=width:15%> <col style=width:35%> <col style=width:35%> <col style=width:15%> <thead> <tr> <th>Nombre</th> <th>Valor</th> <th>DescripciÃ³n</th> <th></th> </tr> </thead> <tbody> <tr class=animate-repeat data-ng-repeat="constant in constants | filter: searchQuery"> <td><strong>{{constant.name}}</strong></td> <td>{{constant.value}}</td> <td data-ng-bind-html="constant.description | trusted"></td> <td> <button type=submit ui-sref=configConstant.detail({id:constant.id}) class="btn btn-primary btn-sm"> <span class="glyphicon glyphicon-eye-open"></span>&nbsp;<span> View</span> </button> <button type=submit ui-sref=configConstant.edit({id:constant.id}) class="btn btn-warning btn-sm"> <span class="glyphicon glyphicon-pencil"></span>&nbsp;<span> Edit</span> </button> </td> </tr> </tbody> </table> </div> <br/> <div class=container> <div data-ng-if=checkSecurityCAT() class=row> <p class="alert alert-warning">Complete el campo <strong>securityCAT</strong> segÃºn corresponda para completar la activaciÃ³n</p> </div> <div class=row> <label for=testFeature><strong>ACTIVAR AUTOMATIZACIÃ“N DE PRUEBAS:</strong></label> <input id=testFeature bs-switch type=checkbox switch-on-color=success switch-off-color=danger data-ng-model=activate switch-on-text=Yes switch-off-text=No switch-label-width=2px data-ng-change=activateTestAutomation() /> </div> </div> <br/> </div>'), e.put("scripts/app/admin/configuration/configuration.html", '<div> <h2 class=page-header>ConfiguraciÃ³n</h2> <span>Filtrar (por prefijo)</span> <input data-ng-model=filter class=form-control> <table class="table table-condensed table-striped table-bordered table-responsive" style=table-layout:fixed> <thead> <tr> <th data-ng-click="predicate = \'prefix\'; reverse=!reverse" class=col-sm-4><span>Prefijo</span></th> <th class=col-sm-8>Propiedades</th> </tr> </thead> <tr data-ng-repeat="entry in configuration | filter:filter | orderBy:predicate:reverse"> <td><span>{{entry.prefix}}</span></td> <td> <div class=row data-ng-repeat="(key, value) in entry.properties"> <div class=col-md-4>{{key}}</div> <div class=col-md-8><span class="pull-right label label-info" style="white-space: normal;word-break:break-all">{{value}}</span></div> </div> </td> </tr> </table> </div> '), e.put("scripts/app/admin/docs/docs.html", "<iframe src=swagger-ui/index.html frameborder=0 marginheight=0 marginwidth=0 width=100% height=900 scrolling=auto target=_top></iframe> "), e.put("scripts/app/admin/health/health.html", '<div> <h2 class=page-header>Estado de los servicios</h2> <p> <button type=button class="btn btn-primary" data-ng-click=refresh()><span class="glyphicon glyphicon-refresh"></span>&nbsp;<span>Refresh</span> </button> </p> <table id=healthCheck class="table table-striped"> <thead> <tr> <th class=col-md-7>Service Name</th> <th class="col-md-2 text-center">Status</th> <th class="col-md-2 text-center">Details</th> </tr> </thead> <tbody> <tr data-ng-repeat="health in healthData"> <td><span class=text-capitalize>{{ baseName(health.name) }}</span> {{subSystemName(health.name)}}</td> <td class=text-center> <span class=label data-ng-class=getLabelClass(health.status)> {{ health.status }} </span> </td> <td class=text-center> <a class=hand data-ng-click=showHealth(health) ng-show="health.details || health.error"> <i class="glyphicon glyphicon-eye-open"></i> </a> </td> </tr> </tbody> </table> </div> '), e.put("scripts/app/admin/health/health.modal.html", '<div class=modal-header> <button aria-label=Close data-dismiss=modal class=close type=button ng-click=cancel()><span aria-hidden=true>&times;</span> </button> <h4 class=modal-title id=showHealthLabel><span class=text-capitalize>{{ baseName(currentHealth.name) }}</span> {{subSystemName(currentHealth.name)}} </h4> </div> <div class="modal-body pad"> <div ng-show=currentHealth.details> <h4>Propiedades</h4> <table class="table table-striped"> <thead> <tr> <th class="col-md-6 text-left">Nombre</th> <th class="col-md-6 text-left">Valor</th> </tr> </thead> <tbody> <tr ng-repeat="(k,v) in currentHealth.details"> <td class="col-md-6 text-left">{{k}}</td> <td class="col-md-6 text-left">{{v}}</td> </tr> </tbody> </table> </div> <div ng-show=currentHealth.error> <h4>Error</h4> <pre>{{currentHealth.error}}</pre> </div> </div> <div class=modal-footer> <button data-dismiss=modal class="btn btn-default pull-left" type=button ng-click=cancel()>Done</button> </div>'), e.put("scripts/app/admin/metrics/metrics.html", "<div> <h2 class=page-header>Application Metrics</h2> <p> <button type=button class=\"btn btn-primary\" data-ng-click=refresh()><span class=\"glyphicon glyphicon-refresh\"></span>&nbsp;<span>Refresh</span></button> </p> <h3>JVM Metrics</h3> <div class=row data-ng-hide=updatingMetrics> <div class=col-md-4> <b>Memory</b> <p><span>Total Memory</span> ({{metrics.gauges['jvm.memory.total.used'].value / 1000000 | number:0}}M / {{metrics.gauges['jvm.memory.total.max'].value / 1000000 | number:0}}M)</p> <uib-progressbar min=0 max=\"metrics.gauges['jvm.memory.total.max'].value\" value=\"metrics.gauges['jvm.memory.total.used'].value\" class=\"progress-striped active\" type=success> <span>{{metrics.gauges['jvm.memory.total.used'].value * 100 / metrics.gauges['jvm.memory.total.max'].value | number:0}}%</span> </uib-progressbar> <p><span>Heap Memory</span> ({{metrics.gauges['jvm.memory.heap.used'].value / 1000000 | number:0}}M / {{metrics.gauges['jvm.memory.heap.max'].value / 1000000 | number:0}}M)</p> <uib-progressbar min=0 max=\"metrics.gauges['jvm.memory.heap.max'].value\" value=\"metrics.gauges['jvm.memory.heap.used'].value\" class=\"progress-striped active\" type=success> <span>{{metrics.gauges['jvm.memory.heap.used'].value * 100 / metrics.gauges['jvm.memory.heap.max'].value | number:0}}%</span> </uib-progressbar> <p><span>Non-Heap Memory</span> ({{metrics.gauges['jvm.memory.non-heap.used'].value / 1000000 | number:0}}M / {{metrics.gauges['jvm.memory.non-heap.committed'].value / 1000000 | number:0}}M)</p> <uib-progressbar min=0 max=\"metrics.gauges['jvm.memory.non-heap.committed'].value\" value=\"metrics.gauges['jvm.memory.non-heap.used'].value\" class=\"progress-striped active\" type=success> <span>{{metrics.gauges['jvm.memory.non-heap.used'].value * 100 / metrics.gauges['jvm.memory.non-heap.committed'].value | number:0}}%</span> </uib-progressbar> </div> <div class=col-md-4> <b>Threads</b> (Total: {{metrics.gauges['jvm.threads.count'].value}}) <a class=hand ng-click=refreshThreadDumpData() data-toggle=modal data-target=#threadDump><i class=\"glyphicon glyphicon-eye-open\"></i></a> <p><span>Runnable</span> {{metrics.gauges['jvm.threads.runnable.count'].value}}</p> <uib-progressbar min=0 value=\"metrics.gauges['jvm.threads.runnable.count'].value\" max=\"metrics.gauges['jvm.threads.count'].value\" class=\"progress-striped active\" type=success> <span>{{metrics.gauges['jvm.threads.runnable.count'].value * 100 / metrics.gauges['jvm.threads.count'].value | number:0}}%</span> </uib-progressbar> <p><span>Timed Waiting</span> ({{metrics.gauges['jvm.threads.timed_waiting.count'].value}})</p> <uib-progressbar min=0 value=\"metrics.gauges['jvm.threads.timed_waiting.count'].value\" max=\"metrics.gauges['jvm.threads.count'].value\" class=\"progress-striped active\" type=warning> <span>{{metrics.gauges['jvm.threads.timed_waiting.count'].value * 100 / metrics.gauges['jvm.threads.count'].value | number:0}}%</span> </uib-progressbar> <p><span>Waiting</span> ({{metrics.gauges['jvm.threads.waiting.count'].value}})</p> <uib-progressbar min=0 value=\"metrics.gauges['jvm.threads.waiting.count'].value\" max=\"metrics.gauges['jvm.threads.count'].value\" class=\"progress-striped active\" type=warning> <span>{{metrics.gauges['jvm.threads.waiting.count'].value * 100 / metrics.gauges['jvm.threads.count'].value | number:0}}%</span> </uib-progressbar> <p><span>Blocked</span> ({{metrics.gauges['jvm.threads.blocked.count'].value}})</p> <uib-progressbar min=0 value=\"metrics.gauges['jvm.threads.blocked.count'].value\" max=\"metrics.gauges['jvm.threads.count'].value\" class=\"progress-striped active\" type=success> <span>{{metrics.gauges['jvm.threads.blocked.count'].value * 100 / metrics.gauges['jvm.threads.count'].value | number:0}}%</span> </uib-progressbar> </div> <div class=col-md-4> <b>Garbage collections</b> <div class=row> <div class=col-md-9>Mark Sweep count</div> <div class=\"col-md-3 text-right\">{{metrics.gauges['jvm.garbage.PS-MarkSweep.count'].value}}</div> </div> <div class=row> <div class=col-md-9>Mark Sweep time</div> <div class=\"col-md-3 text-right\">{{metrics.gauges['jvm.garbage.PS-MarkSweep.time'].value}}ms</div> </div> <div class=row> <div class=col-md-9>Scavenge count</div> <div class=\"col-md-3 text-right\">{{metrics.gauges['jvm.garbage.PS-Scavenge.count'].value}}</div> </div> <div class=row> <div class=col-md-9>Scavenge time</div> <div class=\"col-md-3 text-right\">{{metrics.gauges['jvm.garbage.PS-Scavenge.time'].value}}ms</div> </div> </div> </div> <div class=\"well well-lg\" ng-show=updatingMetrics>Updating...</div> <h3>HTTP requests (events per second)</h3> <p><span>Active requests</span> <b>{{metrics.counters['com.codahale.metrics.servlet.InstrumentedFilter.activeRequests'].count | number:0}}</b> - <span>Total requests</span> <b>{{metrics.timers['com.codahale.metrics.servlet.InstrumentedFilter.requests'].count | number:0}}</b></p> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th>Code</th> <th>Count</th> <th class=text-right>Mean</th> <th class=text-right><span>Average</span> (1 min)</th> <th class=text-right><span>Average</span> (5 min)</th> <th class=text-right><span>Average</span> (15 min)</th> </tr> </thead> <tbody> <tr> <td>OK</td> <td> <uib-progressbar min=0 max=\"metrics.timers['com.codahale.metrics.servlet.InstrumentedFilter.requests'].count\" value=\"metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].count\" class=\"progress-striped active\" type=success> <span>{{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].count}}</span> </uib-progressbar> </td> <td class=text-right> {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].mean_rate | number:2}} </td> <td class=text-right>{{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].m1_rate | number:2}} </td> <td class=text-right>{{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].m5_rate | number:2}} </td> <td class=text-right> {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.ok'].m15_rate | number:2}} </td> </tr> <tr> <td>Not Found</td> <td> <uib-progressbar min=0 max=\"metrics.timers['com.codahale.metrics.servlet.InstrumentedFilter.requests'].count\" value=\"metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].count\" class=\"progress-striped active\" type=success> <span>{{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].count}}</span> </uib-progressbar> </td> <td class=text-right> {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].mean_rate | number:2}} </td> <td class=text-right> {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].m1_rate | number:2}} </td> <td class=text-right> {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].m5_rate | number:2}} </td> <td class=text-right> {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.notFound'].m15_rate | number:2}} </td> </tr> <tr> <td>Server error</td> <td> <uib-progressbar min=0 max=\"metrics.timers['com.codahale.metrics.servlet.InstrumentedFilter.requests'].count\" value=\"metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].count\" class=\"progress-striped active\" type=success> <span>{{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].count}}</span> </uib-progressbar> </td> <td class=text-right> {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].mean_rate | number:2}} </td> <td class=text-right> {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].m1_rate | number:2}} </td> <td class=text-right> {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].m5_rate | number:2}} </td> <td class=text-right> {{metrics.meters['com.codahale.metrics.servlet.InstrumentedFilter.responseCodes.serverError'].m15_rate | number:2}} </td> </tr> </tbody> </table> </div> <h3>Services statistics (time in millisecond)</h3> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th>Service name</th> <th class=text-right>Count</th> <th class=text-right>Mean</th> <th class=text-right>Min</th> <th class=text-right>p50</th> <th class=text-right>p75</th> <th class=text-right>p95</th> <th class=text-right>p99</th> <th class=text-right>Max</th> </tr> </thead> <tbody> <tr data-ng-repeat=\"(k, v) in servicesStats\"> <td>{{k}}</td> <td class=text-right>{{v.count}}</td> <td class=text-right>{{v.mean * 1000 | number:0}}</td> <td class=text-right>{{v.min * 1000 | number:0}}</td> <td class=text-right>{{v.p50 * 1000 | number:0}}</td> <td class=text-right>{{v.p75 * 1000 | number:0}}</td> <td class=text-right>{{v.p95 * 1000 | number:0}}</td> <td class=text-right>{{v.p99 * 1000 | number:0}}</td> <td class=text-right>{{v.max * 1000 | number:0}}</td> </tr> </tbody> </table> </div> <h3>Ehcache statistics</h3> <div class=table-responsive> <table class=\"table table-striped\"> <thead> <tr> <th>Cache name</th> <th class=text-right>Objects</th> <th class=text-right>Hits</th> <th class=text-right>Misses</th> <th class=text-right>Eviction count</th> <th class=text-right>Mean get time (ms)</th> </tr> </thead> <tbody> <tr data-ng-repeat=\"(k, v) in cachesStats\" data-ng-once> <td>{{v.name}}</td> <td class=text-right>{{metrics.gauges[k + '.objects'].value}}</td> <td class=text-right>{{metrics.gauges[k + '.hits'].value}}</td> <td class=text-right>{{metrics.gauges[k + '.misses'].value}}</td> <td class=text-right>{{metrics.gauges[k + '.eviction-count'].value}}</td> <td class=text-right>{{metrics.gauges[k + '.mean-get-time'].value | number:2}}</td> </tr> </tbody> </table> </div> <h3 data-ng-show=\"metrics.gauges['HikariPool-0.pool.TotalConnections'].value > 0\">DataSource statistics (time in millisecond)</h3> <div class=table-responsive data-ng-show=\"metrics.gauges['HikariPool-0.pool.TotalConnections'].value > 0\"> <table class=\"table table-striped\"> <thead> <tr> <th><span>Usage</span> ({{metrics.gauges['HikariPool-0.pool.ActiveConnections'].value}} / {{metrics.gauges['HikariPool-0.pool.TotalConnections'].value}})</th> <th class=text-right>Count</th> <th class=text-right>Mean</th> <th class=text-right>Min</th> <th class=text-right>p50</th> <th class=text-right>p75</th> <th class=text-right>p95</th> <th class=text-right>p99</th> <th class=text-right>Max</th> </tr> </thead> <tbody> <tr> <td> <div class=\"progress progress-striped\"> <uib-progressbar min=0 max=\"metrics.gauges['HikariPool-0.pool.TotalConnections'].value\" value=\"metrics.gauges['HikariPool-0.pool.ActiveConnections'].value\" class=\"progress-striped active\" type=success> <span>{{metrics.gauges['HikariPool-0.pool.ActiveConnections'].value * 100 / metrics.gauges['HikariPool-0.pool.TotalConnections'].value | number:0}}%</span> </uib-progressbar> </div> </td> <td class=text-right>{{metrics.histograms['HikariPool-0.pool.Usage'].count}}</td> <td class=text-right>{{metrics.histograms['HikariPool-0.pool.Usage'].mean | number:2}}</td> <td class=text-right>{{metrics.histograms['HikariPool-0.pool.Usage'].min | number:2}}</td> <td class=text-right>{{metrics.histograms['HikariPool-0.pool.Usage'].p50 | number:2}}</td> <td class=text-right>{{metrics.histograms['HikariPool-0.pool.Usage'].p75 | number:2}}</td> <td class=text-right>{{metrics.histograms['HikariPool-0.pool.Usage'].p95 | number:2}}</td> <td class=text-right>{{metrics.histograms['HikariPool-0.pool.Usage'].p99 | number:2}}</td> <td class=text-right>{{metrics.histograms['HikariPool-0.pool.Usage'].max | number:2}}</td> </tr> </tbody> </table> </div> </div> "), e.put("scripts/app/admin/metrics/metrics.modal.html", '\x3c!-- Modal used to display the threads dump --\x3e <div class=modal-header> <button type=button class=close ng-click=cancel()>&times;</button> <h4 class=modal-title>Threads dump</h4> </div> <div class="modal-body pad"> <span class="label label-primary" ng-click="threadDumpFilter = {}">All&nbsp;<span class=badge>{{threadDumpAll}}</span></span>&nbsp; <span class="label label-success" ng-click="threadDumpFilter = {threadState: \'RUNNABLE\'}">Runnable&nbsp;<span class=badge>{{threadDumpRunnable}}</span></span>&nbsp; <span class="label label-info" ng-click="threadDumpFilter = {threadState: \'WAITING\'}">Waiting&nbsp;<span class=badge>{{threadDumpWaiting}}</span></span>&nbsp; <span class="label label-warning" ng-click="threadDumpFilter = {threadState: \'TIMED_WAITING\'}">Timed Waiting&nbsp;<span class=badge>{{threadDumpTimedWaiting}}</span></span>&nbsp; <span class="label label-danger" ng-click="threadDumpFilter = {threadState: \'BLOCKED\'}">Blocked&nbsp;<span class=badge>{{threadDumpBlocked}}</span></span>&nbsp; <div class=voffset2>&nbsp;</div> Filter <input ng-model=threadDumpFilter class=form-control> <div class="row pad" ng-repeat="(k, v) in threadDump | filter:threadDumpFilter"> <h5><span class=label ng-class=getLabelClass(v.threadState)>{{v.threadState}}</span>&nbsp;{{v.threadName}} (ID {{v.threadId}}) <a ng-click="show = !show"> <span ng-show=!show>Show StackTrace</span> <span ng-show=show>Hide StackTrace</span> </a> </h5> <div class=well ng-show=show> <div ng-repeat="(stK, stV) in v.stackTrace"> {{stV.className}}.{{stV.methodName}}({{stV.fileName}}:{{stV.lineNumber}}) <span class=voffset1></span> </div> </div> <table class="table table-condensed"> <thead> <tr> <th class=text-right>Blocked Time</th> <th class=text-right>Blocked Count</th> <th class=text-right>Waited Time</th> <th class=text-right>Waited Count</th> <th>Lock Name</th> </tr> </thead> <tbody> <tr> <td>{{v.blockedTime}}</td> <td>{{v.blockedCount}}</td> <td>{{v.waitedTime}}</td> <td>{{v.waitedCount}}</td> <td>{{v.lockName}}</td> </tr> </tbody> </table> </div> </div> <div class=modal-footer> <button type=button class="btn btn-default pull-left" data-dismiss=modal ng-click=cancel()>Done</button> </div>'), e.put("scripts/app/admin/userManagement/userManagement-detail.html", ' <div> <h2><span>Usuario</span> {{user.login}}</h2> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> <th>Field</th> <th>Valor</th> </tr> </thead> <tbody> <tr> <td> <span><strong>Nombre</strong></span> </td> <td> <span class=form-control-static>{{user.firstName}}</span> </td> </tr> <tr> <td> <span><strong>Apellido</strong></span> </td> <td> <span class=form-control-static>{{user.lastName}}</span> </td> </tr> <tr> <td> <span><strong>Email</strong></span> </td> <td> <span class=form-control-static>{{user.email}}</span> </td> </tr> <tr data-ng-repeat="authority in authorities | orderBy : \'name\'"> <td> <span><strong>{{authority.name}}</strong></span> </td> <td> <span class=form-control-static>{{userSet[authority.name]}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class="btn btn-info"> <span class="glyphicon glyphicon-arrow-left"></span>&nbsp;<span> Back</span> </button> </div> '), e.put("scripts/app/admin/userManagement/userManagement-dialog.html", ' <form name=form role=form data-ng-submit=save()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title id=myUserManagementLabel>Add or Edit a User</h4> \x3c!-- Crear o editar una Constante --\x3e </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id>ID</label> <input class=form-control id=id name=id data-ng-model=user.id readonly> </div> <div class=form-group> <label for=login>Nombre de Usuario</label> <input class=form-control name=login id=username data-ng-pattern=/^[a-z0-9]*$/ data-ng-model=user.login data-ng-readonly=user.id data-ng-maxlength=50 required> <div data-ng-show="form.login.$dirty && form.login.$invalid"> <p class=help-block style=color:red data-ng-show=form.login.$error.required> El nombre de usuario es requerido. </p> <p class=help-block style=color:red data-ng-show=form.login.$error.maxlength> El nombre de usuario no puede tener mÃ¡s de 50 caracteres. </p> <p class=help-block style=color:red data-ng-show=form.login.$error.pattern id=falsePattern> El nombre de usuario solo puede tener letras minÃºsculas y dÃ­gitos. </p> </div> </div> <div class=form-group> <label for=firstName>Nombre</label> <input class=form-control name=firstName id=firstName data-ng-model=user.firstName data-ng-maxlength=50 required> <div data-ng-show="form.firstName.$dirty && form.firstName.$invalid"> <p class=help-block style=color:red data-ng-show=form.firstName.$error.required> El nombre es requerido. </p> <p class=help-block style=color:red data-ng-show=form.firstName.$error.maxlength> El nombre no puede tener mÃ¡s de 50 caracteres. </p> </div> </div> <div class=form-group> <label for=lastName>Apellido</label> <input name=description id=lastName data-ng-model=user.lastName class=form-control data-ng-maxlength=50 required> <div data-ng-show="form.lastName.$dirty && form.lastName.$invalid"> <p class=help-block style=color:red data-ng-show=form.lastName.$error.required> El apellido es requerido. </p> <p class=help-block style=color:red data-ng-show=form.lastName.$error.maxlength> El apellido no puede tener mÃ¡s de 50 caracteres. </p> </div> </div> <div class=form-group> <label for=email>Email</label> <input type=email name=email id=email data-ng-model=user.email class=form-control data-ng-minlength=5 data-ng-maxlength=100 required> <div data-ng-show="form.email.$dirty && form.email.$invalid"> <p class=help-block style=color:red data-ng-show=form.email.$error.required> Su e-mail es requerido. </p> <p class=help-block style=color:red data-ng-show=form.email.$error.email id=emailError> Su e-mail es invalido. </p> <p class=help-block style=color:red data-ng-show=form.email.$error.minlength> Su e-mail es requerido debe tener al menos 5 caracteres. </p> <p class=help-block style=color:red data-ng-show=form.email.$error.maxlength> Su e-mail no puede tener mÃ¡s de 100 caracteres. </p> </div> </div> <div class=form-group> <label for=field_optColumn>Roles</label> <select class=form-control id=field_optColumn multiple name=roles data-ng-model=user.authorities data-ng-options="authority as authority.name for authority in authorities track by authority.name"></select> </div> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit data-ng-disabled=form.$invalid class="btn btn-primary"> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </form>'), e.put("scripts/app/admin/userManagement/userManagement.html", '<div> <h2 class=page-header>GestiÃ³n de usuarios</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class="btn btn-primary" ui-sref=userManagement.new> <span class="glyphicon glyphicon-flash"></span>&nbsp;<span>Crea un nuevo Usuario</span> </button> </div> <div class=col-md-8> <form name=searchForm class=form-inline> <div class=input-group> <input class=form-control data-ng-model=searchQuery id=searchQuery placeholder="Buscar por usuario"> <span class=input-group-btn> <button class="btn btn-info" id=searchButton><span class="glyphicon glyphicon-search"></span> </button> </span> </div> </form> </div> </div> </div> <br> <br> <div class="modal fade" id=deleteUserConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm data-ng-submit=confirmDelete(user.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete this <strong>{{user.firstName}} {{user.lastName}}</strong>? </p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit data-ng-disabled=deleteForm.$invalid class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class="table table-striped col-sm-12"> <thead> <tr> <th>Nombre de Usuario</th> <th>Nombre</th> <th>Apellido</th> <th>Email</th> <th>Activo</th> <th class=text-center>Roles</th> </tr> </thead> <tbody> <tr class=animate-repeat data-ng-repeat="user in usersWithAuthorities  | orderBy :[\'firstname\', \'lastname\'] | filter: searchQuery"> <td class=col-sm-3><strong>{{user.login}}</strong></td> <td class=col-sm-3>{{user.firstName}}</td> <td class=col-sm-3>{{user.lastName}}</td> <td class=col-sm-3>{{user.email}}</td> <td class=text-center> <button type=button class="btn btn-sm" data-ng-click=updateUserActivation(user) data-ng-disabled="user.login == activeUser.login" data-ng-class="{\'btn-success\': user.activated, \'btn-danger\': !user.activated}">{{user.activated ? \'Yes\' : \'No\'}}</button> </td> <td class=text-center> <span data-ng-repeat="authority in user.authorities  | orderBy: \'name\'"> <span class="label label-info">{{removeRolePrefix(authority.name)}}</span> </span> </td> <td class=col-sm-2> <button type=submit ui-sref=userManagement.detail({id:user.id}) class="btn btn-info btn-sm"> <span class="glyphicon glyphicon-eye-open"></span>&nbsp;<span> View</span> </button> </td> <td class=col-sm-2> <button type=submit ui-sref=userManagement.edit({id:user.id}) class="btn btn-warning btn-sm"> <span class="glyphicon glyphicon-pencil"></span>&nbsp;<span> Edit</span> </button> </td> <td class=col-sm-2> <button type=submit data-ng-click=delete(user) class="btn btn-danger btn-sm" data-ng-disabled="user.login == activeUser.login"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete</span> </button> </td> </tr> </tbody> </table> </div> </div>'), e.put("scripts/app/editor/authenticator.modal.html", '<div class=modal-header> <button type=button class=close data-ng-click=cancel() aria-hidden=true>Ã—</button> <h3 class=modal-title>Authentication</h3> </div> <div class=modal-body> <uib-alert class="alert alert-warning"> <span class=text-center>{{jira.message}}</span> </uib-alert> <h4 class=text-center><a id=jira.url href={{jira.url}} data-ng-click=close() target=_blank>{{jira.url}}</a></h4> </div>'), e.put("scripts/app/editor/confirm-modal.html", '<div class=modal-header><h3 class=modal-title>{{data.title}}</h3></div> <div class=modal-body> <div style="white-space: pre-line; word-wrap: break-word" marked=data.text></div> </div> <div class=modal-footer> <button class="btn btn-primary" data-ng-class="{\'btn-danger\': data.isDirty}" data-ng-click=ok()><b>{{data.ok}}</b></button> <button class="btn btn-default" data-ng-click=cancel()><b>{{data.cancel}}</b></button> </div>'), e.put("scripts/app/editor/customrequirements/customRequirement.html", '<div class=modal-header> <button type=button class=close data-ng-click=cancel() aria-hidden=true>Ã—</button> <h3 class=modal-title data-ng-if=status.add>Add custom requirement</h3> <h3 class=modal-title data-ng-if=status.edit>Edit custom requirement</h3> </div> <div class=modal-body data-ng-init=init()> <form class=form-horizontal role=form> <div class=form-group data-ng-if=status.edit> <label for=EditCategory class="col-sm-2 control-label required-field">Requirement</label> <div class=col-sm-10> <select id=categoryInput data-ng-model=req.id data-ng-change=selectRequirement(req.id) data-ng-options="requirement.id as requirement.description for requirement in crObject.requirements" class=form-control> </select> </div> </div> <div class=form-group> <label for=categoryInput class="col-sm-2 control-label required-field">Category</label> <div class=col-sm-10> <select id=categoryInput data-ng-model=requirement.categoryId data-ng-options="category.id as category.label for category in categories" class=form-control> </select> </div> </div> <div class=form-group> <label for=descriptionInput class="col-sm-2 control-label required-field">DescripciÃ³n</label> <div class=col-sm-10> <input id=descriptionInput data-ng-model=requirement.description class=form-control /> </div> </div> <div class=form-group data-ng-repeat-start="optColumn in requirement.optionColumns | orderBy:\'showOrder\'"> <label class="col-sm-2 control-label">{{optColumn.name}}</label> <div class=col-sm-10> <span data-ng-repeat="con in optColumn.content"> <textarea id=content{{optColumn.showOrder}} rows=3 data-ng-model=con.content class=form-control></textarea> </span> </div> </div> <div data-ng-repeat-end class=form-group data-ng-if=optColumn.content[0].content> <label class="col-sm-2 control-label">Markdown Preview</label> <div class=col-sm-10 data-ng-repeat="con in optColumn.content" data-ng-bind-html="con.content | trusted"> </div> </div> <div data-ng-repeat="statusColumn in crObject.statusColumns | orderBy:\'showOrder\'" class=form-group> <label data-ng-if=statusColumn.isEnum for=statusColumn{{$index}} class="col-sm-2 control-label">{{statusColumn.name}}</label> <div class=col-sm-10 data-ng-if=statusColumn.isEnum> <select class=form-control data-ng-model=statValue.value data-ng-change="selectStatusValue(statusColumn.id, statValue.value)" data-ng-options="value as value.name for value in statusColumn.values | orderBy: \'showOrder\'"> </select> </div> </div> <div class=form-group> <label for=Comment class="col-sm-2 control-label">Comment</label> <div class=col-sm-10 data-ng-repeat="reqStat in requirement.statusColumns"> <span data-ng-if=!reqStat.isEnum> <textarea id=Comment rows=3 data-ng-model=reqStat.value class=form-control></textarea> </span> </div> </div> </form> </div> <div class=modal-footer> <div class="col-sm-offset-2 col-sm-5"> <button class="btn form-control" data-ng-class="{true:\'btn-primary\', false:\'btn-warning\'}[status.add]" data-ng-click=close() data-ng-disabled="requirement.description == null"> <span data-ng-if=status.add><strong>Agregar requisito</strong></span> <span data-ng-if=status.edit><strong>Editar requisito</strong></span> </button> </div> <div class=col-sm-5> <button class="btn btn-default form-control" data-ng-click=cancel()><strong>Cancelar</strong></button> </div> </div>'), e.put("scripts/app/editor/customrequirements/remove-customRequirement.html", '<div class=modal-header data-ng-init=init()> <button type=button class=close data-ng-click=cancel() aria-hidden=true>Ã—</button> <h3 class=modal-title>Remove custom requirement</h3> </div> <div class=modal-body> <div class="row form-Group"> <label for=customRequirements class="control-label col-sm-3">Requirement to remove:</label> <div class=col-sm-6 uib-dropdown> <button id=customRequirements class="btn btn-default" type=button uib-dropdown-toggle>{{itemToRemove.shortName}} <span class=caret></span></button> <ul class=uib-dropdown-menu aria-labelledby=typeDropdown> <li data-ng-repeat="customRequirement in customRequirements"><a href="" data-ng-click=selectRequirement(customRequirement)>{{customRequirement.shortName}}</a></li> </ul> </div> </div> <div class="row form-Group"> <label for=description class="control-label col-sm-3">Description:</label> <div class=col-sm-6> <p id=description>{{itemToRemove.description}}</p> </div> </div> </div> <div>&nbsp;</div> <div class=modal-footer> <div class="col-sm-offset-2 col-sm-5"> <button class="btn btn-danger form-control" data-ng-click=close() data-ng-disabled="itemToRemove == null"><strong>Eliminar requisito</strong></button> </div> <div class=col-sm-5> <button class="btn btn-default form-control" data-ng-click=cancel()><strong>Cancelar</strong></button> </div> </div>'), e.put("scripts/app/editor/editor.html", '<div class=container-fluid> <div data-ng-bind-html="welcomeMessage | trusted" class=text-center></div> \x3c!-- <h1 align="center">Welcome to <img alt="" height="70" src="/assets/images/securityratLogo.png"></span></h1> --\x3e <br> <br> <h2 align=center>Por favor seleccione que quiere hacer:</h2> <br> <div> <ul class="nav nav-pills nav-stacked" role=tablist> <li> <div class="col-sm-2 divResize"> <a id=defineArtifact data-ng-href=# class="btn btn-primary btn-autosize" data-ng-click=initStarter()> <em class="glyphicon glyphicon-plus"></em> Definir un nuevo artefacto </a> </div> </li> <br> <br/> <br/> <li> <div class="col-sm-2 divResize"> <button id=importArtifact class="btn btn-primary btn-autosize" data-ng-click=initImport()> <em class="glyphicon glyphicon-import"></em> Importar un artefacto </button> </div> </li> <br> <br/> <br/> <li> <div class="col-sm-2 divResize" data-ng-if=detectedRestore> <button id=restoreSession class="btn btn-primary btn-autosize" data-ng-click=restoreSession() uib-tooltip="Detectamos una copia de seguridad local de su sesiÃ³n anterior. Puede importarlo directamente haciendo clic en el botÃ³n \'Restaurar sesiÃ³n anterior\'." tooltip-append-to-body=true> <em class="glyphicon glyphicon-repeat"></em> Restore previous session </button> </div> </li> <br> <br/> <br/> <li> <div class="col-sm-2 divResize" data-ng-if=detectedRestore> <button id=deleteSession class="btn btn-primary btn-autosize" confirm="Â¿EstÃ¡ seguro de que desea eliminar la sesiÃ³n anterior?" data-ng-click=deleteLocalStorage() uib-tooltip="Detectamos una copia de seguridad local de su sesiÃ³n anterior. Puede eliminarlo simplemente haciendo clic en el botÃ³n \'Eliminar sesiÃ³n anterior\'." tooltip-append-to-body=true> <em class="glyphicon glyphicon-remove"></em> Delete previous session </button> </div> </li> <br> <br/> <br/> </ul> </div> </div> '), e.put("scripts/app/editor/excel/excel.config.html", '<div class=modal-header data-ng-init=init()> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=cancel()>&times;</button> <h3 class=modal-title>Edit Excel</h3> </div> <div class=modal-body> <form class=form-horizontal role=form> <div class=form-group> <label for=description class="col-sm-2 control-label"> With status values</label> <div class=col-sm-10> <input bs-switch type=checkbox id=statusValue class=form-control name=description id=field_description data-ng-model=config.statusValues switch-on-text=Yes switch-off-text=No switch-on-color=success switch-off-color=danger switch-label-width=0 switch-handle-width=660> </div> </div> </form> </div> <div class="modal-footer btn-group-sm"> <div class="col-sm-offset-2 col-sm-5"> <button class="btn btn-primary form-control" data-ng-click=confirm()><strong>Crear</strong></button> </div> <div class=col-sm-5> <button class="btn btn-default form-control" data-ng-click=cancel()><strong>Cancelar</strong></button> </div> </div>'), e.put("scripts/app/editor/export/createTicket.html", '<form role=form name=createticketForm class=form-horizontal data-ng-init=initcreateTicket() novalidate> <div data-ng-cloak> <div class=modal-header> <button type=button class=close data-ng-click=cancel() aria-hidden=true>Ã—</button> <h3 class=modal-title>Create ticket for each requirement</h3> </div> <div class=modal-body> <uib-alert class=text-center data-ng-if=exportProperty.fail type="alert alert-danger"> {{exportProperty.failed}} </uib-alert> <uib-alert class=text-center data-ng-if=exportProperty.defaultJIRAHost type="alert alert-warning"> Enter either project URL or project name to resolve URL with JIRA host <strong>{{exportProperty.defaultJIRAHost}}</strong>. </uib-alert> <div class=form-group> <div class="text-center col-sm-9"> <div class=input-group> <span class="input-group-addon required-field"><span data-ng-if=exportProperty.defaultJIRAHost>Project name/</span>URL:</span> <input data-ng-attr-placeholder={{exportProperty.urlPlaceholder}} data-ng-model=jiraUrl.url name=url class=form-control required/> </div> <div data-ng-show=!validateURLQueueValue(jiraUrl.url)> <p class=help-block> {{checks.url.createTicketURLErrorMessage}} </p> </div> </div> <div id=UsSpinner data-ng-if=exportProperty.showSpinner class="text-center col-sm-1" uib-popover="AutenticaciÃ³n ejecutÃ¡ndose..." popover-placement=top popover-trigger=mouseenter popover-append-to-body> <span spinner-on=exportProperty.showSpinner us-spinner="{radius:5, width:3, length:3, lines:9}"></span> </div> <div class=col-sm-offset-1 uib-dropdown auto-close=disabled data-ng-if="((jiraAlternatives.mandatoryFields | filter : {configurable : true}).length > 0) && fields.issuetype.name"> <button type=button class="btn btn-default" uib-dropdown-toggle id=dropdown-fields data-ng-click="getHeight(\'dropdown-fields\')"> <span class="glyphicon glyphicon-wrench"></span> Configure fields <span class=caret></span> </button> <ul class="dropdown-menu dropdown-menu-right newspaper" uib-dropdown-menu role=menu aria-labelledby=dropdown-fields data-ng-style="{\'max-height\':maxHeight}"> <li role=menuitem data-ng-repeat="field in jiraAlternatives.mandatoryFields | filter : {configurable : true}"> <span class=customFields><input type=checkbox data-ng-model=field.mandatory> {{field.name}} </span> </li> </ul> </div> </div> <div>&nbsp;</div> <div class=row data-ng-if=checks.isNotProject> <div class=form-group> <label for=ProjectKey class="col-sm-2 control-label">Project:</label> <div class=col-sm-9> <input list=projectKey class=form-control name=ProjectKey data-ng-model=fields.project.key placeholder="Buscar por key del proyecto"/> <datalist id=projectKey> <option data-ng-repeat="project in jiraAlternatives.projects | orderBy: \'name\'" value={{project.key}}> <span data-ng-if="project.name != \'\'">{{project.name}} - </span>{{project.key}} </option> </datalist> </div> </div> </div> <div>&nbsp;</div> <ng-include data-ng-if=checks.isQueue src="\'scripts/app/editor/export/mandatoryFieldsTemplate.html\'"> </ng-include> <div>&nbsp;</div> </div> <div class="modal-footer btn-group-sm"> <div class="col-sm-offset-2 col-sm-5"> <button type=submit class="btn btn-primary form-control" data-ng-click=confirm() data-ng-disabled="createticketForm.$invalid || checks.exporting"> <span data-ng-if=!checks.exporting><strong>Create tickets</strong></span> <span data-ng-if=checks.exporting><strong>Creating ticket(s)</strong> <img src=assets/images/b094cc62.ellipsis1.gif height=30 width=30 /></span> </button> </div> <div class=col-sm-5> <button class="btn btn-default form-control" data-ng-click=cancel()><strong>Cancelar</strong></button> </div> </div> </div> </form> '), e.put("scripts/app/editor/export/export.html", '<form role=form name=exportForm data-ng-init=init() class=form-horizontal novalidate> <div class=modal-header> <button type=button class=close data-ng-click=cancel() aria-hidden=true>Ã—</button> <h3 class=modal-title>Export</h3> </div> <div class=modal-body> <div class="alert alert-danger fade in" data-ng-if=exportProperty.fail> <strong>{{exportProperty.failed}}</strong> </div> <uib-accordion> <uib-accordion-group is-open=selection.jira panel-class="panel panel-info"> <uib-accordion-heading> Export to JIRA <i class="pull-right glyphicon" data-ng-class="{\'glyphicon-chevron-up\':selection.jira, \'glyphicon-chevron-down\': !selection.jira}"></i> </uib-accordion-heading> <div data-ng-if=selection.jira> <div class="row form-group"> <div class="text-center col-sm-9"> <div class=input-group> <span class="input-group-addon required-field">URL:</span> <input placeholder="e.g. https://www.example-jira.com/browse/DUMBQ-20" data-ng-model=jiraUrl.url class=form-control data-ng-pattern=checks.url.pattern name=url required/> </div> <div id=failUrlMessage data-ng-show=exportForm.url.$invalid> <p class=help-block data-ng-show=exportForm.url.$error.pattern> {{checks.url.errorMessage}} </p> </div> </div> <div id=UsSpinner data-ng-if=exportProperty.showSpinner class="text-center col-sm-1"> <span spinner-on=exportProperty.showSpinner us-spinner="{radius:5, width:3, length:3, lines:9}" uib-popover="AutenticaciÃ³n en JIRA ejecutÃ¡ndose..." popover-placement=top popover-trigger=mouseenter></span> </div> <div class=col-sm-offset-1 uib-dropdown auto-close=disabled data-ng-if="((jiraAlternatives.mandatoryFields | filter : {configurable : true}).length > 0) && fields.issuetype.name && !checks.isTicket"> <button type=button class="btn btn-default" uib-dropdown-toggle id=dropdown-fields data-ng-click="getHeight(\'dropdown-fields\')"> <span class="glyphicon glyphicon-wrench"></span> Configure fields <span class=caret></span> </button> <ul class="dropdown-menu dropdown-menu-right newspaper" uib-dropdown-menu role=menu aria-labelledby=dropdown-fields data-ng-style="{\'max-height\':maxHeight}"> <li role=menuitem data-ng-repeat="field in jiraAlternatives.mandatoryFields | filter : {configurable : true}"> <span class=customFields><input type=checkbox data-ng-model=field.mandatory> {{field.name}} </span> </li> </ul> </div> </div> <div class="row col-sm-12"> <div class=pull-left> <p>Introduce un ticket o una cola (queue). <br/> <strong>Queue:</strong> a ticket will be created and a new version of the Artifact will be attached. <br/> <strong>Ticket:</strong> a new version of the Artifact will be attached to the ticket. <br/> <span data-ng-if="(jiraAlternatives.mandatoryFields | filter : {configurable : true}).length > 0"> <strong>Configure fields:</strong> select an issue type before configuring fields in order to avoid set data from being discarded. </span> </p> </div> </div> <div class=row data-ng-show=checks.isNotProject> <div class=form-group> <label for=ProjectKey class="col-sm-2 control-label">Project:</label> <div class=col-sm-9> <input list=projectKey class=form-control data-ng-model=fields.project.key placeholder="Buscar por key de proyecto"/> <datalist id=projectKey> <option data-ng-repeat="project in jiraAlternatives.projects | orderBy: \'name\'" value={{project.key}}> <span data-ng-if="project.name != \'\'">{{project.name}} - </span>{{project.key}} </option> </datalist> </div> </div> </div> </div> <div>&nbsp;</div> <div data-ng-if="checks.isQueue && selection.jira" data-ng-init=fillDefaultValues()> <p class=text-center>Another click on the <strong>Export</strong> button will create a ticket with the following <strong>required fields</strong></p> <div class=form-group> <label for=SummaryName class="col-sm-2 control-label required-field">Resumen:</label> <div class=col-sm-9> <input id=SummaryName class=form-control data-ng-model=fields.summary aria-label=SummaryName required> </div> </div> <div class=form-group> <label for=Description class="col-sm-2 control-label">Description:</label> <div class=col-sm-9> <textarea cols="" rows=5 id=Description type=text class=form-control data-ng-model=fields.description aria-label=Description></textarea> </div> </div> <ng-include src="\'scripts/app/editor/export/mandatoryFieldsTemplate.html\'"></ng-include> </div> <div>&nbsp;</div> </uib-accordion-group> <uib-accordion-group is-open=selection.file panel-class="panel panel-info"> <uib-accordion-heading> Export into File <i class="pull-right glyphicon" data-ng-class="{\'glyphicon-chevron-up\':selection.file, \'glyphicon-chevron-down\':!selection.file}"></i> </uib-accordion-heading> <div data-ng-if=selection.file> <div class="btn-group panel-info" data-toggle=buttons> <label class="btn panel-heading" uib-btn-radio="\'yaml\'" data-ng-model=extension> YAML </label> </div> </div> </uib-accordion-group> </uib-accordion> </div> <div class="modal-footer btn-group-sm"> <div class="col-sm-offset-2 col-sm-5"> <button type=submit class="btn btn-primary form-control" uib-tooltip="Exportar artefacto" data-ng-disabled="(!selection.jira && !selection.file) || exportForm.$invalid || checks.exporting || exportProperty.authenticating" data-ng-click=confirm()> <strong>Export</strong><span data-ng-if=checks.exporting><strong>ing</strong> <img src=assets/images/b094cc62.ellipsis1.gif height=30 width=30 alt="loading gif"/></span> </button> </div> <div class=col-sm-5> <button class="btn btn-default form-control" data-ng-click=cancel()><strong>Cancelar</strong></button> </div> </div> </form>'), e.put("scripts/app/editor/export/mandatoryFieldsTemplate.html", '<div class=form-group> <label for=IssueType class="col-sm-2 control-label required-field">Issue Type:</label> <div class=col-sm-9> <button data-ng-if="jiraAlternatives.issueTypes.length == 1" class="btn btn-default" disabled type=button> {{fields.issuetype.name}} </button> <select data-ng-if="jiraAlternatives.issueTypes.length > 1" id=issueType data-ng-model=fields.issuetype.name data-ng-options="issueType.name as issueType.name for issueType in jiraAlternatives.issueTypes" class=form-control required> </select> </div> </div> <div data-ng-repeat="field in jiraAlternatives.mandatoryFields | filter : {mandatory : true}"> <div data-ng-if="field.type != \'array\' && field.type != \'\'" class=form-group> <label data-ng-attr-for={{field.name}} class="col-sm-2 control-label" data-ng-class="{\'required-field\': field.required}"> {{field.name}}: </label> <div class=col-sm-9 data-ng-if=!field.values> <span data-ng-if="field.type == \'string\'"> <input data-ng-attr-id={{field.key}} data-ng-model=fields[field.key] class=form-control data-ng-required=field.required /> </span> <span data-ng-if="field.type == \'date\' || field.type == \'datetime\'" id={{field.key}}> <input class=form-control is-open=datePicker[field.key].opened close-text=Close uib-datepicker-popup=dd-MM-yyyy data-ng-model=fields[field.key] data-ng-required=field.required /> <span class=input-group-btn> <button type=button class="btn btn-default" data-ng-click="calDueDate($event, field.key)"> <i class="glyphicon glyphicon-calendar"></i> </button> </span> </span> <span data-ng-if="field.type == \'priority\'"> <select data-ng-attr-id={{field.key}} data-ng-model=fields.priority.id data-ng-options="value.id as value.name for value in field.values" class=form-control data-ng-required=field.required> </select> </span> <span data-ng-if="field.type == \'timetracking\'"> <input type=number data-ng-attr-id={{field.key}} data-ng-model=fields.timetracking.originalEstimate placeholder="hora de vencimiento en minutos" class=form-control data-ng-required=field.required /> </span> <span data-ng-if="field.type == \'number\'"> <input type=number data-ng-attr-id={{field.key}} data-ng-model=fields[field.key] class=form-control data-ng-required=field.required /> </span> <span data-ng-if="(field.type == \'user\') && field.autoCompleteUrl" uib-dropdown is-open=toggleAutoCompleteDropdown[field.key]> <input data-ng-attr-id={{field.key}} data-ng-model=fields[field.key].name data-ng-change=requestAutoComplete(field) data-ng-pattern=/^[a-z0-9]*$/ class=form-control data-ng-required=field.required /> \x3c!-- dropdown for fields which can be auto completed. --\x3e <ul class=dropdown-menu uib-dropdown-menu role=menu aria-labelledby="{{field.name.replace(\' \', \'-\')}}" style="overflow: scroll" data-ng-style="{\'max-height\':maxHeight}"> <li role=menuitem data-ng-repeat="item in autoComplete[field.key]"> <a data-ng-click="finishAutocomplete(field, item.name)"><img data-ng-src="{{item.avatarUrls[\'16x16\']}}" alt=userAvatar /> {{item.displayName}} - {{item.emailAddress}} ({{item.key}}) </a> </li> </ul> </span> <span data-ng-if="(field.type == \'user\') && !field.autoCompleteUrl"> <input type=textarea data-ng-attr-id={{field.key}} data-ng-model=fields[field.key].name data-ng-pattern=/^[a-z0-9]*$/ class=form-control data-ng-required=field.required /> </span> <span data-ng-show="!fields[field.key] && (field.type == \'user\')"> <p class=help-block>Introduzca cadenas separadas por comas. por ejemplo, juan, maria</p> <br> <span class=help-block> Caracteres permitidos: <ul><li><b>A-Z, a-z, 0-9</b></li></ul> </span> </span> </div> <div class=col-sm-9 data-ng-if=field.values> <span data-ng-if=field.values[0].value> <select data-ng-if="field.itemType != \'issuelinks\'" data-ng-attr-id={{field.key}} data-ng-model=fields[field.key] data-ng-options="value as value.value for value in field.values" class=form-control data-ng-required=field.required> </select> </span> <span data-ng-if=field.values[0].name> <select data-ng-if="field.itemType != \'issuelinks\'" data-ng-attr-id={{field.key}} data-ng-model=fields[field.key] data-ng-options="value as value.name for value in field.values" class=form-control data-ng-required=field.required> </select> </span> </div> </div> <div data-ng-if="field.type == \'array\' && field.values" class=form-group> <label data-ng-attr-for={{field.name}} class="col-sm-2 control-label" data-ng-class="{\'required-field\': field.required}">{{field.name}}:</label> <div class=col-sm-9 data-ng-if="field.schemaCustom.indexOf(\'multicheckboxes\') >= 0 || field.itemType == \'component\'"> <span data-ng-if=field.values[0].value> <select data-ng-if="field.itemType != \'issuelinks\'" data-ng-attr-id={{field.key}} data-ng-model=fields[field.key] data-ng-options="value as value.value for value in field.values" class=form-control multiple data-ng-required=field.required> </select> </span> <span data-ng-if=field.values[0].name> <select data-ng-if="field.itemType != \'issuelinks\'" data-ng-attr-id={{field.key}} data-ng-model=fields[field.key] data-ng-options="value as value.name for value in field.values" class=form-control multiple data-ng-required=field.required> </select> </span> </div> <div class=col-sm-9 data-ng-if="field.itemType !== \'component\' && field.schemaCustom.indexOf(\'multicheckboxes\') === -1"> <span data-ng-if=field.values[0].value> <select data-ng-if="field.itemType != \'issuelinks\'" data-ng-attr-id={{field.key}} data-ng-model=fields[field.key][0] data-ng-options="value as value.value for value in field.values" class=form-control data-ng-required=field.required> </select> </span> <span data-ng-if=field.values[0].name> <select data-ng-if="field.itemType != \'issuelinks\'" data-ng-attr-id={{field.key}} data-ng-model=fields[field.key][0] data-ng-options="value as value.name for value in field.values" class=form-control data-ng-required=field.required> </select> </span> </div> </div> <div data-ng-if="field.type == \'array\' && !field.values" class=form-group> <label data-ng-attr-for={{field.name}} class="col-sm-2 control-label" data-ng-class="{\'required-field\': field.required}">{{field.name}}:</label> <div class=col-sm-9> <span data-ng-if="field.key === \'labels\'" data-ng-init=initLabels()> <span class=input-group> <input data-ng-model=label.labelValue class=form-control data-ng-required=field.required /> <span class=input-group-btn> <button id=addLabel class="btn btn-default text-center" data-ng-click=addLabel(label.labelValue) uib-tooltip="Agregar etiqueta" tooltip-placement=right tooltip-append-to-body> <span class="glyphicon glyphicon-plus"></span> </button> </span> </span> </span> <ul class=items> <li class=item-row data-ng-repeat="label in fields.labels" title={{label}}> <button class=value-item type=button tabindex=-1><span class=value-text>{{label}}</span> </button> <em class=item-delete data-ng-click=removeLabel(label)></em> </li> </ul> <span data-ng-if="(!field.autoCompleteUrl || field.itemType === \'string\') && field.key !== \'labels\'"> <textarea class=form-control data-ng-attr-id={{field.key}} name={{field.name}} rows=5 placeholder="valor separado por comas" ng-model=fields[field.key] data-ng-list data-ng-required=field.required></textarea> </span> <span data-ng-if="field.autoCompleteUrl && field.itemType !== \'string\'" uib-dropdown is-open=toggleAutoCompleteDropdown[field.key]> <textarea class=form-control data-ng-attr-id={{field.key}} name={{field.name}} rows=5 placeholder="valor separado por comas" ng-model=fields[field.key] data-ng-change=requestAutoComplete(field) split-array={{field}} data-ng-required=field.required></textarea> \x3c!-- dropdown for fields which can be auto completed. --\x3e <ul class=dropdown-menu uib-dropdown-menu role=menu aria-labelledby="{{field.name.replace(\' \', \'-\')}}" style="overflow: scroll" data-ng-style="{\'max-height\':maxHeight}"> <li role=menuitem data-ng-repeat="item in autoComplete[field.key]"> <a data-ng-click="finishAutocomplete(field, item.name)"><span data-ng-bind-html=item.html></span></a> </li> </ul> </span> <span data-ng-if="!field.autoCompleteUrl && field.itemType !== \'string\'"> <textarea class=form-control data-ng-attr-id={{field.key}} name={{field.name}} rows=5 placeholder="valor separado por comas" ng-model=fields[field.key] split-array={{field}} data-ng-required=field.required></textarea> </span> <div data-ng-show="!fields[field.key] && field.key !== \'labels\'"> <p class=help-block>Introduzca cadenas separadas por comas. por ejemplo, juan, maria</p> <br> <span class=help-block> Caracteres permitidos: <ul><li><b>A-Z, a-z, 0-9</b></li></ul> </span> </div> </div> </div> </div> '), e.put("scripts/app/editor/feedback/feedback.html", ' <div class=modal-header> <button type=button class=close data-ng-click=cancel() aria-hidden=true>Ã—</button> <div class=form-group> <h3 class=modal-title>Add Suggestion <span style="position: relative; top:2px; left:20px" spinner-on=feedbackProperty.showSpinner us-spinner="{radius:5, width:3, length:3, lines:9}" uib-popover=" AutenticaciÃ³n en JIRA ejecutÃ¡ndose..." popover-trigger=mouseenter popover-append-to-body></span></h3> </div> </div> <div class=modal-body data-ng-init=init()> <form class=form-horizontal role=form> <div class=form-group> <label for=descriptionInput class="col-sm-2 control-label">DescripciÃ³n</label> <div class=col-sm-10>{{requirement.description}}</div> </div> <div class=form-group data-ng-repeat="optColumn in requirement.optionColumns | orderBy:\'showOrder\'"> <label class="col-sm-2 control-label">{{optColumn.name}}</label> <div class=col-sm-10> <span data-ng-repeat="con in optColumn.content"> <span data-ng-bind-html="con.content | trusted"></span> </span> </div> </div> <div class=form-group> <label for=Comment class="col-sm-2 control-label">Suggestion</label> <div class=col-sm-10> <textarea id=Comment rows=5 data-ng-model=comment class=form-control></textarea> </div> </div> </form> </div> <div class=modal-footer> <div class="col-sm-offset-2 col-sm-5"> <button uib-tooltip="Esto crearÃ¡ un problema en nuestra cola(queue) JIRA." class="btn btn-primary form-control" data-ng-disabled="comment == null" data-ng-click=close()> <strong>Submit</strong> </button> </div> <div class=col-sm-5> <button class="btn btn-default form-control" data-ng-click=cancel()><strong>Cancelar</strong></button> </div> </div> '), e.put("scripts/app/editor/import/import-modal.html", '<form class=form-horizontal role=form name=importForm data-ng-init=init() novalidate> <div class=modal-header> <button type=button class=close data-ng-click=cancel() aria-hidden=true>Ã—</button> <h3 class=modal-title>Import Requirements</h3> </div> <div class=modal-body> <div data-ng-show=uploadFail> <uib-alert type="alert alert-danger" dismiss-on-timeout=2000>{{failMessage}}</uib-alert> </div> <uib-accordion> <uib-accordion-group is-open=status.jira panel-class="panel panel-info"> <uib-accordion-heading> Import from JIRA <em class="pull-right glyphicon" data-ng-class="{\'glyphicon-chevron-up\':status.jira , \'glyphicon-chevron-down\': !status.jira}"></em> </uib-accordion-heading> <div data-ng-if=status.jira> <div> <span>Proporcione la URL del ticket<span data-ng-if=importProperty.defaultJIRAHost> or ticket key to resolve URL with JIRA host <strong>{{importProperty.defaultJIRAHost}}</strong></span> to a Jira Ticket. If El Ticket contains more than one attachments a list with all available attachments of El Ticket will be shown. Otherwise the attachment will be imported automatically.</span> </div> <br/> <div class=form-group> <div class="text-center col-sm-11"> <div class=input-group> <span class="input-group-addon required-field"> <span data-ng-if=importProperty.defaultJIRAHost> Ticket key/</span>URL: </span> <input id=jiraLink data-ng-model=jiraLink.url data-ng-attr-placeholder={{importProperty.jiraTicketInputPlaceholder}} class=form-control name=url required/> </div> <div data-ng-show=importForm.url.$invalid> <p class=help-block data-ng-show=importForm.url.$error.required> field is required </p> </div> <div data-ng-show=!validateURLTicketValue(jiraLink.url)> <p class=help-block>  Por favor especifique un valor valido de la <span data-ng-if="importProperty.defaultJIRAHost">key del ticket</span>o una URL </p> </div> </div> <div id=UsSpinner data-ng-if=importProperty.spinner.showSpinner class="text-center col-sm-1"> <span spinner-on=importProperty.spinner.showSpinner us-spinner="{radius:5, width:3, length:3, lines:9}" uib-popover="AutenticaciÃ³n en JIRA ejecutÃ¡ndose..." popover-placement=top popover-trigger=mouseenter></span> </div> </div> <div data-ng-if=attachmentProperties.hasAttachments> <br/> <span>Se encontraron mÃ¡s de un archivo adjunto SSDLC en el ticket que proporcionÃ³. Seleccione el que desea importar.</span> </div> <div class=form-group data-ng-if=attachmentProperties.hasAttachments> <br/> <label for=Attachments class="col-sm-2 control-label">Attachment file:</label> <div class=col-sm-9> <select id=Attachments data-ng-model=attachmentProperties.selectedAttachment data-ng-options="attachment.downloadUrl as attachment.label for attachment in attachmentProperties.attachments" class=form-control required> </select> </div> </div> </div> </uib-accordion-group> <uib-accordion-group is-open=status.file panel-class="panel panel-info"> <uib-accordion-heading> Import from File <i class="pull-right glyphicon" data-ng-class="{\'glyphicon-chevron-up\':status.file , \'glyphicon-chevron-down\':!status.file}"></i> </uib-accordion-heading> <div data-ng-if=status.file> <div class=row> <input class="col-sm-11 required-field" id=fileUpload type=file multiple accept="text/x-yaml; charset=utf-8" required/> </div> <div> <p>Max. 5MB</p> </div> </div> </uib-accordion-group> </uib-accordion> </div> <div class="modal-footer btn-group-sm"> <div class="col-sm-offset-2 col-sm-5"> <button type=submit class="btn btn-primary form-control" uib-tooltip="Importar artefacto" data-ng-click=upload() data-ng-disabled="(!status.jira && !status.file) || importForm.$invalid || importProperty.authenticating || importProperty.importing"> <strong>Import</strong><span data-ng-if=importProperty.importing><strong>ing</strong> <img src=assets/images/b094cc62.ellipsis1.gif height=30 width=30 /></span> </button> </div> <div class=col-sm-5> <button class="btn btn-default form-control" data-dismiss=modal data-ng-click=cancel()><strong>Cancelar</strong></button> </div> </div> </form>'), e.put("scripts/app/editor/modal-alert.html", ' <div class=modal-header><h3>{{headerText}}</h3></div> <div class=modal-body> <div role=alert class="alert alert-{{type}}" style="white-space: pre-line; word-wrap: break-word"> <div marked=message></div> </div> </div> <div class="modal-footer btn-group-sm"> <button class="btn btn-default btn-modal-ok" data-ng-click=confirm()>Close</button> </div> '), e.put("scripts/app/editor/persistent-warning.html", '<div style="height: 100%; width:100%;display:table"> <div style="height: 100%; vertical-align:middle;display:table-cell"> <table style="margin: 0 auto"> <tr> <td> <img src=../../assets/images/d0742080.2001.gif /> </td> <td>"All work and no play makes Jack a dull boy." Stanley Kubrick</td> </tr> </table> </div> </div> '), e.put("scripts/app/editor/presentation/configuration/config-modal.html", '<div class=modal-header data-ng-init=init()> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=cancel()>&times;</button> <h3 class=modal-title>Edit presentation</h3> </div> <div class=modal-body> <form class=form-horizontal role=form> <div class=form-group> <label for=title class="col-sm-2 control-label">Presentation title</label> <div class=col-sm-10> <input data-ng-model=config.title class=form-control> </div> </div> <div class=form-group> <label for=title class="col-sm-2 control-label">Presentation subtitle</label> <div class=col-sm-10> <input data-ng-model=config.subtitle class=form-control> </div> </div> <div class=form-group> <label for=title class="col-sm-2 control-label">Presenter</label> <div class=col-sm-10> <input data-ng-model=config.presenter class=form-control> </div> </div> <div class=form-group> <label for=title class="col-sm-2 control-label">End page</label> <div class=col-sm-10> <input data-ng-model=config.end class=form-control> </div> </div> <div class=form-group> <label for=theme class="col-sm-2 control-label">Presentation theme</label> <div class=col-sm-10> <select class=form-control data-ng-options="theme for theme in themes" data-ng-model=config.theme></select> </div> </div> <div class=form-group> <label for=theme class="col-sm-2 control-label">Transition style</label> <div class=col-sm-10> <select class=form-control data-ng-options="transition for transition in transitions" data-ng-model=config.transition></select> </div> </div> <div class=form-group> <label for=description class="col-sm-2 control-label"> Requirement Description</label> <div class=col-sm-10> <input bs-switch type=checkbox class=form-control name=description id=field_description data-ng-model=config.description switch-on-text=Include switch-off-text=Discard switch-on-color=success switch-off-color=danger switch-label-width=0 switch-handle-width=660> </div> </div> <div class=form-group data-ng-repeat="optColumn in optionColumns"> <label for={{optColumn.name}} class="col-sm-2 control-label">Requirement {{optColumn.name}}</label> <div class=col-sm-10> <input bs-switch type=checkbox class=form-control name={{optColumn.name}} id=field_{{optColumn.name}} data-ng-model=config.optionColumns[optColumn.id] switch-on-text=Include switch-off-text=Discard switch-on-color=success switch-off-color=danger switch-label-width=0 switch-handle-width=660> </div> </div> <div class=form-group data-ng-repeat="statColumn in statusColumns"> <label for={{statColumn.name}} class="col-sm-2 control-label">Requirement {{statColumn.name}}</label> <div class=col-sm-10> <input bs-switch type=checkbox class=form-control name={{statColumn.name}} id=field_{{statColumn.name}} data-ng-model=config.statusColumns[statColumn.id] switch-on-text=Include switch-off-text=Discard switch-on-color=success switch-off-color=danger switch-label-width=0 switch-handle-width=660> </div> </div> </form> </div> <div class="modal-footer btn-group-sm"> <div class="col-sm-offset-2 col-sm-5"> <button class="btn btn-primary form-control" data-ng-click=confirm() data-ng-disabled=!config.title><strong>Create</strong></button> </div> <div class=col-sm-5> <button class="btn btn-default form-control" data-ng-click=cancel()><strong>Cancelar</strong></button> </div> </div>'), e.put("scripts/app/editor/presentation/presentation.html", '<div class=slides> <section> <h1>{{values.config.title}}</h1> <h3 data-ng-if=values.config.subtitle>{{values.config.subtitle}}</h3> <p data-ng-if=values.config.presenter> <small>Presentado por {{values.config.presenter}}</small> </p> </section> <section data-ng-repeat-start="category in categories | orderBy: \'showOrder\'"> <h2>{{category.name}}</h2> </section> <section data-ng-repeat="requirement in values.requirements | filter:{categoryId: category.id} : true | orderBy: \'order\'"> <h3> {{requirement.shortName}} </h3> <section data-ng-if=requirement.description> <h6>DescripciÃ³n</h6> <p style="font-size: 55%">{{requirement.description}}</p> </section> <section data-ng-repeat="optColumn in requirement.optionColumns | orderBy : \'showOrder\'" data-ng-if="optColumn.content.length > 0 && !regex.test(optColumn.content[0].content)"> <h6>{{optColumn.name}}</h6> <p style="font-size: 55%" data-ng-repeat="content in optColumn.content"> <span data-ng-bind-html="content.content | trusted"></span> </p> </section> <section data-ng-repeat="statColumn in requirement.statusColumns | orderBy : \'showOrder\'" data-ng-if="statColumn.value !== \'\'"> <h6>{{statColumn.name}}</h6> <p style="font-size: 55%"> <span data-ng-bind-html="statColumn.value | trusted"></span> </p> </section> </section> <div data-ng-repeat-end></div> <section> <h1 data-ng-if="values.config.end !== \'\' && values.config.end">{{values.config.end}}</h1> </section> </div> '), e.put("scripts/app/editor/requirements/manageTicketsTemplates/add-ticket.html", '<form class=form-inline name=formAddTicket role=form show-validation> <div uib-alert class="alert alert-danger" data-ng-show=manageTicketProperty.jhError.show> {{manageTicketProperty.jhError.msg}} </div> <div uib-alert class="alert alert-danger" data-ng-show=manageTicketProperty.authenticationFailure> {{manageTicketProperty.authenticationFailureMessage}} </div> <jh-alert></jh-alert> <div uib-alert class="alert alert-warning" data-ng-show=manageTicketProperty.defaultJIRAHost> Enter either ticket URL or ticket key (e.g. TEST-01) to resolve URL with JIRA host <strong>{{manageTicketProperty.defaultJIRAHost}}</strong>. </div> <div class="input-group input-group-sm"> <span class=input-group-addon> <input type=checkbox data-ng-model=reqs.linkStatus.link uib-tooltip="Vincular los tickets en JIRA" tooltip-append-to-body/> </span> <input id=ticket_field name=ticket placeholder="Introduce la URL del ticket existente" class=form-control data-ng-model=reqs.tempTicket data-ng-class={wrongInput:manageTicketProperty.error} uib-tooltip="Introduce una URL de ticket vÃ¡lida." tooltip-enable={{manageTicketProperty.error}} tooltip-append-to-body tooltip-class=wrongPasswordTooltip required> </div> <div class=form-group> <div data-ng-show="formAddTicket.ticket.$dirty && formAddTicket.ticket.$invalid"> <p class=help-block data-ng-show=formAddTicket.ticket.$error.required> Por favor especifique un valor </p> <p class=help-block data-ng-show=formAddTicket.ticket.$error.pattern> Especifique una URL conforme. </p> </div> <div data-ng-show=!validateURLTicketValue(reqs.tempTicket)> <p class=help-block> Por favor especifique un valor valido de la <span data-ng-if="importProperty.defaultJIRAHost">key del ticket </span>o una URL</p> </div> </div> <div class=btn-group-sm> <label id=addTicket data-ng-if=!manageTicketProperty.spinnerProperty.showSpinner type=submit data-ng-disabled=formAddTicket.$invalid uib-tooltip=Confirm tooltip-placement=right-bottom data-ng-click="doIssueLinking(reqs, addManualTicket, reqs.tempTicket)" class="btn btn-default"> <i class="glyphicon glyphicon-ok"></i> </label> <label class="btn btn-default" data-ng-if=manageTicketProperty.spinnerProperty.showSpinner> <img src=assets/images/2e826f71.ellipsis.gif /> </label> <label id=cancelAddTicket uib-tooltip=Cancel tooltip-placement=right-bottom data-ng-click=cleanUpIssueLinking(reqs) class="btn btn-default"> <i class="glyphicon glyphicon-remove"></i> </label> </div> </form> '), e.put("scripts/app/editor/requirements/manageTicketsTemplates/display-status.html", "<div> <strong>{{reqTicket.issueKey}}:</strong> {{reqTicket.summary}} </div>"), e.put("scripts/app/editor/requirements/manageTicketsTemplates/remove-ticket.html", '<form class=form-inline name=formAddTicket role=form show-validation> <div form-group> <p class="alert alert-warning">This will only updated the yaml file and not remove the existing link between the tickets.</p> <p>Are you sure?</p> <div> <div class=btn-group data-ng-if=!manageTicketProperty.spinnerProperty.showSpinner> <label id=removeTicket type=submit data-ng-disabled=formAddTicket.$invalid uib-tooltip=Confirm tooltip-placement=right-bottom data-ng-click="doIssueLinking(reqs, removeManualTicket, reqTicket.url)" class="btn btn-default"><i class="glyphicon glyphicon-ok"></i></label> <label data-ng-click="reqTicket.enableTooltip = false" uib-tooltip=Cancel tooltip-placement=right-bottom class="btn btn-default"><i class="glyphicon glyphicon-remove"></i></label> </div> <div class=btn-group data-ng-if=manageTicketProperty.spinnerProperty.showSpinner> <label class="btn btn-default"><img src=assets/images/2e826f71.ellipsis.gif /></label> </div> </div> </div> </form> '), e.put("scripts/app/editor/requirements/requirements-test.html", '<div data-ng-init=init()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear() data-ng-if=displayProperties.showCloseButton>&times;</button> <div class="row container"> <h3 style=position:relative> {{templateInScope.title}} <span data-ng-if=authenticationProperties.spinnerProperty.showSpinner class="text-center col-sm-1" style="position: absolute;top:50%" spinner-on=authenticationProperties.spinnerProperty.showSpinner us-spinner="{radius:5, width:3, length:3, lines:9}" uib-popover={{authenticationProperties.spinnerProperty.text}} popover-placement=top popover-trigger=mouseenter popover-append-to-body=true></span> </h3> </div> </div> <div> <div data-ng-class=animation data-ng-include=templateInScope.url autoscroll></div> </div> </div> '), e.put("scripts/app/editor/requirements/requirements.html", '<div data-ng-controller=RequirementsController data-ng-init=init() data-ng-cloak=""> <button id=backToTop data-ng-click=moveToTop() class="btn btn-primary" uib-tooltip="Volver arriba" tooltip-placement=top tooltip-append-to-body=true> <span class="glyphicon glyphicon-chevron-up"></span> </button> <div class=container-fluid> <div class=col-lg-8 data-ng-if=systemSettings> <h2>{{systemSettings.name}} <span data-ng-if=ticket.url>: <a id=ticketUrl data-ng-href={{ticket.url}} target=_blank>{{ticket.key}}</a>  </span></h2> </div> <div class=row> <div class=col-lg-8> <uib-accordion style=z-index:100000> <uib-accordion-group class="panel panel-info" is-open=status.settings> <uib-accordion-heading> ConfiguraciÃ³n de artefactos<i class="pull-right glyphicon" data-ng-class="{\'glyphicon-chevron-up\':status.settings , \'glyphicon-chevron-down\':!status.settings}"></i> </uib-accordion-heading> <div class=row> <div class=col-sm-5> <h4>Creado en: <strong>{{generatedOn}}</strong> </h4> </div> <div class=col-sm-5 data-ng-if="lastChanged != null"> <h4>Ultimos cambios: <strong>{{lastChanged}}</strong> </h4> </div> <div class=col-sm-2 uib-tooltip={{updateProperties.tooltipText}} tooltip-enable={{updateProperties.updatedReqs}} tooltip-append-to-body=true> <button class="btn btn-primary pull-right" data-ng-click=changeSettings() confirm="Al cambiar la configuraciÃ³n, es posible que se eliminen algunos requisitos. Por favor, asegÃºrese de que esto es lo que quiere." data-ng-disabled="systemSettings.name == null || updateProperties.updatedReqs"> <strong>Cambiar configuraciÃ³n</strong> </button> </div> </div> <div class=row> <div class="col-sm-{{12 / systemSettings.project.length}}" data-ng-repeat="type in systemSettings.project"> <h4>Tipo de implementaciÃ³n: <strong>{{type.name}}</strong> </h4> </div> </div> <br> <div class=table-responsive> <table class="table table-hover" style=width:100%> <thead> <tr> <th data-ng-repeat="collections in systemSettings.colls"> {{collections.categoryName}}</th> </tr> </thead> <tbody> <tr> <td data-ng-repeat="collections in systemSettings.colls"> <div data-ng-repeat="values in collections.values"> <h4> <span class="label label-primary">{{values.type}}</span> </h4> </div> </td> </tr> </tbody> </table> </div> </uib-accordion-group> <uib-accordion-group class="panel panel-info" is-open=status.tags> <uib-accordion-heading> Tags <i class="pull-right glyphicon" data-ng-class="{\'glyphicon-chevron-up\':status.tags , \'glyphicon-chevron-down\':!status.tags}"></i> </uib-accordion-heading> <div class=table-responsive> <table class=table> <tbody> <tr data-ng-repeat="categories in tags | orderBy:\'showOrder\'"> <td> <div class=row> <div class=col-sm-10> <strong>{{categories.name}}</strong> </div> <div class="col-sm-2 pull-left"> <div class="help-tip pull-left" data-ng-mouseenter=pushCoordinates($event)> <p data-ng-style=setFixedPosition()> <strong style=color:yellow>{{categories.name}}: {{categories.description}}</strong> <br> <span data-ng-repeat="instances in categories.tagInstances | orderBy:\'showOrder\'"> <span style=color:#cc6600>{{instances.name}}:</span> {{instances.description}} <br> </span> </p> </div> </div> </div> </td> <td data-ng-repeat="instances in categories.tagInstances | orderBy:\'showOrder\'"> <div class="btn-group col-sm-12" data-toggle=buttons> <label id={{instances.id}} name=tagInstances class="btn btn-default col-sm-12" data-ng-click="selectTags(instances.id, instances.name, categories.name)"> <input type=checkbox>{{instances.name}}</label> </div> </td> </tr> </tbody> </table> </div> </uib-accordion-group> </uib-accordion> </div> <div class=col-lg-4> <form> <button type=button class="btn btn-primary pull-right" data-toggle=collapse data-target=#searchReq data-ng-disabled="systemSettings.name == null">Buscar <span class="glyphicon glyphicon-search"></span> </button> <div id=searchReq class=collapse> <div class=input-group> <span class=input-group-addon> <i class="glyphicon glyphicon-search"></i> </span> <input class=form-control placeholder="Cadena de bÃºsqueda" data-ng-model=search> </div> </div> </form> </div> </div> <div> <div class=pull-left uib-tooltip={{updateProperties.tooltipText}} tooltip-enable={{updateProperties.updatedReqs}} tooltip-append-to-body=true> <button class=btn data-ng-class="{true:\'btn-danger\', false:\'btn-success\'}[requirementProperties.requirementsEdited]" data-ng-click=exportSystem() data-ng-disabled="systemSettings.name == null || updateProperties.updatedReqs"> <span class="glyphicon glyphicon-export"></span> Save </button> </div> <div class=pull-right data-ng-hide=!updateProperties.updatesAvailable> <span> <button class="btn btn-success" data-ng-if=updateProperties.updatedReqs data-ng-click=acceptAllUpdates()> <span class="glyphicon glyphicon-ok"></span> Accept all changes </button> </span> <span> <button class="btn btn-danger" data-ng-click=revertUpdates() data-ng-if=updateProperties.updatedReqs uib-tooltip="Esto descartarÃ¡ todas las actualizaciones ya realizadas."> <span class="glyphicon glyphicon-remove-circle"></span> Cancel the updates </button> <button id=updateReq data-ng-if="!(systemSettings.name == null || updateProperties.updatedReqs)" class="btn btn-danger" uib-tooltip="Las actualizaciones para su conjunto de requisitos actual estÃ¡n disponibles." tooltip-enable=!{{updateProperties.updatedReqs}} data-ng-click=updatesAvailableClicked()> <span class="glyphicon glyphicon-refresh"></span> Updates available </button> </span> </div> </div> </div> <div> <p> <strong>{{requirements.length}}</strong> Requisitos encontrados <span data-ng-if="requirements.length > filterRequirements().length && !updateProperties.updatedReqs">, <span style=color:red> <strong id=requirementInRed>{{filterRequirements().length}}</strong> Requirements shown </span> </span> <span data-ng-if=updateProperties.updatedReqs style=color:red> <strong>{{newRequirements.length + deletedReqs.length}}</strong> Requirements shown</span> <span data-ng-if="(requirements | filter: {selected:true}).length">and <span style=color:#cc7a00> <strong id=requirementInRed>{{(requirements | filter: {selected:true}).length}}</strong> Requirements selected. </span> </span> </p> </div> <div id=UsSpinner data-ng-if=showSpinner class="text-center col-sm-1 col-sm-offset-6"> <span spinner-on=showSpinner us-spinner="{radius:35, width:14, length:28, lines:13}" uib-popover="Buscando requisitos" popover-placement=top popover-trigger=mouseenter popover-append-to-body></span> </div> <div class=col-md-12> <div class=pull-left> <span ng-dropdown-multiselect="" options=filterCategory selected-model=selectedCategory translation-texts=categoryLabelText extra-settings=selectedCategorySettings> </span> <span>&nbsp;</span> <div class=btn-group uib-dropdown is-open=crdropdown auto-close=outsideClick> <button class="btn btn-primary" uib-dropdown-toggle data-ng-disabled="systemSettings.name == null" data-ng-click=!crdropdown>Custom requirements <span class=caret></span> </button> <ul class=uib-dropdown-menu role=menu aria-labelledby=selectDropdown> \x3c!-- Add CR --\x3e <li role=menuitem> <a href="" data-ng-click=addRequirement()>Add</a> </li> \x3c!-- Edit CR --\x3e <li role=menuitem> <a href="" data-ng-if="customRequirements.length == 0" uib-tooltip="Primero cree un requisito personalizado." tooltip-trigger=mouseenter tooltip-placement=right style=cursor:not-allowed> <span class=disabledButton>Edit</span> </a> <a href="" data-ng-click=editRequirement() data-ng-if="customRequirements.length > 0">Edit</a> </li> \x3c!-- Remove CR --\x3e <li role=menuitem> <a href="" data-ng-if="customRequirements.length == 0" uib-tooltip="Primero cree un requisito personalizado." tooltip-trigger=mouseenter tooltip-placement=right style=cursor:not-allowed> <span class=disabledButton>Remove</span> </a> <a href="" data-ng-click=removeCustomRequirement() data-ng-if="customRequirements.length > 0">Remove</a> </li> </ul> </div> </div> <div class=pull-right> <div class=btn-group uib-dropdown is-open=withselectedDropdown.isopen auto-close=outsideClick on-toggle=excelToggle(open)> <button id=selectDropdown class="btn btn-primary" uib-dropdown-toggle data-ng-disabled="systemSettings.name == null" data-ng-click=!withselectedDropdown.isopen> Action with selected <span class=caret></span> </button> <ul class="dropdown-menu animate-dropdown" uib-dropdown-menu role=menu aria-labelledby=selectDropdown> \x3c!-- show the link with a mouse over a ticket must first be created --\x3e <li role=menuitem class=animate-hide data-ng-hide=withselectedDropdown.toggleExcel> <a href="" data-ng-click=createTicketReqs() confirm-if=checkExistingTickets() confirm="The requirement(s) {{existingTickets}} already has/have tickets. Are you sure you want to add a new ticket to it/them?" data-ng-if="(requirements | filter:{selected: true}).length && ticket.url != null"> <img src=assets/images/4a2bd86c.jira-icon.png width=16 height=16 alt="jira icon"/> Create JIRA tickets</a> <a href="" data-ng-if="(requirements | filter:{selected: true}).length == 0 || ticket.url == null && (requirements | filter:{selected: true}).length"> <span uib-tooltip="Exporte primero el conjunto de requisitos a JIRA." tooltip-trigger=mouseenter tooltip-placement=top data-ng-if="ticket.url == null && (requirements | filter:{selected: true}).length" class=disabledButton> <img src=assets/images/4a2bd86c.jira-icon.png width=16 height=16 alt="jira icon"/> Create JIRA tickets </span> <span uib-tooltip="Seleccione primero los requisitos." tooltip-trigger=mouseenter tooltip-placement=top data-ng-if="(requirements | filter:{selected: true}).length == 0" class=disabledButton> <img src=assets/images/4a2bd86c.jira-icon.png width=16 height=16 alt=""/> Create JIRA tickets </span> </a> </li> <li role=menuitem class=animate-hide data-ng-hide=withselectedDropdown.toggleExcel> <a href="" uib-tooltip="Seleccione primero los requisitos." tooltip-enable="(requirements | filter:{selected: true}).length == 0" tooltip-trigger=mouseenter tooltip-placement=top tooltip-append-to-body> <span data-ng-if="(requirements | filter:{selected: true}).length == 0" data-ng-class="{\'disabledButton\': (requirements | filter:{selected: true}).length == 0}"> <img src=assets/images/a7e9c0b5.Excel-icon.png alt="excel icon"/> Create spreadsheet </span> <span data-ng-if="(requirements | filter:{selected: true}).length > 0" data-ng-click=configExcel()> <img src=assets/images/a7e9c0b5.Excel-icon.png alt="excel icon"/> Create spreadsheet </span> </a> </li> <li role=menuitem class=animate-hide data-ng-hide=withselectedDropdown.toggleExcel> <a href="" uib-tooltip="Seleccione primero los requisitos." tooltip-enable="(requirements | filter:{selected: true}).length == 0" tooltip-trigger=mouseenter tooltip-placement=top tooltip-append-to-body> <span data-ng-if="(requirements | filter:{selected: true}).length == 0" data-ng-class="{\'disabledButton\': (requirements | filter:{selected: true}).length == 0}"> <img src=assets/images/94151230.powerpoint-icon.png alt="powerpoint icon"/> Create slides </span> <span data-ng-if="(requirements | filter:{selected: true}).length > 0" data-ng-click=exportPTT()> <img src=assets/images/94151230.powerpoint-icon.png alt="powerpoint icon"/> Create slides </span> </a> </li> <li role=menuitem class=animate-hide> <a href="" tooltip-enable="(requirements | filter:{selected: true}).length == 0" uib-tooltip="Primero seleccione los requisitos y asegÃºrese de que este se pueda probar filtrando con TAG TESTABILITY." tooltip-trigger=mouseenter tooltip-placement=top tooltip-append-to-body data-ng-if=withselectedDropdown.testAutomation> <span data-ng-if="(requirements | filter:{selected: true}).length == 0" data-ng-class="{\'disabledButton\': (requirements | filter:{selected: true}).length == 0}"> <img src=assets/images/4a3ea0a3.seccat.png /> Test requirements </span> <span data-ng-if="(requirements | filter:{selected: true}).length > 0" data-ng-click=startAutomatedTest()> <img src=assets/images/4a3ea0a3.seccat.png /> Test requirements </span> </a> </li> </ul> </div> </div> </div> <br> <br> <div> <uib-progressbar class="progress-striped active" value=progressbar.barValue type=success data-ng-hide=progressbar.hide>{{progressbar.barValue}}%</uib-progressbar> </div> <div>&nbsp;</div> <div class=container-fluid data-ng-show=progressbar.showContent> <div uib-alert data-ng-repeat="alertmessage in requirementProperties.newColumn.alertMessages" class="alert alert-warning" close=closeNewColumAlert($index)> <span data-ng-bind-html="alertmessage | trusted"></span> </div> <div class="table-responsive myMinHeight"> <table id=requirementTable class="table table-hover" infinite-scroll=loadMore() infinite-scroll-distance=1> <thead> <tr> <th data-ng-if=updateProperties.updatedReqs>Updates</th> <th data-ng-if=patternToHide class=text-center> <span data-ng-if=patternToHide tooltip-append-to-body=true> <span data-ng-show=patternToHide tooltip-append-to-body=true>Propiedades</span> <span class="glyphicon glyphicon-eye-close positionChevron" data-ng-if=patternToHide uib-tooltip="Ocultar Propiedades" style=cursor:pointer data-ng-click=hidePattern()></span> </span> <p data-ng-if=!patternToHide style=cursor:pointer data-ng-click=hidePattern()> ... <span class="glyphicon glyphicon-eye-open" style=display:inline uib-tooltip="Mostrar Propiedades" tooltip-append-to-body></span> </p> </th> <th class=text-center>Short Name <span data-ng-if=textFilters.shortName style="color: red" class="glyphicon glyphicon-filter"></span> </th> <th class=text-center>Description <span data-ng-if=textFilters.description style="color: red" class="glyphicon glyphicon-filter"></span> </th> <th class=text-center data-ng-repeat="opt in optColumns | orderBy:\'showOrder\'" data-ng-class="{\'col-md-3\': opt.selectedAlternativeSets.length > 1}"> <span data-ng-if="!opt.alternativeSets  && optToHide.indexOf(opt.id) == -1"> <span data-ng-show="optToHide.indexOf(opt.id) == -1" uib-tooltip-html=opt.description tooltip-append-to-body=true>{{opt.name}}</span> <span class="glyphicon glyphicon-eye-close positionChevron" data-ng-if="optToHide.indexOf(opt.id) == -1" uib-tooltip="Ocultar {{opt.name}}" style=cursor:pointer data-ng-click=hideColumn(opt.id)></span> </span> <span data-ng-if="opt.alternativeSets && optToHide.indexOf(opt.id) == -1"> <span data-ng-repeat="optTooltip in htmlTooltips.optColumnTooltips"> <span data-ng-if="opt.id == optTooltip.optId" ng-dropdown-multiselect="" options=opt.alternativeSets selected-model=opt.selectedAlternativeSets translation-texts=opt.optColumnLabelText extra-settings=selectedAlternativeSettings events=selectedAlternativeEvents uib-tooltip-html=optTooltip.tooltip> </span> </span> <span class="glyphicon glyphicon-eye-close positionChevron" style=margin-top:15px;cursor:pointer data-ng-if="optToHide.indexOf(opt.id) == -1" uib-tooltip="Ocultar {{opt.name}}" data-ng-click=hideColumn(opt.id)></span> </span> <span data-ng-if=textFilters.optColumns[opt.id] style="color: red" class="glyphicon glyphicon-filter"></span> <p data-ng-if="optToHide.indexOf(opt.id) != -1" style=cursor:pointer data-ng-click=hideColumn(opt.id)> ... <span class="glyphicon glyphicon-eye-open" style=display:inline uib-tooltip="Mostrar {{opt.name}}" tooltip-append-to-body></span> </p> </th> <th class=text-center data-ng-repeat="status in statusColumns | orderBy:\'showOrder\'"> <span class=text-center data-ng-if=!status.isEnum> <span uib-tooltip-html=status.description tooltip-append-to-body=true>{{status.name}}</span> <span data-ng-if=textFilters.statusColumns[status.id] style="color: red" class="glyphicon glyphicon-filter"></span> </span> <span data-ng-if=status.isEnum> <span uib-tooltip-html=status.description tooltip-append-to-body=true>{{status.name}}</span> <span data-ng-if="selectedStatusColumn[status.id].length > 0" style="color: red" class="glyphicon glyphicon-filter"></span> </span> </th> <th class="text-center col-md-1" data-ng-if=ticket.url> Status <span data-ng-if="jiraStatus.selectedStatus.length > 0" style="color: red" class="glyphicon glyphicon-filter"></span> </th> <th class=text-center></th> </tr> <tr> <td data-ng-if=updateProperties.updatedReqs></td> <td data-ng-if=patternToHide class=text-center> <input placeholder=Filter class=form-control data-ng-model=textFilters.pattern data-ng-if=patternToHide /> </td> <td class=text-center> <input placeholder=Filter class=form-control data-ng-model=textFilters.shortName /> </td> <td class=text-center> <input placeholder=Filter class=form-control data-ng-model=textFilters.description /> </td> <td class=text-center data-ng-class="" data-ng-repeat="opt in optColumns | orderBy:\'showOrder\'"> <input placeholder=Filter class=form-control data-ng-model=textFilters.optColumns[opt.id] data-ng-if="optToHide.indexOf(opt.id) == -1"/> </td> <td class=text-center data-ng-class="{\'col-md-2\': selectedStatusColumn[status.id].length > 1}" data-ng-repeat="status in statusColumns | orderBy:\'showOrder\'"> <div data-ng-if=status.isEnum> <div data-ng-repeat="statTooltip in htmlTooltips.statusColumnTooltips"> <div data-ng-if="status.id == statTooltip.statId" ng-dropdown-multiselect="" options=status.values selected-model=selectedStatusColumn[status.id] translation-texts=requirementProperties.defaultLabelFilterObject extra-settings=selectedStatusSettings uib-tooltip-html=statTooltip.tooltip tooltip-append-to-body> </div> </div> </div> <div data-ng-if=!status.isEnum> <input placeholder=Filter class=form-control data-ng-model=textFilters.statusColumns[status.id] /> </div> </td> <td class=text-center data-ng-class="{\'col-md-2\': jiraStatus.selectedStatus.length > 1}" data-ng-if=ticket.url id=StatusFilter> <div data-ng-dropdown-multiselect="" options=jiraStatus.allStatus selected-model=jiraStatus.selectedStatus extra-settings=selectedJiraStatusSettings translation-texts=requirementProperties.defaultLabelFilterObject disabled> </div> </td> <td class=text-center> <select-all filter-length={{filterRequirements().length}} on-change=performSelection(selectionValue) selected-length="{{(filterRequirements() | filter: {selected: true}).length}}"> </select-all> </td> </tr> </thead> <tbody data-ng-repeat="category in filterCategory | orderBy: \'showOrder\' | filterCategoryByCategory : selectedCategory | filter: {isNew : \'!\'}"> <tr> <td class="text-center titleSize" colspan="{{3 + optColumns.length + statusColumns.length + 1}}"> <strong>{{category.label}}</strong> <br/> </td> </tr> <tr class=animate-repeat data-ng-repeat="reqs in (filteredReqs = (requirements | orderBy:[\'categoryOrder\',\'order\'] | filterUpdates : updateProperties.updatedReqs | filterByTags : filteredRequirementsByTags | filter: {categoryId: category.id} : true | filter: { description: textFilters.description, shortName: textFilters.shortName} | filterByStatus : selectedStatusColumn: statusColumns | filterTicketStatus : jiraStatus.selectedStatus | filter:search | filterOptColumnByText: textFilters.optColumns : optColumns | filterStatusColumnByText: textFilters.statusColumns : statusColumns))" uib-tooltip={{reqs.updateTooltip}} data-ng-style="updateProperties.updatedReqs && reqs.id!==filteredReqs[$index+1].id && {\'border-bottom\':\'solid 3px\'}"> <td data-ng-if="updateProperties.updatedReqs && (!reqs.isNew && !reqs.toBeRemoved)"> {{reqs.applyUpdate}}</td> <td data-ng-if="updateProperties.updatedReqs && (reqs.isNew || reqs.toBeRemoved)"> <div> <button data-ng-if=reqs.isNew id=acceptReq class="btn btn-success" data-ng-click="applyChanges(reqs.id, true)" uib-tooltip="Aceptar el cambio y mantener el nuevo requisito"> <span class="glyphicon glyphicon-ok"></span> </button> <button data-ng-if=reqs.toBeRemoved id=acceptReq class="btn btn-success" data-ng-click="applyChanges(reqs.id, false)" uib-tooltip="Aceptar el cambio y eliminar el requisito obsoleto"> <span class="glyphicon glyphicon-ok"></span> </button> </div> <br/> <br/> <div> <button data-ng-if=reqs.isNew id=removeReq class="btn btn-danger" data-ng-click="applyChanges(reqs.id, false)" uib-tooltip="Rechace el cambio y mantenga este requisito obsoleto o elimine este requisito reciÃ©n agregado"> <span class="glyphicon glyphicon-remove"></span> </button> <button data-ng-if=reqs.toBeRemoved id=removeReq class="btn btn-danger" data-ng-click="applyChanges(reqs.id, true)" uib-tooltip="Rechazar el cambio y mantener el requisito obsoleto"> <span class="glyphicon glyphicon-remove"></span> </button> </div> </td> <td class=text-center data-ng-if=patternToHide data-ng-style="reqs.isNew && {\'background-color\':\'rgb(204, 255, 204)\'} || reqs.isOld && {\'background-color\':\'rgb(255, 204, 204)\'}"> <div data-ng-repeat="col in reqs.collectionInstances | orderBy:\'showOrder\' "><span class="label label-primary">{{col.name}}</span></div> </td> <td class=text-center data-ng-style="reqs.isNew && {\'background-color\':\'rgb(204, 255, 204)\'} || reqs.isOld && {\'background-color\':\'rgb(255, 204, 204)\'}"> <strong> <div data-ng-if="!(reqs.isNew || reqs.isOld)" data-ng-bind-html="reqs.shortName | trusted"></div> <div data-ng-if="reqs.isNew || reqs.isOld" marked=reqs.diffShortName></div> </strong> <div disable-all=updateProperties.updatedReqs data-ng-if="reqs.id < 10000"> <span data-ng-if=updateProperties.updatedReqs uib-tooltip="Aplique las actualizaciones primero." style=cursor:not-allowed tooltip-append-to-body> <img src=assets/images/227cec23.feedback.png width=16 height=16 alt=feedback /> </span> <span id=feedbackIcon data-ng-if=!updateProperties.updatedReqs uib-tooltip="Proporcione comentarios para este requisito." style=cursor:pointer data-ng-click=openFeedback(reqs) tooltip-append-to-body> <img src=assets/images/227cec23.feedback.png width=16 height=16 alt=feedback /> </span> </div> </td> <td id=description data-ng-class={changes:reqs.isOld} data-ng-style="(reqs.isNew && {\'background-color\':\'rgb(204, 255, 204)\'})\n\t\t\t    \t\t|| reqs.isOld && {\'background-color\':\'rgb(255, 204, 204)\'}"> <div data-ng-if="!(reqs.isNew || reqs.isOld)" data-ng-bind-html="reqs.description | trusted"></div> <div data-ng-if="reqs.isNew || reqs.isOld" marked=reqs.diffDescription></div> </td> <td data-ng-repeat="opt in optColumns | orderBy:\'showOrder\'" data-ng-style="(reqs.isNew && {\'background-color\':\'rgb(204, 255, 204)\'}) || reqs.isOld && {\'background-color\':\'rgb(255, 204, 204)\'}"> <span data-ng-repeat-start="optionColumn in reqs.optionColumns | filter: {showOrder : opt.id}" data-ng-hide=true></span> <div data-ng-repeat-end data-ng-repeat="optionColumnContent in optionColumn.content" data-ng-show="optToHide.indexOf(optionColumn.showOrder) == -1"> <div data-ng-if="!(reqs.isNew || reqs.isOld)"> <div data-ng-if=!optionColumnContent.setId data-ng-bind-html="optionColumnContent.content | trusted"></div> <div data-ng-if=optionColumnContent.setId class="panel panel-info"> <div class=panel-heading style="padding-top: 1px; padding-bottom: 0px"> <div data-ng-bind-html="newStyleAlternativeInstances[reqs.id][optionColumnContent.id].title | trusted"> </div> </div> <div class=panel-body> <div data-ng-bind-html="newStyleAlternativeInstances[reqs.id][optionColumnContent.id].body | trusted"> </div> </div> </div> </div> <div data-ng-if="reqs.isNew || reqs.isOld" marked=optionColumnContent.diffContent> </div> </div> </td> <td class=text-center data-ng-repeat="stats in statusColumns | orderBy:\'showOrder\'" data-ng-style="reqs.isNew && {\'background-color\':\'rgb(204, 255, 204)\'} || reqs.isOld && {\'background-color\':\'rgb(255, 204, 204)\'}"> <div data-ng-if=!stats.isEnum> <div data-ng-repeat="statusValue in reqs.statusColumns"> <div data-ng-if="statusValue.id === stats.id"> <textarea class=form-control cols=1000 rows=5 data-ng-model=statusValue.value data-ng-change=enableSave(true)></textarea> </div> </div> </div> <div data-ng-if=stats.isEnum uib-dropdown> <button id=fulfilled class="btn btn-default" uib-dropdown-toggle>{{getStatusValue(reqs.id, stats.id)}} <span class=caret></span> </button> <ul class=uib-dropdown-menu aria-labelledby=statDropdown> <li data-ng-repeat="value in stats.values | orderBy:\'showOrder\'"> <a href="" data-ng-click="selectStatusValue(reqs.id, stats.id, value)"> <span data-ng-bind=value.name></span> </a> </li> </ul> </div> </td> <td class=text-center data-ng-style="reqs.isNew && {\'background-color\':\'rgb(204, 255, 204)\'} || reqs.isOld && {\'background-color\':\'rgb(255, 204, 204)\'}" data-ng-if=ticket.url> <div data-ng-if=reqs.tickets data-ng-repeat="reqTicket in reqs.linkStatus.ticketStatus"> <a href={{reqTicket.url}} target=_blank uib-popover-template=jiraStatus.displayStatusTemplateUrl popover-trigger=mouseenter popover-append-to-body=true> <img data-ng-src={{reqTicket.iconUrl}} data-ng-if="reqTicket.iconUrl != null" popover-append-to-body=true alt="ticket status"/> {{reqTicket.name}} </a> <span> <span id=removeManualTicket class="glyphicon glyphicon-minus" style="cursor: pointer" uib-tooltip="quitar enlace del ticket : {{reqTicket.issueKey}}" tooltip-placement=right-bottom uib-popover-template=jiraStatus.removeTicketTemplateUrl popover-is-open=reqTicket.enableTooltip popover-append-to-body=true></span> </span> </div> <div id=addManualTicket class="glyphicon glyphicon-plus" style="cursor: pointer" uib-tooltip="Agregar un ticket existente" tooltip-placement=right-bottom uib-popover-template=jiraStatus.addTicketTemplateUrl popover-is-open=reqs.linkStatus.enableTooltip popover-append-to-body=true> </div> </td> <td class=text-center data-ng-style="reqs.isNew && {\'background-color\':\'rgb(204, 255, 204)\'} || reqs.isOld && {\'background-color\':\'rgb(255, 204, 204)\'}"> </td> <td> <input type=checkbox data-ng-model=reqs.selected /> </td> </tr> </tbody> </table> </div> </div> </div> '), e.put("scripts/app/editor/requirements/testRequirementsTemplates/errorTemplate.html", '<div class=modal-body> <div class=text-center data-ng-class=error.class>{{error.message}}</div> </div> <div class=modal-footer> <button class="btn btn-primary" data-ng-click=backToInfo() uib-tooltip="Haga clic para volver y comenzar otra prueba con los mismos requisitos seleccionados." tooltip-append-to-body=true> <span class="glyphicon glyphicon-arrow-left"></span>&nbsp;<span> Back </span></button> </div> '), e.put("scripts/app/editor/requirements/testRequirementsTemplates/infoTemplate.html", '<form class=form-horizontal name=startTestForm role=form data-ng-submit=startTest(startTestForm)> <div class=modal-body> <jhi-alert></jhi-alert> <div data-ng-if=error.display data-ng-class=error.class>{{error.message}}</div> <div class="alert alert-warning">AsegÃºrese de que los requisitos seleccionados sean comprobables. Dependiendo de cÃ³mo se pruebe un requisito, asegÃºrese de completar los campos necesarios.</div> <div class=container> <div class=row> <div class=col-md-4> <span style=color:#cc7a00> <strong>You have selected {{entity.length}} requirements.</strong> </span> </div> <div class=pull-right> <div class=col-md-4> <button type=button class="btn btn-default" data-ng-click=toggleShowHide()> <span data-ng-class=displayProperties.myglyphicon></span>&nbsp; <span>{{displayProperties.showTypes}}</span> </button> </div> </div> </div> </div> <br> <div data-ng-if=!displayProperties.show> <table class="table table-responsive"> <tr> <thNombre/th> <th>DescripciÃ³n</th> <th></th> </tr> <tr data-ng-repeat="req in entity"> <td>{{req.shortName}}</td> <td>{{req.description}}</td> <td> <span data-ng-if="req.remove==false" class="glyphicon glyphicon-minus" uib-tooltip="Remover este requisito de la lista." tooltip-append-to-body=true data-ng-click="req.remove=true"></span> <div data-ng-if=req.remove> <form class=form-inline role=form> Are you sure? <button type=submit class="btn btn-xs btn-default" data-ng-click=removeReq(req.shortName)>Yes</button> <button type=button class="btn btn-xs btn-default" data-ng-click="req.remove=false">No</button> </form> </div> </td> </tr> </table> </div> <br> <br> <div class="form-group row"> <label class="col-form-label col-sm-offset-2 col-sm-2" for=field_instanceUrl> SecurityCAT URL <div class=help-tip data-ng-mouseenter=pushCoordinates($event)> <p>The securityCAT instance which shall be use to test these requirements.</p> </div> </label> <div class=col-sm-8> <input id=field_instanceUrl name=instanceUrl data-ng-model=authenticationProperties.displayProperty.url data-ng-pattern=urlPattern class=form-control required/> <div data-ng-show="testForm.instanceUrl.$invalid || $testForm.instanceUrl.$dirty"> <p class=help-block data-ng-show=testForm.instanceUrl.$error.required> The instance URL is required </p> <p class=help-block data-ng-show=testForm.instanceUrl.$error.pattern> Ingrese una URL conforme </p> </div> </div> </div> <hr> <div class="form-group row"> <label class="col-form-label col-sm-2" for=field_appUrl> Application URL <div class=help-tip data-ng-mouseenter=pushCoordinates($event)> <p>The application url of the artifact to be tested.</p> </div> </label> <div class=col-sm-10> <input id=field_appUrl name=appUrl data-ng-model=testObject.testProperties.appUrl data-ng-pattern=urlPattern class=form-control /> <div data-ng-show="testForm.appUrl.$invalid || $testForm.appUrl.$dirty"> <p class=help-block data-ng-show=testForm.appUrl.$error.pattern> Ingrese una URL conforme </p> </div> </div> </div> <div class="form-group row"> <label class="col-form-label col-sm-2" for=field_scmUrl> SCM URL <div class=help-tip data-ng-mouseenter=pushCoordinates($event)> <p>The URL to the source code management system (e.g GIT, SVN, etc..).</p> </div> </label> <div class=col-sm-10> <input id=field_scmUrl name=scmUrl data-ng-model=testObject.testProperties.scmUrl class=form-control /> \x3c!--<div data-ng-show="testForm.scmUrl.$invalid || testForm.scmUrl.$dirty">\n\t\t\t\t\t<p class="help-block" data-ng-show="testForm.scmUrl.$error.required">\n\t\t\t\t\t\tThis field is required\n\t\t\t\t\t</p>\n\t\t\t\t</div>--\x3e </div> \x3c!-- <div data-ng-show="$testForm.appUrl.$invalid || $testForm.appUrl.$dirty">\n\t\t\t\t<p class="help-block" data-ng-show="$testForm.appUrl.$error.pattern">\n\t\t\t\t\tIngrese una URL conforme\n\t\t\t\t</p>\n\t\t\t\t<p class="help-block" data-ng-show="$testForm.appUrl.$error.required">\n\t\t\t\t\tThis field is required\n\t\t\t\t</p>\n\t\t\t</div> --\x3e </div> <div class="form-group row"> <label class="col-form-label col-sm-2" for=field_sonarKey> Sonarqube Key <div class=help-tip data-ng-mouseenter=pushCoordinates($event)> <p>The key of the project of the artifact in the sonarqube instance. </p> </div> </label>  <div class=col-sm-10> <input id=field_sonarKey name=sonarKey data-ng-model=testObject.testProperties.sonarKey class=form-control /> </div> </div> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp; <span>Cancelar</span> </button> <button type=submit data-ng-disabled="startTestForm.$invalid || authenticationProperties.spinnerProperty.showSpinner || startTestForm.$submitted" class="btn btn-primary"> <span class="glyphicon glyphicon-play"></span>&nbsp; <span>Start</span> </button> </div> </form> '), e.put("scripts/app/editor/requirements/testRequirementsTemplates/loadingTemplate.html", '<form name=stopTestForm role=form novalidate data-ng-submit=stopTest()> <div class=modal-body style=300px> <div class=container> <div id=UsSpinner1 class="text-center col-md-8" style=margin-top:100px id=UsSpinner spinner-on=true us-spinner="{radius:51, width:14, length:30, lines:13, speed:0.8}"></div><br/> <h4 class=text-center style=margin-top:200px> Automated test is running...</h4> </div> </div> <div class=modal-footer> <button type=submit class="btn btn-danger col-md-offset-2 text-center" data-ng-disabled=stopTestForm.$submitted>Stop running test</button> </div> </form> '), e.put("scripts/app/editor/requirements/testRequirementsTemplates/resultTemplate.html", '<form name=stopTestForm role=form novalidate data-ng-submit=stopTest() data-ng-cloak=""> <div class=modal-body> <p>Alternatively, the results are available at <a href={{testResults.self}} target=_blank>{{testResults.self}}</a>.</p> <jh-alert></jh-alert> <div class=table-responsive> <table class="table table-hover"> <thead> <tr> <thNombre/th> <th class=text-center>DescripciÃ³n</th> <th>Result</th> <th class=text-center>Confidence level</th> <th class=text-center>Message</th> <th class=text-center>Tool</th> </tr> </thead> <tbody data-ng-repeat="req in testResults.reqs | orderBy : \'showOrder\'"> <tr data-ng-repeat="result in req.testResults"> <td rowspan={{req.testResults.length}} data-ng-if=$first> <strong>{{req.shortName}}</strong> </td> <td rowspan={{req.testResults.length}} data-ng-if=$first>{{req.description}}</td> <td> <div data-ng-if=error.display>N/A</div> <div data-ng-if=!error.display> <div data-ng-if="STATUSCONSTANT[result.status] === 0" style=color:gray>{{displayProperties.inProgressMessage}}</div> <div data-ng-if="STATUSCONSTANT[result.status] !== 0"> <div data-ng-if="STATUSCONSTANT[result.status] > 0"> <button class="btn btn-circle" data-ng-class="{\'btn-success\':STATUSCONSTANT[result.status]===STATUSCONSTANT.PASSED, \'btn-danger\': STATUSCONSTANT[result.status]===STATUSCONSTANT.FAILED}" uib-tooltib=result.status tooltip-placement=top tooltip-trigger=mouseenter> <span class=glyphicon data-ng-class="{\'glyphicon-ok\':STATUSCONSTANT[result.status]===STATUSCONSTANT.PASSED, \'glyphicon-remove\': STATUSCONSTANT[result.status]===STATUSCONSTANT.FAILED}"></span> </button> </div> <div data-ng-if="STATUSCONSTANT[result.status] === -1" class=text-center> N/A</div> </div> </div> </td> <td> <div data-ng-if=error.display>N/A</div> <div data-ng-if=!error.display> <div data-ng-if="STATUSCONSTANT[result.status] === 0" style=color:gray>{{displayProperties.inProgressMessage}}</div> <div data-ng-if="STATUSCONSTANT[result.status] !== 0"> <uib-progressbar class=progress-striped value=result.confidenceLevel type={{getProgressbarType(result.confidenceLevel)}}> <span style="color:white; white-space:nowrap" data-ng-if="result.confidenceLevel >= 0">{{result.confidenceLevel}}%</span> <span style="color:black; white-space:nowrap" data-ng-if="result.confidenceLevel < 0">{{result.confidenceLevel}}%</span> </uib-progressbar> </div> </div> </td> <td> <div data-ng-if=error.display>N/A</div> <div data-ng-if=!error.display> <div data-ng-if="STATUSCONSTANT[result.status] === 0" style=color:gray>{{displayProperties.inProgressMessage}}</div> <div data-ng-if="STATUSCONSTANT[result.status] !== 0" data-ng-bind-html="result.message | limitTo: result.limitDesc | trusted "></div> <span data-ng-if="STATUSCONSTANT[result.status] !== 0" class=pull-right> <button data-ng-if="result.message.length > result.limitDesc" data-ng-click=showLongdesc(result) class="btn btn-primary btn-xs" uib-tooltip="Mostrar el mensaje completo." tooltip-append-to-body=true>Show more</button> <button data-ng-if=!result.limitDesc data-ng-click=hideLongdesc(result) class="btn btn-primary btn-xs" uib-tooltip="Ocultar parte del mensaje." tooltip-append-to-body=true>Show less</button> </span> </div> </td> <td>{{result.tool}}</td> </tr> </tbody> </table> </div> </div> <div class=modal-footer> <div data-ng-if=authenticationProperties.spinnerProperty.showSpinner> <button type=submit class="btn btn-danger col-md-offset-2 text-center" data-ng-disabled=stopTestForm.$submitted uib-tooltip="PerderÃ¡ todos los resultados si detiene la prueba. Simplemente cierre este modal si estos resultados serÃ¡n necesarios mÃ¡s adelante."> Stop running test </button> </div> <div data-ng-if=!authenticationProperties.spinnerProperty.showSpinner> <button class="btn btn-primary" type=button data-ng-click=backToInfo() uib-tooltip="Haga clic para volver y comenzar otra prueba con los mismos requisitos seleccionados." tooltip-append-to-body=true> <span class="glyphicon glyphicon-arrow-left"></span>&nbsp; <span> Back </span></button> </div> </div> </form> '), e.put("scripts/app/editor/starter/starter.html", '<div data-ng-cloak> <div class=modal-header> <button type=button class=close data-ng-click=cancel() aria-hidden=true>Ã—</button> <h3 class=modal-title>ConfiguraciÃ³n de artefactos</h3> </div> <div class=modal-body> <div class=form-group> <div class="alert alert-danger fade in" data-ng-if=fail> <strong>{{failed}}</strong> </div> <div id=falsePattern class="alert alert-danger fade in" data-ng-if=artifactName.artifact.$error.pattern> <strong>Artifact name is invalid. Only alphanumeric and ( ) , . [ ] ! # $ % & \' * + - = ? ^ _ ` { | } ~ characters are allowed.</strong> </div> <form name=artifactName class=main-form> <div class=container> <div class=row> <div class=col-sm-12> <h3><label for=inputName class=required-field>Nombre del artefacto:</label></h3> </div> </div> </div> <div class=container> <div class=row> <div class=col-sm-10> <div class=control-group> <input class=form-control data-ng-model=starterForm.name id=inputName name=artifact data-ng-pattern=regex> </div> </div> <div class="col-sm-1 pull-right"> <div class=help-tip> <p>Por favor, especifique el nombre del artefacto.</p> </div> </div> </div> </div> </form> </div> <br> <div class=container> <div class=row> <div class=col-sm-12> <h3> <label for=collections>Propiedades del artefacto:</label> </h3> </div> </div> </div> <br> <div class=container> <div class=row data-ng-repeat="category in categories | orderBy:\'showOrder\'"> <div class=col-sm-3> <strong>{{category.name}}</strong> <div class="help-tip pull-right"> <p> <strong style=color:yellow>{{category.name}}: {{category.description}}</strong><br> <span data-ng-repeat="instances in category.collectionInstances | orderBy:\'showOrder\'"> <span style=color:#cc6600>{{instances.name}}:</span> {{instances.description}}<br> </span> </p> </div> </div> <div class=col-sm-1></div> <div class=col-sm-8> <div ng-dropdown-multiselect="" options=category.collectionInstances selected-model=category.selectedCollectionSets extra-settings=selectedCollectionSettings events=selectedCollectionEvents></div> <br> </div> </div> </div> <br> <div class=container> <div class=row> <div class=col-sm-12> <h3><label for=collections class=required-field>ImplementaciÃ³n:</label></h3> </div> </div> </div> <br> <div class=container> <div class=row class=form-group> <div class=col-sm-3> <strong>Tipo de ImplementaciÃ³n</strong> <div class="help-tip pull-right"> <p> <span data-ng-repeat="type in projectType | orderBy:\'showOrder\'"> <span style=color:#cc6600>{{type.name}}:</span> {{type.description}}<br> </span> </p> </div> </div> <div class=col-sm-1></div> <div class=col-sm-3 uib-dropdown> <button class="btn btn-default" data-ng-disabled=disabled type=button uib-dropdown-toggle> {{projectTypeModel.name}} <span data-ng-if="projectType.length > 1" class=caret></span></button> <ul class=uib-dropdown-menu aria-labelledby=typeDropdown> <li data-ng-repeat="type in projectType"><a href="" data-ng-click=selectProject(type)>{{type.name}}</a> </li> </ul> </div> </div> </div> </div> </div> <div class=modal-footer> <div class="col-sm-offset-8 col-sm-4"> <button class="btn btn-primary form-control pull-right" data-ng-click=finish() data-ng-disabled="projectTypeModel.name == \'Select\' || starterForm.name == null || starterForm.name.length == 0"> <strong>Generar</strong></button> </div> </div> '), e.put("scripts/app/entities/alternativeInstance/alternativeInstance-bulk.html", '<form name=editForm role=form novalidate ng-submit=save()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myCollectionTagInstanceLabel>Bulk change for Alternative Sets</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=container> <div class=row> <div class=col-md-4> <span style=color:red><strong>You have selected {{alternativeInstances.length}} alternative sets.</strong></span> </div> <div class=pull-right> <div class=col-md-4> <button type=button class="btn btn-default" data-ng-click=toggleShowHide()> <span ng-class=glyphicon></span>&nbsp;<span>{{showTypes}}</span> </button> </div> </div> </div> </div> <br> <div data-ng-if=!show> <table class="table table-responsive"> <tr> <th>Contenido</th> </tr> <tr data-ng-repeat="instance in alternativeInstances"> <td data-ng-bind-html="content.content | trusted"></td> </tr> </table> </div> <br> <span>Select an Alternative Set to apply the selected instances to this Alternative Set</span><br><br> <div class=btn-group> <button data-ng-repeat="set in alternativeSets | orderBy:\'showOrder\'" class="btn btn-primary" type=button data-ng-model=selectedAlternativeSet.value uib-btn-radio=set.id uncheckable>{{set.name}}</button> </div> <br> <span>Select a Requirement Skeleton to apply the selected instances to this Requirement Skeleton</span><br><br> <div class=form-group> <label for=field_requirementSkeleton>requirementSkeleton</label> <select class=form-control id=field_requirementSkeleton name=requirementSkeleton data-ng-model=selectedRequirementSkeleton.value data-ng-options="requirementSkeleton.id as requirementSkeleton.shortName + \' - \' + requirementSkeleton.description.substr(0, 80) + \'...\' group by \n            requirementSkeleton.reqCategory.name for requirementSkeleton in requirementSkeletons| orderBy : [\'reqCategory.id\', \'showOrder\'] track by requirementSkeleton.id"> <option value=""></option> </select> </div> <br> </div> <div class="modal fade" id=deleteAlternativeInstancesConfirmation> <div class=modal-dialog> <div class=modal-content> <form> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete all selected Alternative Instances?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit class="btn btn-danger" data-ng-click=confirmDeleteAll(alternativeInstances)> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=modal-footer> <div class=col-sm-1> <button type=button data-ng-click=delete() class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete all selected Alternative Instances</span> </button> </div> <button type=button class="btn btn-default" data-dismiss=modal ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit data-ng-disabled=editForm.$invalid class="btn btn-primary" data-ng-click=save()> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </form> '), e.put("scripts/app/entities/alternativeInstance/alternativeInstance-detail.html", ' <div> <h2><span>AlternativeInstance</span> {{alternativeInstance.id}}</h2> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> <th>Field</th> <th>Valor</th> </tr> </thead> <tbody> <tr> <td> <span>Contenido</span> </td> <td> <span class=form-control-static><div data-ng-bind-html="alternativeInstance.content | trusted"></div></span> </td> </tr> <tr> <td> <span>alternativeSet</span> </td> <td> <a class=form-control-static ui-sref=alternativeSet.detail({id:alternativeInstance.alternativeSet.id})>{{alternativeInstance.alternativeSet.name}}</a> </td> </tr> <tr> <td> <span>requirementSkeleton</span> </td> <td> <a class=form-control-static ui-sref=requirementSkeleton.detail({id:alternativeInstance.requirementSkeleton.id})>{{alternativeInstance.requirementSkeleton.shortName}}</a> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class="btn btn-info"> <span class="glyphicon glyphicon-arrow-left"></span>&nbsp;<span> Back</span> </button> </div> '), e.put("scripts/app/entities/alternativeInstance/alternativeInstance-dialog.html", '<form name=editForm role=form novalidate data-ng-submit=save()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title id=myAlternativeInstanceLabel>Crear o editar una Instancia Alternativa</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id>ID</label> <input class=form-control id=id name=id data-ng-model=alternativeInstance.id readonly> </div> <div class=form-group> <label for=field_content>Contenido</label><br/> <textarea id=field_content class=container data-ng-model=alternativeInstance.content cols=125 rows=10 required></textarea> </div> <div data-ng-bind-html="alternativeInstance.content | trusted"></div> <div class=form-group> <label for=field_alternativeSet>alternativeSet</label> <select class=form-control id=field_alternativeSet name=alternativeSet data-ng-model=alternativeInstance.alternativeSet data-ng-options="alternativeSet as alternativeSet.name for alternativeSet in alternativesets track by alternativeSet.id" required> <option value=""></option> </select> </div> <div class=form-group> <label for=field_requirementSkeleton>requirementSkeleton</label> <select class=form-control id=field_requirementSkeleton name=requirementSkeleton data-ng-model=alternativeInstance.requirementSkeleton data-ng-options="requirementSkeleton as requirementSkeleton.shortName + \' - \' + requirementSkeleton.description.substr(0, 80) + \'...\' group by requirementSkeleton.reqCategory.name for requirementSkeleton in requirementskeletons\n            | orderBy : [\'reqCategory.id\', \'showOrder\'] track by requirementSkeleton.id" required> <option value=""></option> </select> </div> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit data-ng-disabled="editForm.$invalid || editForm.$submitted" class="btn btn-primary"> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </form>'), e.put("scripts/app/entities/alternativeInstance/alternativeInstances.html", '<div> <h2 class=page-header>Instancias Alternativas</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class="btn btn-primary" ui-sref=alternativeInstance.new> <span class="glyphicon glyphicon-flash"></span> <span>Crear una nueva Instancia Alternativa</span> </button> </div> <div class=col-md-5> <form> <button type=button class="btn btn-info pull-left" data-toggle=collapse data-target=#searchStringID>Buscar <span class="glyphicon glyphicon-search"></span> </button> <div id=searchStringID class=collapse> <div class=input-group> <input class="form-control col-md-5" placeholder="Cadena de bÃºsqueda" data-ng-model=searchString> </div> </div> </form> </div> <div class=col-md-3> <button class="btn btn-primary" ui-sref=alternativeInstance.bulk data-ng-click=bulkChange() data-ng-if="(alternativeInstances | filter:{selected: true}).length != 0"> <span class="glyphicon glyphicon-edit"></span> <span>Bulk change with selected</span> </button> </div> </div> </div> <br> <div class="modal fade" id=deleteAlternativeInstanceConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm data-ng-submit=confirmDelete(alternativeInstance.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete this Alternative Instance?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit data-ng-disabled=deleteForm.$invalid class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> <th><span ng-dropdown-multiselect="" options=alternativeSets selected-model=selectedAlternativeSets translation-texts=setLabelText extra-settings=selectedSetSettings> </span> </th> <th>Esqueleto de Requerimiento</th> <th>Contenido</th> <th></th> <th class=text-center> <select-all filter-length={{filterEntity().length}} on-change=performSelection(selectionValue) selected-length="{{(filterEntity() | filter: {selected: true}).length}}"></select-all> </th> </tr> </thead> <tbody> <tr class=animate-repeat data-ng-repeat="alternativeInstance in alternativeInstances | filterCategoryForEntities: selectedAlternativeSets : \'alternativeSet\'| filter:searchString | orderBy: [\'alternativeSet.showOrder\', \'requirementSkeleton.reqCategory.showOrder\', \'requirementSkeleton.showOrder\']"> <td> <a ui-sref=alternativeSet.detail({id:alternativeInstance.alternativeSet.id})>{{alternativeInstance.alternativeSet.name}}</a> </td> <td> <a ui-sref=requirementSkeleton.detail({id:alternativeInstance.requirementSkeleton.id}) title={{alternativeInstance.requirementSkeleton.description}}>{{alternativeInstance.requirementSkeleton.shortName}}</a> </td> <td id=content data-ng-bind-html="alternativeInstance.content | trusted"></td> <td> <button type=submit ui-sref=alternativeInstance.detail({id:alternativeInstance.id}) class="btn btn-info btn-sm"> <span class="glyphicon glyphicon-eye-open"></span>&nbsp;<span> View</span> </button> <button type=submit ui-sref=alternativeInstance.edit({id:alternativeInstance.id}) class="btn btn-primary btn-sm"> <span class="glyphicon glyphicon-pencil"></span>&nbsp;<span> Edit</span> </button> <button type=submit ng-click=delete(alternativeInstance.id) class="btn btn-danger btn-sm"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete</span> </button> </td> <td class=text-center> <input type=checkbox data-ng-model=alternativeInstance.selected /> </td> </tr> </tbody> </table> </div> </div>'), e.put("scripts/app/entities/alternativeSet/alternativeSet-bulk.html", '<form name=editForm role=form novalidate ng-submit=save()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myCollectionTagInstanceLabel>Bulk change for Alternative Sets</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=container> <div class=row> <div class=col-md-4> <span style=color:red><strong>You have selected {{alternativeSets.length}} alternative sets.</strong></span> </div> <div class=pull-right> <div class=col-md-4> <button type=button class="btn btn-default" data-ng-click=toggleShowHide()> <span ng-class=glyphicon></span>&nbsp;<span>{{showTypes}}</span> </button> </div> </div> </div> </div> <br> <div data-ng-if=!show> <table class="table table-responsive"> <tr> <th>Nombre</th> <th>DescripciÃ³n</th> </tr> <tr data-ng-repeat="set in alternativeSets"> <td>{{set.name}}</td> <td>{{set.description}}</td> </tr> </table> </div> <br> <span>Select a Option Column to apply the selected Alternative Sets to this Option Column</span><br><br> <div class=btn-group> <button data-ng-repeat="optColumn in optColumns | orderBy:\'showOrder\'" class="btn btn-primary" type=button data-ng-model=selectedOptColumn.value uib-btn-radio=optColumn.id uncheckable>{{optColumn.name}}</button> </div> <br> <br> <div class=form-group> <label for=field_active>Activo</label><br><br> <input bs-switch type=checkbox class=form-control name=active id=field_active data-ng-model=state.active switch-on-text=Active switch-off-text="No Activo" switch-on-color=success switch-off-color=danger switch-label-width=0 switch-size=large switch-handle-width=655> </div> <br> </div> <div class="modal fade" id=deleteAlternativeSetsConfirmation> <div class=modal-dialog> <div class=modal-content> <form> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete all selected Alternative Sets?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit class="btn btn-danger" data-ng-click=confirmDeleteAll(alternativeSets)> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=modal-footer> <div class=col-sm-1> <button type=button data-ng-click=delete() class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete all selected Alternative Sets</span> </button> </div> <button type=button class="btn btn-default" data-dismiss=modal ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit ng-disabled=editForm.$invalid class="btn btn-primary" data-ng-click=save()> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </form> '), e.put("scripts/app/entities/alternativeSet/alternativeSet-detail.html", ' <div> <h2><span>AlternativeSet</span> {{alternativeSet.id}}</h2> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> <th>Field</th> <th>Valor</th> </tr> </thead> <tbody> <tr> <td> <span>Nombre</span> </td> <td> <span class=form-control-static>{{alternativeSet.name}}</span> </td> </tr> <tr> <td> <span>DescripciÃ³n</span> </td> <td> <span class=form-control-static>{{alternativeSet.description}}</span> </td> </tr> <tr> <td> <span>ShowOrder</span> </td> <td> <span class=form-control-static>{{alternativeSet.showOrder}}</span> </td> </tr> <tr> <td> <span>Activo</span> </td> <td> <span class=form-control-static>{{alternativeSet.active}}</span> </td> </tr> <tr> <td> <span>optColumn</span> </td> <td> <a class=form-control-static ui-sref=optColumn.detail({id:alternativeSet.optColumn.id})>{{alternativeSet.optColumn.name}}</a> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class="btn btn-info"> <span class="glyphicon glyphicon-arrow-left"></span>&nbsp;<span> Back</span> </button> </div> '), e.put("scripts/app/entities/alternativeSet/alternativeSet-dialog.html", ' <form name=editForm role=form novalidate ng-submit=save()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myAlternativeSetLabel>Crear o editar un Conjunto Alternativo</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id>ID</label> <input class=form-control id=id name=id ng-model=alternativeSet.id readonly> </div> <div class=form-group> <label for=field_name>Nombre</label> <input class=form-control name=name id=field_name ng-model=alternativeSet.name required> </div> <div class=form-group> <label for=field_description>DescripciÃ³n</label> <input class=form-control name=description id=field_description ng-model=alternativeSet.description> </div> <div class=form-group> <label for=field_showOrder>ShowOrder</label> <input type=number class=form-control name=showOrder id=field_showOrder ng-model=alternativeSet.showOrder required> </div> <div class=form-group> <label for=field_active>Activo</label> \x3c!-- <input type="checkbox" class="form-control" name="active" id="field_active"\n                    ng-model="alternativeSet.active"\n                    > --\x3e <input bs-switch type=checkbox class=form-control name=active id=field_active data-ng-model=alternativeSet.active switch-on-text=Active switch-off-text="No Activo" switch-on-color=success switch-off-color=danger switch-label-width=0 switch-size=large switch-handle-width=655> </div> <div class=form-group> <label for=field_optColumn>optColumn</label> <select class=form-control id=field_optColumn name=optColumn ng-model=alternativeSet.optColumn ng-options="optColumn as optColumn.name for optColumn in optcolumns track by optColumn.id" required> <option value=""></option> </select> </div> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit ng-disabled="editForm.$invalid || editForm.$submitted" class="btn btn-primary"> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </form> '), e.put("scripts/app/entities/alternativeSet/alternativeSets.html", '<div> <h2 class=page-header>Conjuntos Alternativos</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class="btn btn-primary" ui-sref=alternativeSet.new> <span class="glyphicon glyphicon-flash"></span> <span>Crear un nuevo Conjunto Alternativo</span> </button> </div> \x3c!--<div class="col-md-5">\n                <form name="searchForm" class="form-inline">\n                    <div class="input-group">\n                        <input type="text" class="form-control" data-ng-model="searchQuery" id="searchQuery" placeholder="Buscar un conjunto alternativo">\n                        <span class="input-group-btn">\n                            <button class="btn btn-info" data-ng-click="search()" id="searchButton"><span class="glyphicon glyphicon-search"></span>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>--\x3e <div class=col-md-5> <form> <button type=button class="btn btn-info pull-left" data-toggle=collapse data-target=#searchStringID>Buscar <span class="glyphicon glyphicon-search"></span> </button> <div id=searchStringID class=collapse> <div class=input-group> <input class="form-control col-md-5" placeholder="Cadena de bÃºsqueda" data-ng-model=searchString> </div> </div> </form> </div> <div class=col-md-3> <button class="btn btn-primary" ui-sref=alternativeSet.bulk data-ng-click=bulkChange() data-ng-if="(alternativeSets | filter:{selected: true}).length != 0"> <span class="glyphicon glyphicon-edit"></span> <span>Bulk change with selected</span> </button> </div> </div> </div> <div class="modal fade" id=deleteAlternativeSetConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm data-ng-submit=confirmDelete(alternativeSet.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete this Alternative Set?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit data-ng-disabled=deleteForm.$invalid class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> \x3c!--<th>ID</th>--\x3e \x3c!-- <th>Option Column</th> --\x3e <th><span ng-dropdown-multiselect="" options=optColumns selected-model=selectedOptColumns translation-texts=optColumnLabelText extra-settings=selectedOptColumnSettings> </span> </th> <th>Nombre</th> <th>DescripciÃ³n</th> <th class=text-center>ShowOrder</th> <th class=text-center>Activo</th> <th></th> <th class=text-center> <select-all filter-length={{filterEntity().length}} on-change=performSelection(selectionValue) selected-length="{{(filterEntity() | filter: {selected: true}).length}}"></select-all> </th> </tr> </thead> <tbody> <tr class=animate-repeat data-ng-repeat="alternativeSet in alternativeSets | filterCategoryForEntities : selectedOptColumns : \'optColumn\' | filter:searchString | orderBy: [\'optColumn.showOrder\',\'showOrder\']"> \x3c!--<td><a ui-sref="alternativeSet.detail({id:alternativeSet.id})">{{alternativeSet.id}}</a></td>--\x3e <td> <a ui-sref=optColumn.detail({id:alternativeSet.optColumn.id})>{{alternativeSet.optColumn.name}}</a> </td> <td><strong>{{alternativeSet.name}}</strong></td> <td>{{alternativeSet.description}}</td> <td class=text-center>{{alternativeSet.showOrder}}</td> <td class=text-center>{{alternativeSet.active}}</td> <td> <button type=submit ui-sref=alternativeSet.detail({id:alternativeSet.id}) class="btn btn-info btn-sm"> <span class="glyphicon glyphicon-eye-open"></span>&nbsp;<span> View</span> </button> <button type=submit ui-sref=alternativeSet.edit({id:alternativeSet.id}) class="btn btn-primary btn-sm"> <span class="glyphicon glyphicon-pencil"></span>&nbsp;<span> Edit</span> </button> <button type=submit ng-click=delete(alternativeSet.id) class="btn btn-danger btn-sm"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete</span> </button> </td> <td class=text-center> <input type=checkbox data-ng-model=alternativeSet.selected /> </td> </tr> </tbody> </table> </div> </div> '), e.put("scripts/app/entities/collectionCategory/collectionCategory-bulk.html", ' <form name=editForm role=form novalidate ng-submit=save()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myCollectionCategoryLabel>Bulk change for Collection Categories</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=container> <div class=row> <div class=col-md-4> <span style=color:red><strong>You have selected {{collectionCategorys.length}} collection categories.</strong></span> </div> <div class=pull-right> <div class=col-md-4> <button type=button class="btn btn-default" data-ng-click=toggleShowHide()> <span ng-class=glyphicon></span>&nbsp;<span>{{showTypes}}</span> </button> </div> </div> </div> </div> <br> <div data-ng-if=!show> <table class="table table-responsive"> <tr> <th>Nombre</th> <th>DescripciÃ³n</th> </tr> <tr data-ng-repeat="category in collectionCategorys"> <td>{{category.name}}</td> <td>{{category.description}}</td> </tr> </table> </div> <br> <div class=form-group> <label for=field_active>Activo</label><br><br> <input bs-switch type=checkbox class=form-control name=active id=field_active data-ng-model=state.active switch-on-text=Active switch-off-text="No Activo" switch-on-color=success switch-off-color=danger switch-label-width=0 switch-size=large switch-handle-width=655> </div> <br> </div> <div class="modal fade" id=deleteCollectionCategoriesConfirmation> <div class=modal-dialog> <div class=modal-content> <form> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete all selected Collection Categories?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit class="btn btn-danger" data-ng-click=confirmDeleteAll(collectionCategorys)> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=modal-footer> <div class=col-sm-1> <button type=button data-ng-click=delete() class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete all selected Collection Categories</span> </button> </div> <button type=button class="btn btn-default" data-dismiss=modal ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit ng-disabled=editForm.$invalid class="btn btn-primary" data-ng-click=save()> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </form> '), e.put("scripts/app/entities/collectionCategory/collectionCategory-detail.html", ' <div> <h2><span>CategorÃ­as de ColecciÃ³n</span> {{collectionCategory.id}}</h2> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> <th>Field</th> <th>Valor</th> </tr> </thead> <tbody> <tr> <td> <span>Nombre</span> </td> <td> <span class=form-control-static>{{collectionCategory.name}}</span> </td> </tr> <tr> <td> <span>DescripciÃ³n</span> </td> <td> <span class=form-control-static>{{collectionCategory.description}}</span> </td> </tr> <tr> <td> <span>ShowOrder</span> </td> <td> <span class=form-control-static>{{collectionCategory.showOrder}}</span> </td> </tr> <tr> <td> <span>Activo</span> </td> <td> <span class=form-control-static>{{collectionCategory.active}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class="btn btn-info"> <span class="glyphicon glyphicon-arrow-left"></span>&nbsp;<span> Back</span> </button> </div> '), e.put("scripts/app/entities/collectionCategory/collectionCategory-dialog.html", ' <form name=editForm role=form novalidate ng-submit=save()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myCollectionCategoryLabel>Crear o editar una categorÃ­a de colecciÃ³n</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id>ID</label> <input class=form-control id=id name=id data-ng-model=collectionCategory.id readonly> </div> <div class=form-group> <label for=field_name>Nombre</label> <input class=form-control name=name id=field_name data-ng-model=collectionCategory.name required> </div> <div class=form-group> <label for=field_description>DescripciÃ³n</label> <input class=form-control name=description id=field_description data-ng-model=collectionCategory.description> </div> <div class=form-group> <label for=field_showOrder>ShowOrder</label> <input type=number class=form-control name=showOrder id=field_showOrder data-ng-model=collectionCategory.showOrder required> </div> <div class=form-group> <label for=field_active>Activo</label><br> \x3c!-- <input type="checkbox" class="form-control" name="active" id="field_active"\n                    ng-model="collectionCategory.active"\n                    > --\x3e <input bs-switch type=checkbox class=form-control name=active id=field_active data-ng-model=collectionCategory.active switch-on-text=Active switch-off-text="No Activo" switch-on-color=success switch-off-color=danger switch-label-width=0 switch-size=large switch-handle-width=655> </div> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit ng-disabled="editForm.$invalid || editForm.$submitted" class="btn btn-primary"> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </form> '), e.put("scripts/app/entities/collectionCategory/collectionCategorys.html", '<div> <h2 class=page-header>Coleccion de Categorias</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class="btn btn-primary" ui-sref=collectionCategory.new> <span class="glyphicon glyphicon-flash"></span> <span>Crear una nueva CategorÃ­a de ColecciÃ³n</span> </button> </div> \x3c!--<div class="col-md-5">\n                <form name="searchForm" class="form-inline">\n                    <div class="input-group">\n                        <input type="text" class="form-control" data-ng-model="searchQuery" id="searchQuery" placeholder="Buscar una categorÃ­a de colecciÃ³n">\n                        <span class="input-group-btn">\n                            <button class="btn btn-info" data-ng-click="search()" id="searchButton"><span class="glyphicon glyphicon-search"></span>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>--\x3e <div class=col-md-5> <form> <button type=button class="btn btn-info pull-left" data-toggle=collapse data-target=#searchStringID>Buscar <span class="glyphicon glyphicon-search"></span> </button> <div id=searchStringID class=collapse> <div class=input-group> <input class="form-control col-md-5" placeholder="Cadena de bÃºsqueda" data-ng-model=searchString> </div> </div> </form> </div> <div class=col-md-3> <button class="btn btn-primary" ui-sref=collectionCategory.bulk data-ng-click=bulkChange() data-ng-if="(collectionCategorys | filter:{selected: true}).length != 0"> <span class="glyphicon glyphicon-edit"></span> <span>Bulk change with selected</span> </button> </div> </div> </div> <div class="modal fade" id=deleteCollectionCategoryConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm data-ng-submit=confirmDelete(collectionCategory.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete this Collection Category?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit data-ng-disabled=deleteForm.$invalid class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> \x3c!--<th>ID</th>--\x3e <th>Nombre</th> <th>DescripciÃ³n</th> <th class=text-center>ShowOrder</th> <th class=text-center>Activo</th> <th></th> <th class=text-center> <select-all filter-length={{filterEntity().length}} on-change=performSelection(selectionValue) selected-length="{{(filterEntity() | filter: {selected: true}).length}}"></select-all> </th> </tr> </thead> <tbody> <tr class=animate-repeat data-ng-repeat="collectionCategory in collectionCategorys | orderBy: \'showOrder\' | filter:searchString"> \x3c!--<td><a ui-sref="collectionCategory.detail({id:collectionCategory.id})">{{collectionCategory.id}}</a></td>--\x3e <td><strong>{{collectionCategory.name}}</strong></td> <td>{{collectionCategory.description}}</td> <td class=text-center>{{collectionCategory.showOrder}}</td> <td class=text-center>{{collectionCategory.active}}</td> <td> <button type=submit ui-sref=collectionCategory.detail({id:collectionCategory.id}) class="btn btn-info btn-sm"> <span class="glyphicon glyphicon-eye-open"></span>&nbsp;<span> View</span> </button> <button type=submit ui-sref=collectionCategory.edit({id:collectionCategory.id}) class="btn btn-primary btn-sm"> <span class="glyphicon glyphicon-pencil"></span>&nbsp;<span> Edit</span> </button> <button type=submit data-ng-click=delete(collectionCategory.id) class="btn btn-danger btn-sm"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete</span> </button> </td> <td class=text-center> <input type=checkbox data-ng-model=collectionCategory.selected /> </td> </tr> </tbody> </table> </div> </div> '), e.put("scripts/app/entities/collectionInstance/collectionInstance-bulk.html", '<form name=editForm role=form novalidate ng-submit=save()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myCollectionInstanceLabel>Bulk change for Collection Instances</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=container> <div class=row> <div class=col-md-4> <span style=color:red><strong>You have selected {{collectionInstance.length}} collection Instance.</strong></span> </div> <div class=pull-right> <div class=col-md-4> <button type=button class="btn btn-default" data-ng-click=toggleShowHide()> <span ng-class=glyphicon></span>&nbsp;<span>{{showTypes}}</span> </button> </div> </div> </div> </div> <br> <div data-ng-if=!show> <table class="table table-responsive"> <tr> <th>Nombre</th> <th>DescripciÃ³n</th> </tr> <tr data-ng-repeat="instance in collectionInstance"> <td>{{instance.name}}</td> <td>{{instance.description}}</td> </tr> </table> </div> <br> <span>Select a Collection Category to apply the selected Instances to this Collection Category</span><br><br> <div class=btn-group> <button data-ng-repeat="category in collectionCategories | orderBy:\'showOrder\'" class="btn btn-primary" type=button data-ng-model=selectedCat.value uib-btn-radio=category.id uncheckable>{{category.name}}</button> </div> <br> <br> <div class=form-group> <label for=field_active>Activo</label><br><br> <input bs-switch type=checkbox class=form-control name=active id=field_active data-ng-model=state.active switch-on-text=Active switch-off-text="No Activo" switch-on-color=success switch-off-color=danger switch-label-width=0 switch-size=large switch-handle-width=655> </div> <br> </div> <div class="modal fade" id=deleteCollectionInstancesConfirmation> <div class=modal-dialog> <div class=modal-content> <form> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete all selected Collection Instances?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit class="btn btn-danger" data-ng-click=confirmDeleteAll(collectionInstance)> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=modal-footer> <div class=col-sm-1> <button type=button data-ng-click=delete() class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete all selected Collection Instances</span> </button> </div> <button type=button class="btn btn-default" data-dismiss=modal ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit ng-disabled=editForm.$invalid class="btn btn-primary" data-ng-click=save()> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </form> '), e.put("scripts/app/entities/collectionInstance/collectionInstance-detail.html", ' <div> <h2><span>CategorÃ­as de instancias</span> {{collectionInstance.id}}</h2> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> <th>Field</th> <th>Valor</th> </tr> </thead> <tbody> <tr> <td> <span>Nombre</span> </td> <td> <span class=form-control-static>{{collectionInstance.name}}</span> </td> </tr> <tr> <td> <span>DescripciÃ³n</span> </td> <td> <span class=form-control-static>{{collectionInstance.description}}</span> </td> </tr> <tr> <td> <span>ShowOrder</span> </td> <td> <span class=form-control-static>{{collectionInstance.showOrder}}</span> </td> </tr> <tr> <td> <span>Activo</span> </td> <td> <span class=form-control-static>{{collectionInstance.active}}</span> </td> </tr> <tr> <td> <span>CategorÃ­as de ColecciÃ³n</span> </td> <td> <a class=form-control-static ui-sref=collectionCategory.detail({id:collectionInstance.collectionCategory.id})>{{collectionInstance.collectionCategory.name}}</a> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class="btn btn-info"> <span class="glyphicon glyphicon-arrow-left"></span>&nbsp;<span> Back</span> </button> </div> '), e.put("scripts/app/entities/collectionInstance/collectionInstance-dialog.html", ' <form name=editForm role=form novalidate ng-submit=save()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title id=myCollectionInstanceLabel>Crear o editar una colecciÃ³n de instancia</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id>ID</label> <input class=form-control id=id name=id data-ng-model=collectionInstance.id readonly> </div> <div class=form-group> <label for=field_name>Nombre</label> <input class=form-control name=name id=field_name data-ng-model=collectionInstance.name required> </div> <div class=form-group> <label for=field_description>DescripciÃ³n</label> <input class=form-control name=description id=field_description data-ng-model=collectionInstance.description> </div> <div class=form-group> <label for=field_showOrder>ShowOrder</label> <input type=number class=form-control name=showOrder id=field_showOrder data-ng-model=collectionInstance.showOrder required> </div> <div class=form-group> <label for=field_active>Activo</label><br> \x3c!-- <input type="checkbox" class="form-control" name="active" id="field_active"\n                    ng-model="collectionInstance.active"\n                    > --\x3e <input bs-switch type=checkbox class=form-control name=active id=field_active data-ng-model=collectionInstance.active switch-on-text=Active switch-off-text="No Activo" switch-on-color=success switch-off-color=danger switch-label-width=0 switch-size=large switch-handle-width=655> </div> <div class=form-group> <label for=field_collectionCategory>CategorÃ­as de ColecciÃ³n</label> <select class=form-control id=field_collectionCategory name=collectionCategory data-ng-model=collectionInstance.collectionCategory data-ng-options="collectionCategory as collectionCategory.name for collectionCategory in collectioncategorys track by collectionCategory.id" required> <option value=""></option> </select> </div> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit data-ng-disabled="editForm.$invalid || editForm.$submitted" class="btn btn-primary"> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </form> '), e.put("scripts/app/entities/collectionInstance/collectionInstances.html", '<div> <h2 class=page-header>Coleccion de Instancias</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class="btn btn-primary" ui-sref=collectionInstance.new> <span class="glyphicon glyphicon-flash"></span> <span>Crear una nueva ColecciÃ³n de instancia</span> </button> </div> \x3c!--<div class="col-md-4">\n                <form name="searchForm" class="form-inline">\n                    <div class="input-group">\n                        <input type="text" class="form-control" data-ng-model="searchQuery" id="searchQuery" placeholder="Buscar una instancia de colecciÃ³n">\n                        <span class="input-group-btn">\n                            <button class="btn btn-info" data-ng-click="search()" id="searchButton"><span class="glyphicon glyphicon-search"></span>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>--\x3e <div class=col-md-4> <form> <button type=button class="btn btn-info pull-left" data-toggle=collapse data-target=#searchStringID>Buscar <span class="glyphicon glyphicon-search"></span> </button> <div id=searchStringID class=collapse> <div class=input-group> <input class="form-control col-md-5" placeholder="Cadena de bÃºsqueda" data-ng-model=searchString> </div> </div> </form> </div> <div class=col-md-4> <button class="btn btn-primary" ui-sref=collectionInstance.bulk data-ng-click=bulkChange() data-ng-if="(collectionInstances| filter:{selected: true}).length != 0"> <span class="glyphicon glyphicon-edit"></span> <span>Bulk change with selected</span> </button> </div> </div> </div> <div class="modal fade" id=deleteCollectionInstanceConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(collectionInstance.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete this Collection Instance?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> \x3c!--<th>ID</th>--\x3e \x3c!-- <th>CategorÃ­as de ColecciÃ³n</th> --\x3e <th><span ng-dropdown-multiselect="" options=collectionCategories selected-model=selectedCategory translation-texts=categoryLabelText extra-settings=selectedCategorySettings> </span> </th> <th>Nombre</th> <th>DescripciÃ³n</th> <th class=text-center>ShowOrder</th> <th class=text-center>Activo</th> <th></th> <th class=text-center> <select-all filter-length={{filterEntity().length}} on-change=performSelection(selectionValue) selected-length="{{(filterEntity() | filter: {selected: true}).length}}"></select-all> </th> </tr> </thead> <tbody> <tr class=animate-repeat data-ng-repeat="collectionInstance in collectionInstances | filterCategoryForEntities: selectedCategory: \'collectionCategory\' | orderBy: [\'collectionCategory.showOrder\',\'showOrder\'] | filter:searchString"> \x3c!--<td><a ui-sref="collectionInstance.detail({id:collectionInstance.id})">{{collectionInstance.id}}</a></td>--\x3e <td> <a ui-sref=collectionCategory.detail({id:collectionInstance.collectionCategory.id})>{{collectionInstance.collectionCategory.name}}</a> </td> <td><strong>{{collectionInstance.name}}</strong></td> <td>{{collectionInstance.description}}</td> <td class=text-center>{{collectionInstance.showOrder}}</td> <td class=text-center>{{collectionInstance.active}}</td> <td> <button type=submit ui-sref=collectionInstance.detail({id:collectionInstance.id}) class="btn btn-info btn-sm"> <span class="glyphicon glyphicon-eye-open"></span>&nbsp;<span> View</span> </button> <button id=Edit type=submit ui-sref=collectionInstance.edit({id:collectionInstance.id}) class="btn btn-primary btn-sm"> <span class="glyphicon glyphicon-pencil"></span>&nbsp;<span> Edit</span> </button> <button type=submit ng-click=delete(collectionInstance.id) class="btn btn-danger btn-sm"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete</span> </button> </td> <td class=text-center> <input type=checkbox data-ng-model=collectionInstance.selected /> </td> </tr> </tbody> </table> </div> </div> '), e.put("scripts/app/entities/optColumn/optColumn-bulk.html", '<form name=editForm role=form novalidate ng-submit=save()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myOptionColumnLabel>Bulk change for Optional Columns</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=container> <div class=row> <div class=col-md-4> <span style=color:red><strong>You have selected {{optColumns.length}} option columns.</strong></span> </div> <div class=pull-right> <div class=col-md-4> <button type=button class="btn btn-default" data-ng-click=toggleShowHide()> <span ng-class=glyphicon></span>&nbsp;<span>{{showTypes}}</span> </button> </div> </div> </div> </div> <br> <div data-ng-if=!show> <table class="table table-responsive"> <tr> <th>Nombre</th> <th>DescripciÃ³n</th> </tr> <tr data-ng-repeat="opt in optColumns"> <td>{{opt.name}}</td> <td>{{opt.description}}</td> </tr> </table> </div> <br> <span>Select an option column type to apply the selected Option Columns to this one</span><br><br> <div class=btn-group> <button data-ng-repeat="type in optColumnTypes | orderBy:\'name\'" class="btn btn-primary" type=button data-ng-model=selectedType.value uib-btn-radio=type.id uncheckable>{{type.name}}</button> </div> <br> <br> <div class=form-group> <label for=field_active>Activo</label><br><br> <input bs-switch type=checkbox class=form-control name=active id=field_active data-ng-model=state.active switch-on-text=Active switch-off-text="No Activo" switch-on-color=success switch-off-color=danger switch-label-width=0 switch-size=large switch-handle-width=655> </div> <br> </div> <div class="modal fade" id=deleteOptColumnsConfirmation> <div class=modal-dialog> <div class=modal-content> <form> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete all selected Option Columns?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit class="btn btn-danger" data-ng-click=confirmDeleteAll(optColumns)> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=modal-footer> <div class=col-sm-1> <button type=button data-ng-click=delete() class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete all selected Option Columns</span> </button> </div> <button type=button class="btn btn-default" data-dismiss=modal ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit ng-disabled=editForm.$invalid class="btn btn-primary" data-ng-click=save()> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </form> '), e.put("scripts/app/entities/optColumn/optColumn-detail.html", ' <div> <h2><span>Columna Opcional</span> {{optColumn.id}}</h2> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> <th>Field</th> <th>Valor</th> </tr> </thead> <tbody> <tr> <td> <span>Nombre</span> </td> <td> <span class=form-control-static>{{optColumn.name}}</span> </td> </tr> <tr> <td> <span>DescripciÃ³n</span> </td> <td> <span class=form-control-static>{{optColumn.description}}</span> </td> </tr> <tr> <td> <span>ShowOrder</span> </td> <td> <span class=form-control-static>{{optColumn.showOrder}}</span> </td> </tr> <tr> <td> <span>Activo</span> </td> <td> <span class=form-control-static>{{optColumn.active}}</span> </td> </tr> <tr> <td> <span>isVisibleByDefault</span> </td> <td> <span class=form-control-static>{{optColumn.isVisibleByDefault}}</span> </td> </tr> <tr> <td> <span>optColumnType</span> </td> <td> <a class=form-control-static ui-sref=optColumnType.detail({id:optColumn.optColumnType.id})>{{optColumn.optColumnType.name}}</a> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class="btn btn-info"> <span class="glyphicon glyphicon-arrow-left"></span>&nbsp;<span> Back</span> </button> </div> '), e.put("scripts/app/entities/optColumn/optColumn-dialog.html", ' <form name=editForm role=form novalidate ng-submit=save()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myOptColumnLabel>Crear o editar una Columna Opcional</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id>ID</label> <input class=form-control id=id name=id ng-model=optColumn.id readonly> </div> <div class=form-group> <label for=field_name>Nombre</label> <input class=form-control name=name id=field_name ng-model=optColumn.name required> </div> <div class=form-group> <label for=field_description>DescripciÃ³n</label> <input class=form-control name=description id=field_description ng-model=optColumn.description> </div> <div class=form-group> <label for=field_showOrder>ShowOrder</label> <input type=number class=form-control name=showOrder id=field_showOrder ng-model=optColumn.showOrder required> </div> <div class=form-group> <label for=field_active>Activo</label> <input bs-switch type=checkbox class=form-control name=active id=field_active data-ng-model=optColumn.active switch-on-text=Active switch-off-text="No Activo" switch-on-color=success switch-off-color=danger switch-label-width=0 switch-size=large switch-handle-width=655> </div> <div class=form-group> <label for=field_isVisibleByDefault>isVisibleByDefault</label> <input bs-switch type=checkbox class=form-control name=isVisible id=field_isVisibleByDefault data-ng-model=optColumn.isVisibleByDefault switch-on-text=Yes switch-off-text=No switch-on-color=success switch-off-color=danger switch-label-width=0 switch-size=large switch-handle-width=655> </div> <div class=form-group> <label for=field_optColumnType>optColumnType</label> <select class=form-control id=field_optColumnType name=optColumnType ng-model=optColumn.optColumnType ng-options="optColumnType as optColumnType.name for optColumnType in optcolumntypes track by optColumnType.id" required> <option value=""></option> </select> </div> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit ng-disabled="editForm.$invalid || editForm.$submitted" class="btn btn-primary"> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </form> '), e.put("scripts/app/entities/optColumn/optColumns.html", '<div> <h2 class=page-header>Columnas Opcionales</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class="btn btn-primary" ui-sref=optColumn.new> <span class="glyphicon glyphicon-flash"></span> <span>Crear una nueva Columna Opcional</span> </button> </div> <div class=col-md-5> <form> <button type=button class="btn btn-info pull-left" data-toggle=collapse data-target=#searchStringID>Buscar <span class="glyphicon glyphicon-search"></span> </button> <div id=searchStringID class=collapse> <div class=input-group> <input class="form-control col-md-5" placeholder="Cadena de bÃºsqueda" data-ng-model=searchString> </div> </div> </form> </div> <div class=col-md-3> <button class="btn btn-primary" ui-sref=optColumn.bulk data-ng-click=bulkChange() data-ng-if="(optColumns | filter:{selected: true}).length != 0"> <span class="glyphicon glyphicon-edit"></span> <span>Bulk change with selected</span> </button> </div> </div> </div> <div class="modal fade" id=deleteOptColumnConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm data-ng-submit=confirmDelete(optColumn.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete this OptColumn?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit data-ng-disabled=deleteForm.$invalid class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> <th>Nombre</th> <th>DescripciÃ³n</th> <th class=text-center>ShowOrder</th> <th class=text-center>Activo</th> <th class=text-center>isVisibleByDefault</th> <th>Tipo</th> <th></th> <th class=text-center> <select-all filter-length={{filterEntity().length}} on-change=performSelection(selectionValue) selected-length="{{(filterEntity() | filter: {selected: true}).length}}"></select-all> </th> </tr> </thead> <tbody> <tr class=animate-repeat data-ng-repeat="optColumn in optColumns | orderBy: \'showOrder\' | filter:searchString"> <td><strong>{{optColumn.name}}</strong></td> <td>{{optColumn.description}}</td> <td class=text-center>{{optColumn.showOrder}}</td> <td class=text-center>{{optColumn.active}}</td> <td class=text-center>{{optColumn.isVisibleByDefault}}</td> <td> <a ui-sref=optColumnType.detail({id:optColumn.optColumnType.id})>{{optColumn.optColumnType.name}}</a> </td> <td> <button type=submit ui-sref=optColumn.detail({id:optColumn.id}) class="btn btn-info btn-sm"> <span class="glyphicon glyphicon-eye-open"></span>&nbsp;<span> View</span> </button> <button type=submit ui-sref=optColumn.edit({id:optColumn.id}) class="btn btn-primary btn-sm"> <span class="glyphicon glyphicon-pencil"></span>&nbsp;<span> Edit</span> </button> <button type=submit data-ng-click=delete(optColumn.id) class="btn btn-danger btn-sm"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete</span> </button> </td> <td class=text-center> <input type=checkbox data-ng-model=optColumn.selected /> </td> </tr> </tbody> </table> </div> </div> '), e.put("scripts/app/entities/optColumnContent/optColumnContent-bulk.html", '<form name=editForm role=form novalidate ng-submit=save()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myCollectionTagInstanceLabel>Bulk change for Optional Column Contents</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=container> <div class=row> <div class=col-md-4> <span style=color:red><strong>You have selected {{optColumnContents.length}} contents.</strong></span> </div> <div class=pull-right> <div class=col-md-4> <button type=button class="btn btn-default" data-ng-click=toggleShowHide()> <span ng-class=glyphicon></span>&nbsp;<span>{{showTypes}}</span> </button> </div> </div> </div> </div> <br> <div data-ng-if=!show> <table class="table table-responsive"> <tr> <th>Contenido</th> </tr> <tr data-ng-repeat="content in optColumnContents"> <td data-ng-bind-html="content.content | trusted"></td> </tr> </table> </div> <br> <span>Select a Optional Column to apply the selected contents to this Optional Column</span><br><br> <div class=btn-group> <button data-ng-repeat="opt in optColumns | orderBy:\'showOrder\'" class="btn btn-primary" type=button data-ng-model=selectedOptColumn.value uib-btn-radio=opt.id uncheckable>{{opt.name}}</button> </div> <br> <span>Select a Requirement Skeleton to apply the selected contents to this Requirement Skeleton</span><br><br> <div class=form-group> <label for=field_requirementSkeleton>requirementSkeleton</label> <select class=form-control id=field_requirementSkeleton name=requirementSkeleton data-ng-model=selectedRequirementSkeleton.value data-ng-options="requirementSkeleton.id as requirementSkeleton.shortName + \' - \' + requirementSkeleton.description.substr(0, 80) + \'...\' group by \n            requirementSkeleton.reqCategory.name for requirementSkeleton in requirementSkeletons| orderBy : [\'reqCategory.id\', \'showOrder\'] track by requirementSkeleton.id"> <option value=""></option> </select> </div> <br> </div> <div class="modal fade" id=deleteOptColumnContentsConfirmation> <div class=modal-dialog> <div class=modal-content> <form> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete all selected Opt Column Contents?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit class="btn btn-danger" data-ng-click=confirmDeleteAll(optColumnContents)> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=modal-footer> <div class=col-sm-1> <button type=button data-ng-click=delete() class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete all selected Opt Column Contents</span> </button> </div> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit data-ng-disabled=editForm.$invalid class="btn btn-primary" data-ng-click=save()> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </form> '), e.put("scripts/app/entities/optColumnContent/optColumnContent-detail.html", ' <div> <h2><span>Columna Opcional Content</span> {{optColumnContent.id}}</h2> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> <th>Field</th> <th>Valor</th> </tr> </thead> <tbody> <tr> <td> <span>Contenido</span> </td> <td> <span class=form-control-static><div data-ng-bind-html="optColumnContent.content | trusted"></div></span> </td> </tr> <tr> <td> <span>optColumn</span> </td> <td> <a class=form-control-static ui-sref=optColumn.detail({id:optColumnContent.optColumn.id})>{{optColumnContent.optColumn.name}}</a> </td> </tr> <tr> <td> <span>requirementSkeleton</span> </td> <td> <a class=form-control-static ui-sref=requirementSkeleton.detail({id:optColumnContent.requirementSkeleton.id})>{{optColumnContent.requirementSkeleton.shortName}}</a> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class="btn btn-info"> <span class="glyphicon glyphicon-arrow-left"></span>&nbsp;<span> Back</span> </button> </div> '), e.put("scripts/app/entities/optColumnContent/optColumnContent-dialog.html", ' <form name=editForm role=form novalidate data-ng-submit=save()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title id=myOptColumnContentLabel>Crear o editar el Contenido de una Columna Opcional</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id>ID</label> <input class=form-control id=id name=id data-ng-model=optColumnContent.id readonly> </div> <div class=form-group> <label for=field_content>Contenido</label><br/> \x3c!-- <input type="text" class="form-control" name="content" id="field_content"\n                    ng-model="optColumnContent.content"\n                    > --\x3e <textarea id=field_content class=container data-ng-model=optColumnContent.content rows=10 cols=125 required></textarea> </div> <div data-ng-bind-html="optColumnContent.content | trusted"></div> <div class=form-group> <label for=field_optColumn>optColumn</label> <select class=form-control id=field_optColumn name=optColumn data-ng-model=optColumnContent.optColumn data-ng-options="optColumn as optColumn.name for optColumn in optcolumns track by optColumn.id" required> <option value=""></option> </select> </div> <div class=form-group> <label for=field_requirementSkeleton>requirementSkeleton</label> <select class=form-control id=field_requirementSkeleton name=requirementSkeleton data-ng-model=optColumnContent.requirementSkeleton data-ng-options="requirementSkeleton as requirementSkeleton.shortName + \' - \' + requirementSkeleton.description.substr(0, 80) + \'...\' group by \n            requirementSkeleton.reqCategory.name for requirementSkeleton in requirementskeletons| orderBy : [\'reqCategory.id\', \'showOrder\'] track by requirementSkeleton.id" required> <option value=""></option> </select> </div> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit data-ng-disabled="editForm.$invalid || editForm.$submitted" class="btn btn-primary"> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </form> '), e.put("scripts/app/entities/optColumnContent/optColumnContents.html", '<div> <h2 class=page-header>Contenido de Columna Opcional</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class="btn btn-primary" ui-sref=optColumnContent.new> <span class="glyphicon glyphicon-flash"></span> <span>Crear una nueva Columna Opcional Content</span> </button> </div> \x3c!--<div class="col-md-5">\n                <form name="searchForm" class="form-inline">\n                    <div class="input-group">\n                        <input type="text" class="form-control" data-ng-model="searchQuery" id="searchQuery" placeholder="Search a OptColumnContent">\n                        <span class="input-group-btn">\n                            <button class="btn btn-info" data-ng-click="search()" id="searchButton"><span class="glyphicon glyphicon-search"></span>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>--\x3e <div class=col-md-5> <form> <button type=button class="btn btn-info pull-left" data-toggle=collapse data-target=#searchStringID>Buscar <span class="glyphicon glyphicon-search"></span> </button> <div id=searchStringID class=collapse> <div class=input-group> <input class="form-control col-md-5" placeholder="Cadena de bÃºsqueda" data-ng-model=searchString> </div> </div> </form> </div> <div class=col-md-3> <button class="btn btn-primary" ui-sref=optColumnContent.bulk data-ng-click=bulkChange() data-ng-if="(optColumnContents | filter:{selected: true}).length != 0"> <span class="glyphicon glyphicon-edit"></span> <span>Bulk change with selected</span> </button> </div> </div> </div> <div class="modal fade" id=deleteOptColumnContentConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm data-ng-submit=confirmDelete(optColumnContent.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete this OptColumnContent?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit data-ng-disabled=deleteForm.$invalid class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class="table table-striped" infinite-scroll=loadMore() infinite-scroll-distance=1> <thead> <tr> \x3c!--<th>ID</th>--\x3e <th>Esqueleto de Requerimiento</th> \x3c!-- <th><span ng-dropdown-multiselect="" options="requirementSkeletons" selected-model="selectedReqSkeletons" translation-texts="reqLabelText" \n                        extra-settings="selectedReqSettings">\n                        </span>\n                    </th> --\x3e \x3c!-- <th>Option Column</th> --\x3e <th><span ng-dropdown-multiselect="" options=optColumns selected-model=selectedOptColumns translation-texts=optColumnLabelText extra-settings=selectedOptSettings> </span> </th> <th>Contenido</th> <th></th> <th class=text-center> <select-all filter-length={{filterEntity().length}} on-change=performSelection(selectionValue) selected-length="{{(filterEntity() | filter: {selected: true}).length}}"></select-all> </th> </tr> </thead> <tbody> \x3c!-- | filterCategoryForEntities : selectedReqSkeletons: \'requirementSkeleton\' --\x3e <tr class=animate-repeat data-ng-repeat="optColumnContent in optColumnContents | filterCategoryForEntities : selectedOptColumns : \'optColumn\'| filter:searchString | orderBy: [\'requirementSkeleton.reqCategory.showOrder\', \'requirementSkeleton.showOrder\', \'optColumn.showOrder\'] | limitTo:numberToDisplay"> \x3c!--<td><a ui-sref="optColumnContent.detail({id:optColumnContent.id})">{{optColumnContent.id}}</a></td>--\x3e <td> <a ui-sref=requirementSkeleton.detail({id:optColumnContent.requirementSkeleton.id}) title={{optColumnContent.requirementSkeleton.description}}>{{optColumnContent.requirementSkeleton.shortName}}</a> </td> <td> <a ui-sref=optColumn.detail({id:optColumnContent.optColumn.id})>{{optColumnContent.optColumn.name}}</a> </td> <td id=content data-ng-bind-html="optColumnContent.content | trusted"></td> <td> <button type=submit ui-sref=optColumnContent.detail({id:optColumnContent.id}) class="btn btn-info btn-sm"> <span class="glyphicon glyphicon-eye-open"></span>&nbsp;<span> View</span> </button> <button type=submit ui-sref=optColumnContent.edit({id:optColumnContent.id}) class="btn btn-primary btn-sm"> <span class="glyphicon glyphicon-pencil"></span>&nbsp;<span> Edit</span> </button> <button type=submit data-ng-click=delete(optColumnContent.id) class="btn btn-danger btn-sm"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete</span> </button> </td> <td class=text-center> <input type=checkbox data-ng-model=optColumnContent.selected /> </td> </tr> </tbody> </table> </div> </div> '), e.put("scripts/app/entities/optColumnType/optColumnType-detail.html", ' <div> <h2><span>Tipo de columna opcional</span> {{optColumnType.id}}</h2> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> <th>Field</th> <th>Valor</th> </tr> </thead> <tbody> <tr> <td> <span>Nombre</span> </td> <td> <span class=form-control-static>{{optColumnType.name}}</span> </td> </tr> <tr> <td> <span>DescripciÃ³n</span> </td> <td> <span class=form-control-static>{{optColumnType.description}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class="btn btn-info"> <span class="glyphicon glyphicon-arrow-left"></span>&nbsp;<span> Back</span> </button> </div> '), e.put("scripts/app/entities/optColumnType/optColumnType-dialog.html", ' <form name=editForm role=form novalidate ng-submit=save()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myOptColumnTypeLabel>Crear o editar un tipo de columna opcional</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id>ID</label> <input class=form-control id=id name=id ng-model=optColumnType.id readonly> </div> <div class=form-group> <label for=field_name>Nombre</label> <input class=form-control name=name id=field_name ng-model=optColumnType.name required> </div> <div class=form-group> <label for=field_description>DescripciÃ³n</label> <input class=form-control name=description id=field_description ng-model=optColumnType.description> </div> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit ng-disabled="editForm.$invalid || editForm.$submitted" class="btn btn-primary"> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </form> '), e.put("scripts/app/entities/optColumnType/optColumnTypes.html", '<div> <h2 class=page-header>Columna Opcional Types</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class="btn btn-primary" ui-sref=optColumnType.new> <span class="glyphicon glyphicon-flash"></span> <span>Crear un nuevo tipo de columna opcional</span> </button> </div> \x3c!--<div class="col-md-8">\n                <form name="searchForm" class="form-inline">\n                    <div class="input-group">\n                        <input type="text" class="form-control" data-ng-model="searchQuery" id="searchQuery" placeholder="Buscar un tipo de columna de opciÃ³n">\n                        <span class="input-group-btn">\n                            <button class="btn btn-info" data-ng-click="search()" id="searchButton"><span class="glyphicon glyphicon-search"></span>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>--\x3e <div class=col-md-5> <form> <button type=button class="btn btn-info pull-left" data-toggle=collapse data-target=#searchStringID>Buscar <span class="glyphicon glyphicon-search"></span> </button> <div id=searchStringID class=collapse> <div class=input-group> <input class="form-control col-md-5" placeholder="Cadena de bÃºsqueda" data-ng-model=searchString> </div> </div> </form> </div> </div> </div> <div class="modal fade" id=deleteOptColumnTypeConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm data-ng-submit=confirmDelete(optColumnType.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete this OptColumnType?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit data-ng-disabled=deleteForm.$invalid class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> \x3c!--<th>ID</th>--\x3e <th>Nombre</th> <th>DescripciÃ³n</th> <th></th> </tr> </thead> <tbody> <tr class=animate-repeat data-ng-repeat="optColumnType in optColumnTypes | filter:searchString"> \x3c!--<td><a ui-sref="optColumnType.detail({id:optColumnType.id})">{{optColumnType.id}}</a></td>--\x3e <td><strong>{{optColumnType.name}}</strong></td> <td>{{optColumnType.description}}</td> <td> <button type=submit ui-sref=optColumnType.detail({id:optColumnType.id}) class="btn btn-info btn-sm"> <span class="glyphicon glyphicon-eye-open"></span>&nbsp;<span> View</span> </button> <button type=submit ui-sref=optColumnType.edit({id:optColumnType.id}) class="btn btn-primary btn-sm"> <span class="glyphicon glyphicon-pencil"></span>&nbsp;<span> Edit</span> </button> <button type=submit data-ng-click=delete(optColumnType.id) class="btn btn-danger btn-sm"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete</span> </button> </td> </tr> </tbody> </table> </div> </div> '), e.put("scripts/app/entities/projectType/projectType-bulk.html", '<form name=editForm role=form novalidate ng-submit=save()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myCollectionTagInstanceLabel>Bulk change for Project Types</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <br> <div class=container> <div class=row> <div class=col-md-4> <span style=color:red><strong>You have selected {{projectTypes.length}} project types.</strong></span> </div> <div class=pull-right> <div class=col-md-4> <button type=button class="btn btn-default" data-ng-click=toggleShowHide()> <span ng-class=glyphicon></span>&nbsp;<span>{{showTypes}}</span> </button> </div> </div> </div> </div> <br> <div data-ng-if=!show> <table class="table table-responsive"> <tr> <th>Nombre</th> <th>DescripciÃ³n</th> </tr> <tr data-ng-repeat="type in projectTypes"> <td>{{type.name}}</td> <td>{{type.description}}</td> </tr> </table> </div> <br> <span>Select a Option Column to apply the selected Project Types to this Option Column</span><br><br> <div class=form-group> <label>Columnas de Opciones</label> <div class=table-responsive> <table class="table table-responsive"> <tbody> <tr> <td data-ng-repeat="optColumn in optColumns | orderBy:\'showOrder\'"> \x3c!-- <label  id="{{tagInstance.id}}" class="btn btn-default col-sm-12">&nbsp;&nbsp; --\x3e <input type=checkbox ui-indeterminate=selectedOptColumns[optColumn.id].isKnown data-ng-model=selectedOptColumns[optColumn.id].value data-ng-true-value="\'{{optColumn.id}}\'" data-ng-false-value="\'\'" data-ng-init=getStateForOptColumns(optColumn.id) data-ng-change="removeIndeterminateState(optColumn, \'selectedOptColumns\')">&nbsp;{{optColumn.name}}\x3c!-- </label> --\x3e </td> </tr> </tbody> </table> </div> </div> <br> <span>Select a Status Column to apply the selected Project Types to this Status Column</span><br><br> <div class=form-group> <label>Status Column</label> <div class=table-responsive> <table class="table table-responsive"> <tbody> <tr> <td data-ng-repeat="statColumn in statusColumns | orderBy:\'showOrder\'"> \x3c!-- <label  id="{{tagInstance.id}}" class="btn btn-default col-sm-12">&nbsp;&nbsp; --\x3e <input type=checkbox ui-indeterminate=selectedStatusColumns[statColumn.id].isKnown data-ng-model=selectedStatusColumns[statColumn.id].value data-ng-true-value="\'{{statColumn.id}}\'" data-ng-false-value="\'\'" data-ng-init=getStateForStatColumns(statColumn.id) data-ng-change="removeIndeterminateState(statColumn, \'selectedStatusColumns\')">&nbsp;{{statColumn.name}}\x3c!-- </label> --\x3e </td> </tr> </tbody> </table> </div> </div> <br> <div class=form-group> <label for=field_active>Activo</label><br><br> <input bs-switch type=checkbox class=form-control name=active id=field_active data-ng-model=state.active switch-on-text=Active switch-off-text="No Activo" switch-on-color=success switch-off-color=danger switch-label-width=0 switch-size=large switch-handle-width=655> </div> <br> </div> <div class="modal fade" id=deleteProjectTypesConfirmation> <div class=modal-dialog> <div class=modal-content> <form> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete all selected Implementation Types?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit class="btn btn-danger" data-ng-click=confirmDeleteAll(projectTypes)> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=modal-footer> <div class=col-sm-1> <button type=button data-ng-click=delete() class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete all selected Implementation Types</span> </button> </div> <button type=button class="btn btn-default" data-dismiss=modal ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit ng-disabled=editForm.$invalid class="btn btn-primary" data-ng-click=save()> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </form> '), e.put("scripts/app/entities/projectType/projectType-detail.html", ' <div> <h2><span>ProjectType</span> {{projectType.id}}</h2> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> <th>Field</th> <th>Valor</th> </tr> </thead> <tbody> <tr> <td> <span>Nombre</span> </td> <td> <span class=form-control-static>{{projectType.name}}</span> </td> </tr> <tr> <td> <span>DescripciÃ³n</span> </td> <td> <span class=form-control-static>{{projectType.description}}</span> </td> </tr> <tr> <td> <span>ShowOrder</span> </td> <td> <span class=form-control-static>{{projectType.showOrder}}</span> </td> </tr> <tr> <td> <span>Activo</span> </td> <td> <span class=form-control-static>{{projectType.active}}</span> </td> </tr> <tr> <td> <span>statusColumn</span> </td> <td> <span ng-repeat="statusColumn in projectType.statusColumns"> <a class=form-control-static ui-sref="statusColumn.detail({id: {{statusColumn.id}}})">{{statusColumn.name}}</a>{{$last ? \'\' : \', \'}} <span> </span></span></td> </tr> <tr> <td> <span>optColumn</span> </td> <td> <span ng-repeat="optColumn in projectType.optColumns"> <a class=form-control-static ui-sref="optColumn.detail({id: {{optColumn.id}}})">{{optColumn.name}}</a>{{$last ? \'\' : \', \'}} <span> </span></span></td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class="btn btn-info"> <span class="glyphicon glyphicon-arrow-left"></span>&nbsp;<span> Back</span> </button> </div> '), e.put("scripts/app/entities/projectType/projectType-dialog.html", ' <form name=editForm role=form novalidate ng-submit=save()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myProjectTypeLabel>Crear o editar un Tipo de ImplementaciÃ³n</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id>ID</label> <input class=form-control id=id name=id ng-model=projectType.id readonly> </div> <div class=form-group> <label for=field_name>Nombre</label> <input class=form-control name=name id=field_name ng-model=projectType.name required> </div> <div class=form-group> <label for=field_description>DescripciÃ³n</label> <input class=form-control name=description id=field_description ng-model=projectType.description> </div> <div class=form-group> <label for=field_statusColumn>statusColumn</label> <select class=form-control id=field_statusColumn multiple name=statusColumn ng-model=projectType.statusColumns ng-options="statusColumn as statusColumn.name for statusColumn in statuscolumns track by statusColumn.id" required></select> </div> <div class=form-group> <label for=field_optColumn>optColumn</label> <select class=form-control id=field_optColumn multiple name=optColumn ng-model=projectType.optColumns ng-options="optColumn as optColumn.name for optColumn in optcolumns track by optColumn.id" required></select> </div> <div class=form-group> <label for=field_showOrder>ShowOrder</label> <input type=number class=form-control name=showOrder id=field_showOrder ng-model=projectType.showOrder required> </div> <div class=form-group> <label for=field_active>Activo</label> \x3c!-- <input type="checkbox" class="form-control" name="active" id="field_active"\n                    ng-model="projectType.active"\n                    > --\x3e <input bs-switch type=checkbox class=form-control name=active id=field_active data-ng-model=projectType.active switch-on-text=Active switch-off-text="No Activo" switch-on-color=success switch-off-color=danger switch-label-width=0 switch-size=large switch-handle-width=655> </div> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit ng-disabled="editForm.$invalid || editForm.$submitted" class="btn btn-primary"> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </form> '), e.put("scripts/app/entities/projectType/projectTypes.html", '<div> <h2 class=page-header>Tipos de ImplementaciÃ³n</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class="btn btn-primary" ui-sref=projectType.new> <span class="glyphicon glyphicon-flash"></span> <span>Crear un nuevo Tipo de ImplementaciÃ³n</span> </button> </div> \x3c!--<div class="col-md-5">\n                <form name="searchForm" class="form-inline">\n                    <div class="input-group">\n                        <input type="text" class="form-control" data-ng-model="searchQuery" id="searchQuery" placeholder="Buscar un tipo de implementaciÃ³n">\n                        <span class="input-group-btn">\n                            <button class="btn btn-info" data-ng-click="search()" id="searchButton"><span class="glyphicon glyphicon-search"></span>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>--\x3e <div class=col-md-5> <form> <button type=button class="btn btn-info pull-left" data-toggle=collapse data-target=#searchStringID>Buscar <span class="glyphicon glyphicon-search"></span> </button> <div id=searchStringID class=collapse> <div class=input-group> <input class="form-control col-md-5" placeholder="Cadena de bÃºsqueda" data-ng-model=searchString> </div> </div> </form> </div> <div class=col-md-3> <button class="btn btn-primary" ui-sref=projectType.bulk data-ng-click=bulkChange() data-ng-if="(projectTypes| filter:{selected: true}).length != 0"> <span class="glyphicon glyphicon-edit"></span> <span>Bulk change with selected</span> </button> </div> </div> </div> <div class="modal fade" id=deleteProjectTypeConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm data-ng-submit=confirmDelete(projectType.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete this Implementation Type?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit data-ng-disabled=deleteForm.$invalid class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> \x3c!--<th>ID</th>--\x3e <th>Nombre</th> <th>DescripciÃ³n</th> <th>Columnas de Opciones</th> <th>Columnas de Estado</th> <th class=text-center>ShowOrder</th> <th class=text-center>Activo</th> <th></th> <th class=text-center> <select-all filter-length={{filterEntity().length}} on-change=performSelection(selectionValue) selected-length="{{(filterEntity() | filter: {selected: true}).length}}"></select-all> </th> </tr> </thead> <tbody> <tr class=animate-repeat data-ng-repeat="projectType in projectTypes | filter:searchString | orderBy:\'showOrder\'"> \x3c!--<td><a ui-sref="projectType.detail({id:projectType.id})">{{projectType.id}}</a></td>--\x3e <td><strong>{{projectType.name}}</strong></td> <td>{{projectType.description}}</td> <td> <span data-ng-repeat="optColumn in projectType.optColumns"> <a class=form-control-static ui-sref="optColumn.detail({id: {{optColumn.id}}})">{{optColumn.name}}</a>{{$last ? \'\' : \', \'}} </span> </td> <td> <span data-ng-repeat="statusColumn in projectType.statusColumns"> <a class=form-control-static ui-sref="statusColumn.detail({id: {{statusColumn.id}}})">{{statusColumn.name}}</a>{{$last ? \'\' : \', \'}} </span> </td> <td class=text-center>{{projectType.showOrder}}</td> <td class=text-center>{{projectType.active}}</td> <td> <button type=submit ui-sref=projectType.detail({id:projectType.id}) class="btn btn-info btn-sm"> <span class="glyphicon glyphicon-eye-open"></span>&nbsp;<span> View</span> </button> <button type=submit ui-sref=projectType.edit({id:projectType.id}) class="btn btn-primary btn-sm"> <span class="glyphicon glyphicon-pencil"></span>&nbsp;<span> Edit</span> </button> <button type=submit ng-click=delete(projectType.id) class="btn btn-danger btn-sm"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete</span> </button> </td> <td class=text-center> <input type=checkbox data-ng-model=projectType.selected /> </td> </tr> </tbody> </table> </div> </div> '), e.put("scripts/app/entities/reqCategory/reqCategory-bulk.html", '<form name=editForm role=form novalidate ng-submit=save()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myRequirementCategoryLabel>Bulk change for Requirement Categories</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=container> <div class=row> <div class=col-md-4> <span style=color:red><strong>You have selected {{requirementCategories.length}} collection categories.</strong></span> </div> <div class=pull-right> <div class=col-md-4> <button type=button class="btn btn-default" data-ng-click=toggleShowHide()> <span ng-class=glyphicon></span>&nbsp;<span>{{showTypes}}</span> </button> </div> </div> </div> </div> <br> <div data-ng-if=!show> <table class="table table-responsive"> <tr> <th>Nombre</th> <th>DescripciÃ³n</th> </tr> <tr data-ng-repeat="category in requirementCategories"> <td>{{category.name}}</td> <td>{{category.description}}</td> </tr> </table> </div> <br> <div class=form-group> <label for=field_active>Activo</label><br><br> <input bs-switch type=checkbox class=form-control name=active id=field_active data-ng-model=state.active switch-on-text=Active switch-off-text="No Activo" switch-on-color=success switch-off-color=danger switch-label-width=0 switch-size=large switch-handle-width=655> </div> <br> </div> <div class="modal fade" id=deleteReqCategoriesConfirmation> <div class=modal-dialog> <div class=modal-content> <form> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete all selected Requirement Categories?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit class="btn btn-danger" data-ng-click=confirmDeleteAll(requirementCategories)> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=modal-footer> <div class=col-sm-1> <button type=button data-ng-click=delete() class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete all selected Requirement Categories</span> </button> </div> <button type=button class="btn btn-default" data-dismiss=modal ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit ng-disabled=editForm.$invalid class="btn btn-primary" data-ng-click=save()> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </form> '), e.put("scripts/app/entities/reqCategory/reqCategory-detail.html", ' <div> <h2><span>Requirement Category</span> {{reqCategory.id}}</h2> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> <th>Field</th> <th>Valor</th> </tr> </thead> <tbody> <tr> <td> <span>Nombre</span> </td> <td> <span class=form-control-static>{{reqCategory.name}}</span> </td> </tr> <tr> <td> <span>Atajo</span> </td> <td> <span class=form-control-static>{{reqCategory.shortcut}}</span> </td> </tr> <tr> <td> <span>DescripciÃ³n</span> </td> <td> <span class=form-control-static>{{reqCategory.description}}</span> </td> </tr> <tr> <td> <span>ShowOrder</span> </td> <td> <span class=form-control-static>{{reqCategory.showOrder}}</span> </td> </tr> <tr> <td> <span>Activo</span> </td> <td> <span class=form-control-static>{{reqCategory.active}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class="btn btn-info"> <span class="glyphicon glyphicon-arrow-left"></span>&nbsp;<span> Back</span> </button> </div> '), e.put("scripts/app/entities/reqCategory/reqCategory-dialog.html", ' <form name=editForm role=form novalidate ng-submit=save()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myReqCategoryLabel>Crear o editar una categorÃ­a de requerimiento</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id>ID</label> <input class=form-control id=id name=id ng-model=reqCategory.id readonly> </div> <div class=form-group> <label for=field_name>Nombre</label> <input class=form-control name=name id=field_name ng-model=reqCategory.name required> </div> <div class=form-group> <label for=field_shortcut>Atajo</label> <input class=form-control name=shortcut id=field_shortcut ng-model=reqCategory.shortcut required> </div> <div class=form-group> <label for=field_description>DescripciÃ³n</label> <input class=form-control name=description id=field_description ng-model=reqCategory.description> </div> <div class=form-group> <label for=field_showOrder>ShowOrder</label> <input type=number class=form-control name=showOrder id=field_showOrder ng-model=reqCategory.showOrder required> </div> <div class=form-group> <label for=field_active>Activo</label> \x3c!--  <input type="checkbox" class="form-control" name="active" id="field_active"\n                    ng-model="reqCategory.active" \n                    >--\x3e <input bs-switch type=checkbox class=form-control name=active id=field_active data-ng-model=reqCategory.active switch-on-text=Active switch-off-text="No Activo" switch-on-color=success switch-off-color=danger switch-label-width=0 switch-size=large switch-handle-width=655> </div> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit ng-disabled="editForm.$invalid || editForm.$submitted" class="btn btn-primary"> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </form> '), e.put("scripts/app/entities/reqCategory/reqCategorys.html", '<div> <h2 class=page-header>CategorÃ­as de Requisitos</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class="btn btn-primary" ui-sref=reqCategory.new> <span class="glyphicon glyphicon-flash"></span> <span>Crear una nueva categorÃ­a de requerimiento</span> </button> </div> \x3c!--<div class="col-md-5">\n                <form name="searchForm" class="form-inline">\n                    <div class="input-group">\n                        <input type="text" class="form-control" data-ng-model="searchQuery" id="searchQuery" placeholder="Buscar una categorÃ­a de requisito">\n                        <span class="input-group-btn">\n                            <button class="btn btn-info" data-ng-click="search()" id="searchButton"><span class="glyphicon glyphicon-search"></span>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>--\x3e <div class=col-md-5> <form> <button type=button class="btn btn-info pull-left" data-toggle=collapse data-target=#searchStringID>Buscar <span class="glyphicon glyphicon-search"></span> </button> <div id=searchStringID class=collapse> <div class=input-group> <input class="form-control col-md-5" placeholder="Cadena de bÃºsqueda" data-ng-model=searchString> </div> </div> </form> </div> <div class=col-md-3> <button class="btn btn-primary" ui-sref=reqCategory.bulk data-ng-click=bulkChange() data-ng-if="(reqCategorys | filter:{selected: true}).length != 0"> <span class="glyphicon glyphicon-edit"></span> <span>Bulk change with selected</span> </button> </div> </div> </div> <div class="modal fade" id=deleteReqCategoryConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm data-ng-submit=confirmDelete(reqCategory.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete this Requirement Category?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit data-ng-disabled=deleteForm.$invalid class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> \x3c!--<th>ID</th>--\x3e <th>Nombre</th> <th>Atajo</th> <th>DescripciÃ³n</th> <th class=text-center>ShowOrder</th> <th class=text-center>Activo</th> <th></th> <th class=text-center> <select-all filter-length={{filterEntity().length}} on-change=performSelection(selectionValue) selected-length="{{(filterEntity() | filter: {selected: true}).length}}"></select-all> </th> </tr> </thead> <tbody> <tr class=animate-repeat data-ng-repeat="reqCategory in reqCategorys | orderBy:\'showOrder\' | filter:searchString"> \x3c!--<td><a ui-sref="reqCategory.detail({id:reqCategory.id})">{{reqCategory.id}}</a></td>--\x3e <td><strong>{{reqCategory.name}}</strong></td> <td>{{reqCategory.shortcut}}</td> <td>{{reqCategory.description}}</td> <td class=text-center>{{reqCategory.showOrder}}</td> <td class=text-center>{{reqCategory.active}}</td> <td> <button type=submit ui-sref=reqCategory.detail({id:reqCategory.id}) class="btn btn-info btn-sm"> <span class="glyphicon glyphicon-eye-open"></span>&nbsp;<span> View</span> </button> <button type=submit ui-sref=reqCategory.edit({id:reqCategory.id}) class="btn btn-primary btn-sm"> <span class="glyphicon glyphicon-pencil"></span>&nbsp;<span> Edit</span> </button> <button type=submit data-ng-click=delete(reqCategory.id) class="btn btn-danger btn-sm"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete</span> </button> </td> <td class=text-center> <input type=checkbox data-ng-model=reqCategory.selected /> </td> </tr> </tbody> </table> </div> </div> '), e.put("scripts/app/entities/requirementSkeleton/requirementSkeleton-bulk.html", '<form name=editForm role=form novalidate ng-submit=save()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myRequirementCategoryLabel>Bulk change for Requirement Skeletons</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <br> <div class=container> <div class=row> <div class=col-md-4> <span style=color:red><strong>You have selected {{count}} requirements</strong></span> </div> <div class=pull-right> <div class=col-md-4> <button type=button class="btn btn-default" data-ng-click=toggleShowHide()> <span ng-class=glyphicon></span>&nbsp;<span>{{showRequirement}}</span> </button> </div> </div> </div> </div> <br> <div data-ng-if=!show> <table class="table table-responsive"> <tr> <thNombre/th> <th>DescripciÃ³n</th> </tr> <tr data-ng-repeat="req in requirements"> <td>{{req.shortName}}</td> <td>{{req.description}}</td> </tr> </table> </div> <br> <div class=container> <span><strong>NOTE: </strong>If you don\'t change a Requirement Category, Tags, Collections or Project Types the old values will be taken.</span> </div> <br> <div class=form-group> <label>CategorÃ­as de Requisitos</label> <div class=btn-group> <button data-ng-repeat="category in requirementCategories | orderBy:\'showOrder\'" class="btn btn-primary" type=button data-ng-model=selectedCat.value uib-btn-radio=category.id uncheckable>{{category.name}}</button> </div> <br><br> </div> <div class=form-group> <label>Etiquetas</label> <div class=table-responsive> <table class="table table-responsive"> <tbody> <tr data-ng-repeat="tagCategory in tagCategories | orderBy:\'showOrder\'"> <td> <div class=row> <div class=col-sm-10> <strong>{{tagCategory.name}}</strong> </div> <div class="col-sm-2 pull-left"> </div> </div> </td> <td data-ng-repeat="tagInstance in getTagInstancesForCategory(tagCategory.id) | orderBy:\'showOrder\'"> \x3c!-- <label  id="{{tagInstance.id}}" class="btn btn-default col-sm-12">&nbsp;&nbsp; --\x3e <input type=checkbox ui-indeterminate=selectedTagInstances[tagInstance.id].isKnown data-ng-init=getCheckedForTagInstances(tagInstance.id) data-ng-model=selectedTagInstances[tagInstance.id].value data-ng-true-value="\'{{tagInstance.id}}\'" data-ng-false-value="\'\'" data-ng-change="removeIndeterminate(tagInstance.id, \'selectedTagInstances\')">&nbsp;{{tagInstance.name}}\x3c!-- </label> --\x3e </td> </tr> </tbody> </table> </div> </div> \x3c!-- {{selectedTagInstances}} --\x3e <p/>&nbsp; <div class=form-group> <label>Colecciones</label> <div class=table-responsive> <table class="table table-responsive"> <tbody> <tr data-ng-repeat="collectionCategory in collectionCategories | orderBy:\'showOrder\'"> <td> <div class=row> <div class=col-sm-10> <strong>{{collectionCategory.name}}</strong> </div> <div class="col-sm-2 pull-left"> </div> </div> </td> <td data-ng-repeat="collectionInstance in getCollectionInstancesForCategory(collectionCategory.id) | orderBy:\'showOrder\'"> \x3c!-- <label  id="{{tagInstance.id}}" class="btn btn-default col-sm-12">&nbsp;&nbsp; --\x3e <input type=checkbox ui-indeterminate=selectedCollectionInstances[collectionInstance.id].isKnown data-ng-init=getCheckedForCollectionInstances(collectionInstance.id) data-ng-model=selectedCollectionInstances[collectionInstance.id].value data-ng-true-value="\'{{collectionInstance.id}}\'" data-ng-false-value="\'\'" data-ng-change="removeIndeterminate(collectionInstance.id, \'selectedCollectionInstances\')">&nbsp;{{collectionInstance.name}}\x3c!-- </label> --\x3e </td> </tr> </tbody> </table> </div> </div> \x3c!-- {{selectedCollectionInstances}} --\x3e \x3c!-- endof collection checkbox test --\x3e <p/>&nbsp; <div class=form-group> <label>Project Types</label> <div class=table-responsive> <table class="table table-responsive"> <tbody> <tr> <td data-ng-repeat="projectType in projectTypes | orderBy:\'showOrder\'"> \x3c!-- <label  id="{{tagInstance.id}}" class="btn btn-default col-sm-12">&nbsp;&nbsp; --\x3e <input type=checkbox ui-indeterminate=selectedProjectTypes[projectType.id].isKnown data-ng-init=getCheckedForProjectTypes(projectType.id) data-ng-model=selectedProjectTypes[projectType.id].value data-ng-true-value="\'{{projectType.id}}\'" data-ng-false-value="\'\'" data-ng-change="removeIndeterminate(projectType.id, \'selectedProjectTypes\')">&nbsp;{{projectType.name}}\x3c!--</label> --\x3e </td> </tr> </tbody> </table> </div> </div> \x3c!-- {{selectedProjectTypes}} --\x3e <div class=form-group> <label for=field_active>Activo</label><br><br> <input bs-switch type=checkbox class=form-control name=active id=field_active data-ng-model=state.active switch-on-text=Active switch-off-text="No Activo" switch-on-color=success switch-off-color=danger switch-label-width=0 switch-size=large switch-handle-width=655> </div> <br> </div> <div class="modal fade" id=deleteRequirementSkeletonsConfirmation> <div class=modal-dialog> <div class=modal-content> <form> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete all selected Requirement Skeletons?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit class="btn btn-danger" data-ng-click=confirmDeleteAll(requirements)> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=modal-footer> <div class=col-sm-1> <button type=button data-ng-click=delete() class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete all selected Requirement Skeletons</span> </button> </div> <button type=button class="btn btn-default" data-dismiss=modal ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit ng-disabled="editForm.$invalid || editForm.$submitted" class="btn btn-primary" data-ng-click=save()> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </form> '), e.put("scripts/app/entities/requirementSkeleton/requirementSkeleton-detail.html", ' <div> <h2><span>Esqueleto de Requerimiento</span> {{requirementSkeleton.shortName}} -</h2> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> <th>Field</th> <th>Valor</th> </tr> </thead> <tbody> <tr> <td> <span>Id Universal</span> </td> <td> <span class=form-control-static>{{requirementSkeleton.universalId}}</span> </td> </tr> <tr> <td> <spanNombre/span> </td> <td> <span class=form-control-static>{{requirementSkeleton.shortName}}</span> </td> </tr> <tr> <td> <span>DescripciÃ³n</span> </td> <td> <span class=form-control-static>{{requirementSkeleton.description}}</span> </td> </tr> <tr> <td> <span>ShowOrder</span> </td> <td> <span class=form-control-static>{{requirementSkeleton.showOrder}}</span> </td> </tr> <tr> <td> <span>Activo</span> </td> <td> <span class=form-control-static>{{requirementSkeleton.active}}</span> </td> </tr> <tr> <td> <span>Requirement Category</span> </td> <td> <a class=form-control-static ui-sref=reqCategory.detail({id:requirementSkeleton.reqCategory.id})>{{requirementSkeleton.reqCategory.name}}</a> </td> </tr> <tr> <td> <span>Etiquetas</span> </td> <td> <span ng-repeat="tagInstance in requirementSkeleton.tagInstances"> <a class=form-control-static ui-sref="tagInstance.detail({id: {{tagInstance.id}}})">{{tagInstance.name}}</a>{{$last ? \'\' : \', \'}} <span> </span></span></td> </tr> <tr> <td> <span>Colecciones</span> </td> <td> <span ng-repeat="collectionInstance in requirementSkeleton.collectionInstances"> <a class=form-control-static ui-sref="collectionInstance.detail({id: {{collectionInstance.id}}})">{{collectionInstance.name}}</a>{{$last ? \'\' : \', \'}} <span> </span></span></td> </tr> <tr> <td> <span>Project Types</span> </td> <td> <span ng-repeat="projectType in requirementSkeleton.projectTypes"> <a class=form-control-static ui-sref="projectType.detail({id: {{projectType.id}}})">{{projectType.name}}</a>{{$last ? \'\' : \', \'}} <span> </span></span></td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class="btn btn-info"> <span class="glyphicon glyphicon-arrow-left"></span>&nbsp;<span> Back</span> </button> </div> '), e.put("scripts/app/entities/requirementSkeleton/requirementSkeleton-dialog.html", '<form name=editForm role=form novalidate ng-submit=save()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myRequirementSkeletonLabel>Crear o editar un esqueleto de requerimiento</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id>ID</label> <input class=form-control id=id name=id ng-model=requirementSkeleton.id readonly> </div> <div class=form-group> <label for=field_reqCategory>Requirement Category</label> <select class=form-control id=field_reqCategory name=reqCategory ng-model=requirementSkeleton.reqCategory ng-options="reqCategory as reqCategory.name for reqCategory in reqcategorys | orderBy: \'showOrder\' track by reqCategory.id" required> <option value=""></option> </select> </div> <div class=form-group> <label for=field_shortNameNombre/label> <input class=form-control name=shortName id=field_shortName ng-model=requirementSkeleton.shortName required> </div> <div class=form-group> <label for=field_description>DescripciÃ³n</label> <input class=form-control name=description id=field_description ng-model=requirementSkeleton.description> </div> <div class=form-group> <label for=field_showOrder>ShowOrder</label> <input type=number class=form-control name=showOrder id=field_showOrder ng-model=requirementSkeleton.showOrder required> </div> <div class=form-group> <label for=field_universalId>Id Universal</label> <input class=form-control name=universalId id=field_universalId ng-model=requirementSkeleton.universalId> </div> <div class=form-group> <label for=field_active>Activo</label> <input bs-switch type=checkbox class=form-control name=active id=field_active data-ng-model=requirementSkeleton.active switch-on-text=Active switch-off-text="No Activo" switch-on-color=success switch-off-color=danger switch-label-width=0 switch-size=large switch-handle-width=655> </div> <div class=form-group> <div class=form-group> <label>Etiquetas</label> <div class=table-responsive> <table class="table table-responsive"> <tbody> <tr data-ng-repeat="tagCategory in tagCategories | orderBy:\'showOrder\'"> <td> <div class=row> <div class=col-sm-10> <strong>{{tagCategory.name}}</strong> </div> <div class="col-sm-2 pull-left"> </div> </div> </td> <td data-ng-repeat="tagInstance in getTagInstancesForCategory(tagCategory.id) | orderBy:\'showOrder\'"> <input id=tagInstance type=checkbox ng-checked="arrayObjectIndexOf(requirementSkeleton.tagInstances, tagInstance.id, \'id\') > -1" ng-click="toggleSelection(requirementSkeleton.tagInstances, tagInstance)"> {{tagInstance.name}} </td> </tr> </tbody> </table> </div> </div> </div> <p/>&nbsp; <div class=form-group> <label>Colecciones</label> <div class=table-responsive> <table class="table table-responsive"> <tbody> <tr data-ng-repeat="collectionCategory in collectionCategories | orderBy:\'showOrder\'"> <td> <div class=row> <div class=col-sm-10> <strong>{{collectionCategory.name}}</strong> </div> <div class="col-sm-2 pull-left"> </div> </div> </td> <td data-ng-repeat="collectionInstance in getCollectionInstancesForCategory(collectionCategory.id) | orderBy:\'showOrder\'"> <input id=collectionInstance type=checkbox ng-checked="arrayObjectIndexOf(requirementSkeleton.collectionInstances, collectionInstance.id, \'id\') > -1" ng-click="toggleSelection(requirementSkeleton.collectionInstances, collectionInstance)"> {{collectionInstance.name}} </td> </tr> </tbody> </table> </div> </div> \x3c!-- endof collection checkbox test --\x3e <p/>&nbsp; <div class=form-group> <label>Project Types</label> <div class=table-responsive> <table class="table table-responsive"> <tbody> <tr> <td data-ng-repeat="projectType in projecttypes | orderBy:\'showOrder\'"> <input id=projectType type=checkbox ng-checked="arrayObjectIndexOf(requirementSkeleton.projectTypes, projectType.id, \'id\') > -1" ng-click="toggleSelection(requirementSkeleton.projectTypes, projectType)"> {{projectType.name}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </td> </tr> </tbody> </table> </div> </div> <p>&nbsp; </p></div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit ng-disabled="editForm.$invalid || editForm.$submitted" class="btn btn-primary"> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </form> '), e.put("scripts/app/entities/requirementSkeleton/requirementSkeletons.html", '<div> <h2 class=page-header>Esqueletos de Requisitos</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class="btn btn-primary" ui-sref=requirementSkeleton.new> <span class="glyphicon glyphicon-flash"></span> <span>Crear un nuevo esqueleto de requerimiento</span> </button> </div> <div class=col-md-5> <form> <button type=button class="btn btn-info pull-left" data-toggle=collapse data-target=#searchStringID>Buscar <span class="glyphicon glyphicon-search"></span> </button> <div id=searchStringID class=collapse> <div class=input-group> <input class="form-control col-md-5" placeholder="Cadena de bÃºsqueda" data-ng-model=searchString> </div> </div> </form> </div> <div class=pull-right> <div class=col-md-4> <button class="btn btn-primary" ui-sref=requirementSkeleton.bulk data-ng-click=bulkChange() data-ng-if="(requirementSkeletons | filter:{selected: true}).length != 0"> <span class="glyphicon glyphicon-edit"></span> <span>Bulk change with selected</span> </button> </div> </div> </div> </div> <div class="modal fade" id=deleteRequirementSkeletonConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(requirementSkeleton.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete this Requirement Skeleton?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive data-ng-show=progressbar.showContent> <table class="table table-striped" infinite-scroll=loadMore() infinite-scroll-distance=1> <thead> <tr> <th> <span ng-dropdown-multiselect="" options=filterCategory selected-model=selectedCategory translation-texts=categoryLabelText extra-settings=selectedCategorySettings> </span> </th> <thNombre/th> <th>DescripciÃ³n</th> <th class=text-center>Activo</th> <th> <div class=btn-group id=multiselect-parent> <button type=button class="btn btn-default dropdown-toggle" data-toggle=dropdown data-ng-click="toggleDropdown(\'tag\', $event)"> {{dropdowns.tag.buttonText}} <span class=caret> </span></button> <ul class=dropdown-menu role=menu data-ng-style="{display: dropdowns.tag.open ? \'block\': \'none\', height: auto}"> <li data-ng-repeat="category in tagCategories" class=dropdown-submenu id=list{{category.id}}> <a href=# tabindex=-1 role=presentation>{{category.name}}</a> <ul class=dropdown-menu aria-labelledby=list{{category.id}}> <li data-ng-repeat="instance in tagInstances | filterCategoryForEntitiesObject : category : \'tagCategory\'"> <a href=# data-ng-click="selectTagInstance(instance, \'selectedTags\', \'tag\')" tabindex=-1> <span data-ng-class="{\'glyphicon glyphicon-ok\':isTagSelected(instance, \'selectedTags\')}"></span> {{instance.name}} </a> </li> </ul> </li> </ul> </div> </th> <th> <div class=btn-group id=multiselect-parent> <button type=button class="btn btn-default dropdown-toggle" data-toggle=dropdown data-ng-click="toggleDropdown(\'coll\', $event)"> {{dropdowns.coll.buttonText}} <span class=caret></span></button> <ul class=dropdown-menu role=menu data-ng-style="{display: dropdowns.coll.open ? \'block\': \'none\', height: auto}"> <li data-ng-repeat="category in collCategories" class=dropdown-submenu id=list{{category.id}}> <a href=# tabindex=-1 role=presentation>{{category.name}}</a> <ul class=dropdown-menu aria-labelledby=list{{category.id}}> <li data-ng-repeat="instance in collectionsInstances | filterCategoryForEntitiesObject : category : \'collectionCategory\'"> <a href=# data-ng-click="selectTagInstance(instance, \'selectedColls\', \'coll\')" tabindex=-1> <span data-ng-class="{\'glyphicon glyphicon-ok\':isTagSelected(instance, \'selectedColls\')}"></span> {{instance.name}} </a> </li> </ul> </li> </ul> </div> </th> <th> <span ng-dropdown-multiselect="" options=projectTypes selected-model=selectedTypes translation-texts=typeLabelText extra-settings=selectedCategorySettings /> </th> <th></th> <th class=text-center> <select-all filter-length={{filterEntity().length}} on-change=performSelection(selectionValue) selected-length="{{(filterEntity() | filter: {selected: true}).length}}"></select-all> </th> </tr> </thead> <tbody> <tr class=animate-repeat data-ng-repeat="requirementSkeleton in requirementSkeletons | filterCategoryForEntities : selectedCategory:\'reqCategory\'| filterByTagForReqSkeletons : selectedTags | filterByCollsForReqSkeletons : selectedColls| filterByTypesForReqSkeletons : selectedTypes | filter:searchString | orderBy : [\'reqCategory.showOrder\',\'showOrder\'] | limitTo:numberToDisplay"> <td> <a ui-sref=reqCategory.detail({id:requirementSkeleton.reqCategory.id})>{{requirementSkeleton.reqCategory.name}}</a> </td> <td><strong>{{requirementSkeleton.shortName}}</strong></td> <td>{{requirementSkeleton.description}}</td> <td class=text-center>{{requirementSkeleton.active}}</td> <td> <span data-ng-repeat="tagInstance in requirementSkeleton.tagInstances"> <a class=form-control-static ui-sref="tagInstance.detail({id: {{tagInstance.id}}})">{{tagInstance.name}}</a>{{$last ? \'\' : \', \'}} </span> </td> <td> <span data-ng-repeat="collectionInstance in requirementSkeleton.collectionInstances"> <a class=form-control-static ui-sref="collectionInstance.detail({id: {{collectionInstance.id}}})">{{collectionInstance.name}}</a>{{$last ? \'\' : \', \'}} </span> </td> <td> <span data-ng-repeat="projectType in requirementSkeleton.projectTypes"> <a class=form-control-static ui-sref="projectType.detail({id: {{projectType.id}}})">{{projectType.name}}</a>{{$last ? \'\' : \', \'}} </span> </td> <td> <button type=submit ui-sref=requirementSkeleton.detail({id:requirementSkeleton.id}) class="btn btn-info btn-sm"> <span class="glyphicon glyphicon-eye-open"></span>&nbsp;<span> View</span> </button> <button type=submit ui-sref=requirementSkeleton.edit({id:requirementSkeleton.id}) class="btn btn-primary btn-sm"> <span class="glyphicon glyphicon-pencil"></span>&nbsp;<span> Edit</span> </button> <button type=submit ng-click=delete(requirementSkeleton.id) class="btn btn-danger btn-sm"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete</span> </button> </td> <td class=text-center> <input type=checkbox data-ng-model=requirementSkeleton.selected /> </td> </tr> </tbody> </table> </div> <div data-ng-hide=progrebar.hide> <uib-progressbar class="progress-striped active" value=progressbar.barValue type=success data-ng-hide=progressbar.hide>{{progressbar.barValue}}%</uib-progressbar> </div> </div>'), e.put("scripts/app/entities/slideTemplate/slideTemplate-detail.html", '<form name=editForm role=form novalidate ng-submit=save()> <h2 class=page-header>Crear o editar una Plantillas de diapositivas</h2> <div class=row> <div class=col-md-6> <div class=form-group> <label for=field_name>Nombre</label> <input id=field_name class=form-control name=name ng-model=slideTemplate.name data-ng-change=setDirty(true) required> <div data-ng-show=editForm.name.$invalid> <p class=help-block> The name field is required </p> </div> </div> <div class=form-group> <label for=field_description>DescripciÃ³n</label> <textarea id=field_description class="container form-control" name=description data-ng-model=slideTemplate.description rows=10 cols=125 data-ng-change=setDirty(true)></textarea> </div> <div class=form-group> <label for=field_content>Contenido</label> <textarea id=field_content class="container form-control" name=content data-ng-model=slideTemplate.content data-ng-change=updateSlidePreview() rows=10 cols=125 required></textarea> <div data-ng-show=editForm.content.$invalid> <p class=help-block> The content field is required </p> </div> </div> <div class=modal-footer> <button type=button class="btn btn-default" ng-click=cancel()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit ng-disabled="editForm.$invalid || editForm.$submitted" class="btn btn-primary"> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </div> <div class=col-md-6> <iframe id=previewFrameId name=previewFrame src=scripts/app/entities/training/slidePreview.html style="width:100%; height:650px"> <p>No frames supported</p> </iframe> </div> </div> </form> '), e.put("scripts/app/entities/slideTemplate/slideTemplates.html", '<div> <h2 class=page-header>SlideTemplates</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class="btn btn-primary" ui-sref=slideTemplate.new> <span class="glyphicon glyphicon-flash"></span> <span>Crear una nueva Plantilla de Diapositiva</span> </button> </div> \x3c!-- <div class="col-md-8">\n                <form name="searchForm" class="form-inline">\n                    <div class="form-group">\n                        <input type="text" class="form-control" ng-model="searchQuery" id="searchQuery" placeholder="query">\n                    </div>\n                    <button class="btn btn-info" ng-click="search()"><span class="glyphicon glyphicon-search"></span> <span>Search a SlideTemplate</span>\n                    </button>\n                </form>\n            </div> --\x3e <div class=col-md-5> <form> <button type=button class="btn btn-info pull-left" data-toggle=collapse data-target=#searchStringID>Buscar <span class="glyphicon glyphicon-search"></span> </button> <div id=searchStringID class=collapse> <div class=input-group> <input class="form-control col-md-5" placeholder="Cadena de bÃºsqueda" data-ng-model=searchString> </div> </div> </form> </div> </div> </div> <div class="modal fade" id=deleteSlideTemplateConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(slideTemplate.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete this SlideTemplate?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> <th>ID</th> <th>Nombre</th> <th>DescripciÃ³n</th> <th>Creado</th> <th>Ãšltima modificaciÃ³n/th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="slideTemplate in slideTemplates | filter : searchString"> <td><a ui-sref=slideTemplate.detail({id:slideTemplate.id})>{{slideTemplate.id}}</a></td> <td>{{slideTemplate.name}}</td> <td>{{slideTemplate.description}}</td> <td>{{slideTemplate.createdDate | date : "mediumDate" }} by {{slideTemplate.createdBy}}</td> <td>{{slideTemplate.lastModifiedDate | date : "shortTime" }} by {{slideTemplate.lastModifiedBy}}</td> <td> <button type=button ui-sref=slideTemplate.detail({id:slideTemplate.id}) class="btn btn-primary btn-sm"> <span class="glyphicon glyphicon-pencil"></span>&nbsp;<span> Edit</span> </button> <button type=button ng-click=delete(slideTemplate.id) class="btn btn-danger btn-sm"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete</span> </button> </td> </tr> </tbody> </table> </div> </div> '), e.put("scripts/app/entities/statusColumn/statusColumn-bulk.html", '<form name=editForm role=form novalidate ng-submit=save()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myTagCategoryLabel>Bulk change for Status Columns</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=container> <div class=row> <div class=col-md-4> <span style=color:red><strong>You have selected {{statusColumns.length}} status columns.</strong></span> </div> <div class=pull-right> <div class=col-md-4> <button type=button class="btn btn-default" data-ng-click=toggleShowHide()> <span ng-class=glyphicon></span>&nbsp;<span>{{showTypes}}</span> </button> </div> </div> </div> </div> <br> <div data-ng-if=!show> <table class="table table-responsive"> <tr> <th>Nombre</th> <th>DescripciÃ³n</th> </tr> <tr data-ng-repeat="stat in statusColumns"> <td>{{stat.name}}</td> <td>{{stat.description}}</td> </tr> </table> </div> <br> <div class=form-group> <label for=field_active>Activo</label><br><br> <input bs-switch type=checkbox class=form-control name=active id=field_active data-ng-model=state.active switch-on-text=Active switch-off-text="No Activo" switch-on-color=success switch-off-color=danger switch-label-width=0 switch-size=large switch-handle-width=655> </div> <br> <div class=form-group> <label for=field_isEnum>IsEnum</label><br><br> <input bs-switch type=checkbox class=form-control name=active id=field_isEnum data-ng-model=state.isEnum switch-on-text=Yes switch-off-text=No switch-on-color=success switch-off-color=danger switch-label-width=0 switch-size=large switch-handle-width=655> </div> <br> </div> <div class="modal fade" id=deleteStatusColumnsConfirmation> <div class=modal-dialog> <div class=modal-content> <form> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete all selected Status Columns?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit class="btn btn-danger" data-ng-click=confirmDeleteAll(statusColumns)> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=modal-footer> <div class=col-sm-1> <button type=button data-ng-click=delete() class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete all selected Status Columns</span> </button> </div> <button type=button class="btn btn-default" data-dismiss=modal ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit ng-disabled=editForm.$invalid class="btn btn-primary" data-ng-click=save()> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </form> '), e.put("scripts/app/entities/statusColumn/statusColumn-detail.html", ' <div> <h2><span>StatusColumn</span> {{statusColumn.id}}</h2> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> <th>Field</th> <th>Valor</th> </tr> </thead> <tbody> <tr> <td> <span>Nombre</span> </td> <td> <span class=form-control-static>{{statusColumn.name}}</span> </td> </tr> <tr> <td> <span>DescripciÃ³n</span> </td> <td> <span class=form-control-static>{{statusColumn.description}}</span> </td> </tr> <tr> <td> <span>IsEnum</span> </td> <td> <span class=form-control-static>{{statusColumn.isEnum}}</span> </td> </tr> <tr> <td> <span>ShowOrder</span> </td> <td> <span class=form-control-static>{{statusColumn.showOrder}}</span> </td> </tr> <tr> <td> <span>Activo</span> </td> <td> <span class=form-control-static>{{statusColumn.active}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class="btn btn-info"> <span class="glyphicon glyphicon-arrow-left"></span>&nbsp;<span> Back</span> </button> </div> '), e.put("scripts/app/entities/statusColumn/statusColumn-dialog.html", ' <form name=editForm role=form novalidate ng-submit=save()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myStatusColumnLabel>Crear o editar una Columna de Estado</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id>ID</label> <input class=form-control id=id name=id ng-model=statusColumn.id readonly> </div> <div class=form-group> <label for=field_name>Nombre</label> <input class=form-control name=name id=field_name ng-model=statusColumn.name required> </div> <div class=form-group> <label for=field_description>DescripciÃ³n</label> <input class=form-control name=description id=field_description ng-model=statusColumn.description> </div> <div class=form-group> <label for=field_isEnum>IsEnum</label> \x3c!-- <input type="checkbox" class="form-control" name="isEnum" id="field_isEnum"\n                    ng-model="statusColumn.isEnum"\n                    > --\x3e <input bs-switch type=checkbox class=form-control name=active id=field_active data-ng-model=statusColumn.isEnum switch-on-text=Active switch-off-text="No Activo" switch-on-color=success switch-off-color=danger switch-label-width=0 switch-size=large switch-handle-width=655> </div> <div class=form-group> <label for=field_showOrder>ShowOrder</label> <input type=number class=form-control name=showOrder id=field_showOrder ng-model=statusColumn.showOrder required> </div> <div class=form-group> <label for=field_active>Activo</label> \x3c!-- <input type="checkbox" class="form-control" name="active" id="field_active"\n                    ng-model="statusColumn.active"\n                    > --\x3e <input bs-switch type=checkbox class=form-control name=active id=field_active data-ng-model=statusColumn.active switch-on-text=Active switch-off-text="No Activo" switch-on-color=success switch-off-color=danger switch-label-width=0 switch-size=large switch-handle-width=655> </div> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit ng-disabled="editForm.$invalid || editForm.$submitted" class="btn btn-primary"> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </form> '), e.put("scripts/app/entities/statusColumn/statusColumns.html", '<div> <h2 class=page-header>Columnas de Estado</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class="btn btn-primary" ui-sref=statusColumn.new> <span class="glyphicon glyphicon-flash"></span> <span>Crear una nueva Columna de Estado/span> </button> </div> \x3c!--<div class="col-md-5">\n                <form name="searchForm" class="form-inline">\n                    <div class="input-group">\n                        <input type="text" class="form-control" data-ng-model="searchQuery" id="searchQuery" placeholder="Buscar una columna de estado">\n                        <span class="input-group-btn">\n                            <button class="btn btn-info" data-ng-click="search()" id="searchButton"><span class="glyphicon glyphicon-search"></span>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>--\x3e <div class=col-md-5> <form> <button type=button class="btn btn-info pull-left" data-toggle=collapse data-target=#searchStringID>Buscar <span class="glyphicon glyphicon-search"></span> </button> <div id=searchStringID class=collapse> <div class=input-group> <input class="form-control col-md-5" placeholder="Cadena de bÃºsqueda" data-ng-model=searchString> </div> </div> </form> </div> <div class=col-md-3> <button class="btn btn-primary" ui-sref=statusColumn.bulk data-ng-click=bulkChange() data-ng-if="(statusColumns | filter:{selected: true}).length != 0"> <span class="glyphicon glyphicon-edit"></span> <span>Bulk change with selected</span> </button> </div> </div> </div> <div class="modal fade" id=deleteStatusColumnConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm data-ng-submit=confirmDelete(statusColumn.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete this StatusColumn?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit data-ng-disabled=deleteForm.$invalid class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> \x3c!--<th>ID</th>--\x3e <th>Nombre</th> <th>DescripciÃ³n</th> <th>IsEnum</th> <th class=text-center>ShowOrder</th> <th class=text-center>Activo</th> <th></th> <th class=text-center> <select-all filter-length={{filterEntity().length}} on-change=performSelection(selectionValue) selected-length="{{(filterEntity() | filter: {selected: true}).length}}"></select-all> </th> </tr> </thead> <tbody> <tr class=animate-repeat data-ng-repeat="statusColumn in statusColumns | orderBy: \'showOrder\' | filter:searchString"> \x3c!--<td><a ui-sref="statusColumn.detail({id:statusColumn.id})">{{statusColumn.id}}</a></td>--\x3e <td><strong>{{statusColumn.name}}</strong></td> <td>{{statusColumn.description}}</td> <td>{{statusColumn.isEnum}}</td> <td class=text-center>{{statusColumn.showOrder}}</td> <td class=text-center>{{statusColumn.active}}</td> <td> <button type=submit ui-sref=statusColumn.detail({id:statusColumn.id}) class="btn btn-info btn-sm"> <span class="glyphicon glyphicon-eye-open"></span>&nbsp;<span> View</span> </button> <button type=submit ui-sref=statusColumn.edit({id:statusColumn.id}) class="btn btn-primary btn-sm"> <span class="glyphicon glyphicon-pencil"></span>&nbsp;<span> Edit</span> </button> <button type=submit ng-click=delete(statusColumn.id) class="btn btn-danger btn-sm"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete</span> </button> </td> <td class=text-center> <input type=checkbox data-ng-model=statusColumn.selected /> </td> </tr> </tbody> </table> </div> </div> '), e.put("scripts/app/entities/statusColumnValue/statusColumnValue-bulk.html", '<form name=editForm role=form novalidate ng-submit=save()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myCollectionTagInstanceLabel>Bulk change for Status Columns Values</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=container> <div class=row> <div class=col-md-4> <span style=color:red><strong>You have selected {{statusColumnValues.length}} collection Instance.</strong></span> </div> <div class=pull-right> <div class=col-md-4> <button type=button class="btn btn-default" data-ng-click=toggleShowHide()> <span ng-class=glyphicon></span>&nbsp;<span>{{showTypes}}</span> </button> </div> </div> </div> </div> <br> <div data-ng-if=!show> <table class="table table-responsive"> <tr> <th>Nombre</th> <th>DescripciÃ³n</th> </tr> <tr data-ng-repeat="value in statusColumnValues"> <td>{{value.name}}</td> <td>{{value.description}}</td> </tr> </table> </div> <br> <span>Select a Status Column to apply the selected Values to this Status Column</span><br><br> <div class=btn-group> <button data-ng-repeat="statusColumn in statusColumns | orderBy:\'showOrder\'" class="btn btn-primary" type=button data-ng-model=selectedStatusColumn.value uib-btn-radio=statusColumn.id uncheckable>{{statusColumn.name}}</button> </div> <br> <br> <div class=form-group> <label for=field_active>Activo</label><br><br> <input bs-switch type=checkbox class=form-control name=active id=field_active data-ng-model=state.active switch-on-text=Active switch-off-text="No Activo" switch-on-color=success switch-off-color=danger switch-label-width=0 switch-size=large switch-handle-width=655> </div> <br> </div> <div class="modal fade" id=deleteStatusColumnValuesConfirmation> <div class=modal-dialog> <div class=modal-content> <form> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete all selected Status Column Values?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit class="btn btn-danger" data-ng-click=confirmDeleteAll(statusColumnValues)> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=modal-footer> <div class=col-sm-1> <button type=button data-ng-click=delete() class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete all selected Status Column Values</span> </button> </div> <button type=button class="btn btn-default" data-dismiss=modal ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit ng-disabled=editForm.$invalid class="btn btn-primary" data-ng-click=save()> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </form> '), e.put("scripts/app/entities/statusColumnValue/statusColumnValue-detail.html", ' <div> <h2><span>StatusColumnValue</span> {{statusColumnValue.id}}</h2> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> <th>Field</th> <th>Valor</th> </tr> </thead> <tbody> <tr> <td> <span>Nombre</span> </td> <td> <span class=form-control-static>{{statusColumnValue.name}}</span> </td> </tr> <tr> <td> <span>DescripciÃ³n</span> </td> <td> <span class=form-control-static>{{statusColumnValue.description}}</span> </td> </tr> <tr> <td> <span>ShowOrder</span> </td> <td> <span class=form-control-static>{{statusColumnValue.showOrder}}</span> </td> </tr> <tr> <td> <span>Activo</span> </td> <td> <span class=form-control-static>{{statusColumnValue.active}}</span> </td> </tr> <tr> <td> <span>statusColumn</span> </td> <td> <a class=form-control-static ui-sref=statusColumn.detail({id:statusColumnValue.statusColumn.id})>{{statusColumnValue.statusColumn.name}}</a> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class="btn btn-info"> <span class="glyphicon glyphicon-arrow-left"></span>&nbsp;<span> Back</span> </button> </div> '), e.put("scripts/app/entities/statusColumnValue/statusColumnValue-dialog.html", ' <form name=editForm role=form novalidate ng-submit=save()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myStatusColumnValueLabel>Crear o editar una Columna de EstadoValue</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id>ID</label> <input class=form-control id=id name=id ng-model=statusColumnValue.id readonly> </div> <div class=form-group> <label for=field_name>Nombre</label> <input class=form-control name=name id=field_name ng-model=statusColumnValue.name required> </div> <div class=form-group> <label for=field_description>DescripciÃ³n</label> <input class=form-control name=description id=field_description ng-model=statusColumnValue.description> </div> <div class=form-group> <label for=field_showOrder>ShowOrder</label> <input type=number class=form-control name=showOrder id=field_showOrder ng-model=statusColumnValue.showOrder required> </div> <div class=form-group> <label for=field_active>Activo</label> \x3c!-- <input type="checkbox" class="form-control" name="active" id="field_active"\n                    ng-model="statusColumnValue.active"\n                    > --\x3e <input bs-switch type=checkbox class=form-control name=active id=field_active data-ng-model=statusColumnValue.active switch-on-text=Active switch-off-text="No Activo" switch-on-color=success switch-off-color=danger switch-label-width=0 switch-size=large switch-handle-width=655> </div> <div class=form-group> <label for=field_statusColumn>statusColumn</label> <select class=form-control id=field_statusColumn name=statusColumn ng-model=statusColumnValue.statusColumn ng-options="statusColumn as statusColumn.name for statusColumn in statuscolumns track by statusColumn.id" required> <option value=""></option> </select> </div> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit ng-disabled="editForm.$invalid || editForm.$submitted" class="btn btn-primary"> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </form> '), e.put("scripts/app/entities/statusColumnValue/statusColumnValues.html", '<div> <h2 class=page-header>Valores de las Columnas de Estado</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class="btn btn-primary" ui-sref=statusColumnValue.new> <span class="glyphicon glyphicon-flash"></span> <span>Crear un nuevo Valor de Columna de Estado</span> </button> </div> \x3c!--<div class="col-md-5">\n                <form name="searchForm" class="form-inline">\n                    <div class="input-group">\n                        <input type="text" class="form-control" data-ng-model="searchQuery" id="searchQuery" placeholder="Buscar un valor de columna de estado">\n                        <span class="input-group-btn">\n                            <button class="btn btn-info" data-ng-click="search()" id="searchButton"><span class="glyphicon glyphicon-search"></span>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>--\x3e <div class=col-md-5> <form> <button type=button class="btn btn-info pull-left" data-toggle=collapse data-target=#searchStringID>Buscar <span class="glyphicon glyphicon-search"></span> </button> <div id=searchStringID class=collapse> <div class=input-group> <input class="form-control col-md-5" placeholder="Cadena de bÃºsqueda" data-ng-model=searchString> </div> </div> </form> </div> <div class=col-md-3> <button class="btn btn-primary" ui-sref=statusColumnValue.bulk data-ng-click=bulkChange() data-ng-if="(statusColumnValues | filter:{selected: true}).length != 0"> <span class="glyphicon glyphicon-edit"></span> <span>Bulk change with selected</span> </button> </div> </div> </div> <div class="modal fade" id=deleteStatusColumnValueConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm data-ng-submit=confirmDelete(statusColumnValue.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete this StatusColumnValue?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit data-ng-disabled=deleteForm.$invalid class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> \x3c!--<th>ID</th>--\x3e \x3c!-- <th>Column</th> --\x3e <th><span ng-dropdown-multiselect="" options=statusColumns selected-model=selectedColumns translation-texts=statusColumnLabelText extra-settings=selectedColumnSettings> </span> </th> <th>Nombre</th> <th>DescripciÃ³n</th> <th class=text-center>ShowOrder</th> <th class=text-center>Activo</th> <th></th> <th class=text-center> <select-all filter-length={{filterEntity().length}} on-change=performSelection(selectionValue) selected-length="{{(filterEntity() | filter: {selected: true}).length}}"></select-all> </th> </tr> </thead> <tbody> <tr class=animate-repeat data-ng-repeat="statusColumnValue in statusColumnValues | filterCategoryForEntities: selectedColumns: \'statusColumn\'| filter:searchString | orderBy: [\'statusColumn.showOrder\',\'showOrder\']"> \x3c!--<td><a ui-sref="statusColumnValue.detail({id:statusColumnValue.id})">{{statusColumnValue.id}}</a></td>--\x3e <td> <a ui-sref=statusColumn.detail({id:statusColumnValue.statusColumn.id})>{{statusColumnValue.statusColumn.name}}</a> </td> <td><strong>{{statusColumnValue.name}}</strong></td> <td>{{statusColumnValue.description}}</td> <td class=text-center>{{statusColumnValue.showOrder}}</td> <td class=text-center>{{statusColumnValue.active}}</td> <td> <button type=submit ui-sref=statusColumnValue.detail({id:statusColumnValue.id}) class="btn btn-info btn-sm"> <span class="glyphicon glyphicon-eye-open"></span>&nbsp;<span> View</span> </button> <button type=submit ui-sref=statusColumnValue.edit({id:statusColumnValue.id}) class="btn btn-primary btn-sm"> <span class="glyphicon glyphicon-pencil"></span>&nbsp;<span> Edit</span> </button> <button type=submit data-ng-click=delete(statusColumnValue.id) class="btn btn-danger btn-sm"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete</span> </button> </td> <td class=text-center> <input type=checkbox data-ng-model=statusColumnValue.selected /> </td> </tr> </tbody> </table> </div> </div> '), e.put("scripts/app/entities/tagCategory/tagCategory-bulk.html", '<form name=editForm role=form novalidate ng-submit=save()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myTagCategoryLabel>Bulk change for Tag Categories</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=container> <div class=row> <div class=col-md-4> <span style=color:red><strong>You have selected {{tagCategories.length}} tag categories.</strong></span> </div> <div class=pull-right> <div class=col-md-4> <button type=button class="btn btn-default" data-ng-click=toggleShowHide()> <span ng-class=glyphicon></span>&nbsp;<span>{{showTypes}}</span> </button> </div> </div> </div> </div> <br> <div data-ng-if=!show> <table class="table table-responsive"> <tr> <th>Nombre</th> <th>DescripciÃ³n</th> </tr> <tr data-ng-repeat="category in tagCategories"> <td>{{category.name}}</td> <td>{{category.description}}</td> </tr> </table> </div> <br> <div class=form-group> <label for=field_active>Activo</label><br><br> <input bs-switch type=checkbox class=form-control name=active id=field_active data-ng-model=state.active switch-on-text=Active switch-off-text="No Activo" switch-on-color=success switch-off-color=danger switch-label-width=0 switch-size=large switch-handle-width=655> </div> <br> </div> <div class="modal fade" id=deleteTagCategoriesConfirmation> <div class=modal-dialog> <div class=modal-content> <form> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete all selected Tag Categories?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit class="btn btn-danger" data-ng-click=confirmDeleteAll(tagCategories)> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=modal-footer> <div class=col-sm-1> <button type=button data-ng-click=delete() class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete all selected Tag Categories</span> </button> </div> <button type=button class="btn btn-default" data-dismiss=modal ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit ng-disabled=editForm.$invalid class="btn btn-primary" data-ng-click=save()> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </form> '), e.put("scripts/app/entities/tagCategory/tagCategory-detail.html", ' <div> <h2><span>Tag Category</span> {{tagCategory.id}}</h2> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> <th>Field</th> <th>Valor</th> </tr> </thead> <tbody> <tr> <td> <span>Nombre</span> </td> <td> <span class=form-control-static>{{tagCategory.name}}</span> </td> </tr> <tr> <td> <span>DescripciÃ³n</span> </td> <td> <span class=form-control-static>{{tagCategory.description}}</span> </td> </tr> <tr> <td> <span>ShowOrder</span> </td> <td> <span class=form-control-static>{{tagCategory.showOrder}}</span> </td> </tr> <tr> <td> <span>Activo</span> </td> <td> <span class=form-control-static>{{tagCategory.active}}</span> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class="btn btn-info"> <span class="glyphicon glyphicon-arrow-left"></span>&nbsp;<span> Back</span> </button> </div> '), e.put("scripts/app/entities/tagCategory/tagCategory-dialog.html", ' <form name=editForm role=form novalidate ng-submit=save()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myTagCategoryLabel>Crear o editar una etiqueta de categorÃ­a</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id>ID</label> <input class=form-control id=id name=id ng-model=tagCategory.id readonly> </div> <div class=form-group> <label for=field_name>Nombre</label> <input class=form-control name=name id=field_name ng-model=tagCategory.name required> </div> <div class=form-group> <label for=field_description>DescripciÃ³n</label> <input class=form-control name=description id=field_description ng-model=tagCategory.description> </div> <div class=form-group> <label for=field_showOrder>ShowOrder</label> <input type=number class=form-control name=showOrder id=field_showOrder ng-model=tagCategory.showOrder required> </div> <div class=form-group> <label for=field_active>Activo</label><br> \x3c!-- <input type="checkbox" class="form-control" name="active" id="field_active"\n                    ng-model="tagCategory.active"\n                    > --\x3e <input bs-switch type=checkbox class=form-control name=active id=field_active data-ng-model=tagCategory.active switch-on-text=Active switch-off-text="No Activo" switch-on-color=success switch-off-color=danger switch-label-width=0 switch-size=large switch-handle-width=655> </div> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit ng-disabled="editForm.$invalid || editForm.$submitted" class="btn btn-primary"> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </form> '), e.put("scripts/app/entities/tagCategory/tagCategorys.html", '<div> <h2 class=page-header>Etiquetas de CategorÃ­as</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class="btn btn-primary" ui-sref=tagCategory.new> <span class="glyphicon glyphicon-flash"></span> <span>Crear una nueva etiqueta de categorÃ­a</span> </button> </div> \x3c!--<div class="col-md-5">\n                <form name="searchForm" class="form-inline">\n                    <div class="input-group">\n                        <input type="text" class="form-control" data-ng-model="searchQuery" id="searchQuery" placeholder="Buscar una categorÃ­a de etiqueta">\n                        <span class="input-group-btn">\n                            <button class="btn btn-info" data-ng-click="search()" id="searchButton"><span class="glyphicon glyphicon-search"></span>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>--\x3e <div class=col-md-5> <form> <button type=button class="btn btn-info pull-left" data-toggle=collapse data-target=#searchStringID>Buscar <span class="glyphicon glyphicon-search"></span> </button> <div id=searchStringID class=collapse> <div class=input-group> <input class="form-control col-md-5" placeholder="Cadena de bÃºsqueda" data-ng-model=searchString> </div> </div> </form> </div> <div class=col-md-3> <button class="btn btn-primary" ui-sref=tagCategory.bulk data-ng-click=bulkChange() data-ng-if="(tagCategorys | filter:{selected: true}).length != 0"> <span class="glyphicon glyphicon-edit"></span> <span>Bulk change with selected</span> </button> </div> </div> </div> <div class="modal fade" id=deleteTagCategoryConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm data-ng-submit=confirmDelete(tagCategory.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete this Tag Category?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> \x3c!--<th>ID</th>--\x3e <th>Nombre</th> <th>DescripciÃ³n</th> <th class=text-center>ShowOrder</th> <th class=text-center>Activo</th> <th></th> <th class=text-center> <select-all filter-length={{filterEntity().length}} on-change=performSelection(selectionValue) selected-length="{{(filterEntity() | filter: {selected: true}).length}}"></select-all> </th> </tr> </thead> <tbody> <tr class=animate-repeat data-ng-repeat="tagCategory in tagCategorys | orderBy : \'showOrder\' | filter:searchString"> \x3c!--<td><a ui-sref="tagCategory.detail({id:tagCategory.id})">{{tagCategory.id}}</a></td>--\x3e <td><strong>{{tagCategory.name}}</strong></td> <td>{{tagCategory.description}}</td> <td class=text-center>{{tagCategory.showOrder}}</td> <td class=text-center>{{tagCategory.active}}</td> <td> <button type=submit ui-sref=tagCategory.detail({id:tagCategory.id}) class="btn btn-info btn-sm"> <span class="glyphicon glyphicon-eye-open"></span>&nbsp;<span> View</span> </button> <button type=submit ui-sref=tagCategory.edit({id:tagCategory.id}) class="btn btn-primary btn-sm"> <span class="glyphicon glyphicon-pencil"></span>&nbsp;<span> Edit</span> </button> <button type=submit ng-click=delete(tagCategory.id) class="btn btn-danger btn-sm"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete</span> </button> </td> <td class=text-center> <input type=checkbox data-ng-model=tagCategory.selected /> </td> </tr> </tbody> </table> </div> </div> '), e.put("scripts/app/entities/tagInstance/tagInstance-bulk.html", '<form name=editForm role=form novalidate ng-submit=save()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myCollectionTagInstanceLabel>Bulk change for Tag Instances</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=container> <div class=row> <div class=col-md-4> <span style=color:red><strong>You have selected {{tagInstance.length}} collection Instance.</strong></span> </div> <div class=pull-right> <div class=col-md-4> <button type=button class="btn btn-default" data-ng-click=toggleShowHide()> <span ng-class=glyphicon></span>&nbsp;<span>{{showTypes}}</span> </button> </div> </div> </div> </div> <br> <div data-ng-if=!show> <table class="table table-responsive"> <tr> <th>Nombre</th> <th>DescripciÃ³n</th> </tr> <tr data-ng-repeat="instance in tagInstance"> <td>{{instance.name}}</td> <td>{{instance.description}}</td> </tr> </table> </div> <br> <span>Select a Tag Category to apply the selected Instances to this Tag Category</span><br><br> <div class=btn-group> <button data-ng-repeat="category in tagCategories | orderBy:\'showOrder\'" class="btn btn-primary" type=button data-ng-model=selectedCat.value uib-btn-radio=category.id uncheckable>{{category.name}}</button> </div> <br> <br> <div class=form-group> <label for=field_active>Activo</label><br><br> <input bs-switch type=checkbox class=form-control name=active id=field_active data-ng-model=state.active switch-on-text=Active switch-off-text="No Activo" switch-on-color=success switch-off-color=danger switch-label-width=0 switch-size=large switch-handle-width=655> </div> <br> </div> <div class="modal fade" id=deleteTagInstancesConfirmation> <div class=modal-dialog> <div class=modal-content> <form> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete all selected Tag Instances?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit class="btn btn-danger" data-ng-click=confirmDeleteAll(tagInstance)> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=modal-footer> <div class=col-sm-1> <button type=button data-ng-click=delete() class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete all selected Tag Instances</span> </button> </div> <button type=button class="btn btn-default" data-dismiss=modal ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit ng-disabled=editForm.$invalid class="btn btn-primary" data-ng-click=save()> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </form> '), e.put("scripts/app/entities/tagInstance/tagInstance-detail.html", ' <div> <h2><span>Tag Instance</span> {{tagInstance.id}}</h2> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> <th>Field</th> <th>Valor</th> </tr> </thead> <tbody> <tr> <td> <span>Nombre</span> </td> <td> <span class=form-control-static>{{tagInstance.name}}</span> </td> </tr> <tr> <td> <span>DescripciÃ³n</span> </td> <td> <span class=form-control-static>{{tagInstance.description}}</span> </td> </tr> <tr> <td> <span>ShowOrder</span> </td> <td> <span class=form-control-static>{{tagInstance.showOrder}}</span> </td> </tr> <tr> <td> <span>Activo</span> </td> <td> <span class=form-control-static>{{tagInstance.active}}</span> </td> </tr> <tr> <td> <span>Tag Category</span> </td> <td> <a class=form-control-static ui-sref=tagCategory.detail({id:tagInstance.tagCategory.id})>{{tagInstance.tagCategory.name}}</a> </td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class="btn btn-info"> <span class="glyphicon glyphicon-arrow-left"></span>&nbsp;<span> Back</span> </button> </div> '), e.put("scripts/app/entities/tagInstance/tagInstance-dialog.html", ' <form name=editForm role=form novalidate ng-submit=save()> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title id=myTagInstanceLabel>Crear o editar una Etiqueta de Instancia</h4> </div> <div class=modal-body> <jh-alert-error></jh-alert-error> <div class=form-group> <label for=id>ID</label> <input class=form-control id=id name=id ng-model=tagInstance.id readonly> </div> <div class=form-group> <label for=field_name>Nombre</label> <input class=form-control name=name id=field_name ng-model=tagInstance.name required> </div> <div class=form-group> <label for=field_description>DescripciÃ³n</label> <input class=form-control name=description id=field_description ng-model=tagInstance.description> </div> <div class=form-group> <label for=field_showOrder>ShowOrder</label> <input type=number class=form-control name=showOrder id=field_showOrder ng-model=tagInstance.showOrder required> </div> <div class=form-group> <label for=field_active>Activo</label> \x3c!--  <input type="checkbox" class="form-control" name="active" id="field_active"\n                    ng-model="tagInstance.active"\n                    > --\x3e <input bs-switch type=checkbox class=form-control name=active id=field_active data-ng-model=tagInstance.active switch-on-text=Active switch-off-text="No Activo" switch-on-color=success switch-off-color=danger switch-label-width=0 switch-size=large switch-handle-width=655> </div> <div class=form-group> <label for=field_tagCategory>Tag Category</label> <select class=form-control id=field_tagCategory name=tagCategory ng-model=tagInstance.tagCategory ng-options="tagCategory as tagCategory.name for tagCategory in tagcategorys track by tagCategory.id" required> <option value=""></option> </select> </div> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit ng-disabled="editForm.$invalid || editForm.$submitted" class="btn btn-primary"> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar</span> </button> </div> </form> '), e.put("scripts/app/entities/tagInstance/tagInstances.html", '<div> <h2 class=page-header>Etiqueta de Instancias</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class="btn btn-primary" ui-sref=tagInstance.new> <span class="glyphicon glyphicon-flash"></span> <span>Crear una nueva etiqueta de instancia</span> </button> </div> \x3c!--<div class="col-md-6">\n                <form name="searchForm" class="form-inline">\n                    <div class="input-group">\n                        <input type="text" class="form-control" data-ng-model="searchQuery" id="searchQuery" placeholder="Buscar una etiqueta de instancia">\n                        <span class="input-group-btn">\n                            <button class="btn btn-info" data-ng-click="search()" id="searchButton"><span class="glyphicon glyphicon-search"></span>\n                            </button>\n                        </span>\n                    </div>\n                </form>\n            </div>--\x3e <div class=col-md-5> <form> <button type=button class="btn btn-info pull-left" data-toggle=collapse data-target=#searchStringID>Buscar <span class="glyphicon glyphicon-search"></span> </button> <div id=searchStringID class=collapse> <div class=input-group> <input class="form-control col-md-5" placeholder="Cadena de bÃºsqueda" data-ng-model=searchString> </div> </div> </form> </div> <div class=col-md-2> <button class="btn btn-primary" ui-sref=tagInstance.bulk data-ng-click=bulkChange() data-ng-if="(tagInstances | filter:{selected: true}).length != 0"> <span class="glyphicon glyphicon-edit"></span> <span>Bulk change with selected</span> </button> </div> </div> </div> <div class="modal fade" id=deleteTagInstanceConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm data-ng-submit=confirmDelete(tagInstance.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true data-ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete this Tag Instance?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal data-ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit data-ng-disabled=deleteForm.$invalid class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> \x3c!--<th>ID</th>--\x3e \x3c!-- <th>Tag Category</th> --\x3e <th><span ng-dropdown-multiselect="" options=tagCategories selected-model=selectedCategory translation-texts=categoryLabelText extra-settings=selectedCategorySettings> </span> </th> <th>Nombre</th> <th>DescripciÃ³n</th> <th class=text-center>ShowOrder</th> <th class=text-center>Activo</th> <th></th> <th class=text-center> <select-all filter-length={{filterEntity().length}} on-change=performSelection(selectionValue) selected-length="{{(filterEntity() | filter: {selected: true}).length}}"></select-all> </th> </tr> </thead> <tbody> <tr class=animate-repeat data-ng-repeat="tagInstance in tagInstances | filterCategoryForEntities: selectedCategory: \'tagCategory\' | orderBy: [\'tagCategory.showOrder\',\'showOrder\'] | filter:searchString"> \x3c!--<td><a ui-sref="tagInstance.detail({id:tagInstance.id})">{{tagInstance.id}}</a></td>--\x3e <td> <a ui-sref=tagCategory.detail({id:tagInstance.tagCategory.id})>{{tagInstance.tagCategory.name}}</a> </td> <td><strong>{{tagInstance.name}}</strong></td> <td>{{tagInstance.description}}</td> <td class=text-center>{{tagInstance.showOrder}}</td> <td class=text-center>{{tagInstance.active}}</td> <td> <button type=submit ui-sref=tagInstance.detail({id:tagInstance.id}) class="btn btn-info btn-sm"> <span class="glyphicon glyphicon-eye-open"></span>&nbsp;<span> View</span> </button> <button type=submit ui-sref=tagInstance.edit({id:tagInstance.id}) class="btn btn-primary btn-sm"> <span class="glyphicon glyphicon-pencil"></span>&nbsp;<span> Edit</span> </button> <button type=submit ng-click=delete(tagInstance.id) class="btn btn-danger btn-sm"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete</span> </button> </td> <td class=text-center> <input type=checkbox data-ng-model=tagInstance.selected /> </td> </tr> </tbody> </table> </div> </div> '), e.put("scripts/app/entities/training/nested-views/training-content.html", '<div class=col-md-12> <h3 class=text-center>Columnas de Opciones</h3> <table class="table table-condensed table-striped"> <thead> <tr> <th>Nombre</th> <th>DescripciÃ³n</th> <th><input type=checkbox data-ng-click=toggleAll() data-ng-model=selectAll></th> </tr> </thead> <tr ng-repeat="optcolumn in optcolumns"> <td>{{ optcolumn.name }}</td> <td>{{ optcolumn.description }}</td> <td><input type=checkbox data-ng-click=updateSelection(optcolumn.id) data-ng-model=selected[optcolumn.id]></td> </tr> </table> </div> '), e.put("scripts/app/entities/training/nested-views/training-customize.html", '<div class="col-sm-6 col-md-3"> <div id=tree></div> </div> <style> .vakata-context, #jstree-marker { z-index: 10000 !important; } </style> <div class="col-sm-6 col-md-5"> <div id=editBlock> <h2 class=page-header style="margin-top: 0px">Edit Slide</h2> <form name=slideEditorform data-ng-submit=saveSlide()> <div class=form-group> <label for=slideTitle>Slide Title</label> <input class=form-control name=slideTitle id=slideTitle data-ng-model=selectedNode.name data-ng-change=updateEditableSlides()> </div> <div class=form-group> <label for=slideContent>Slide Content</label> <textarea rows=14 class=form-control name=slideContent id=slideContent data-ng-model=selectedNode.content data-ng-change=updateEditableSlides()></textarea> </div> <div class=form-group> <div id=customSlideWarning class="alert alert-info" data-ng-hide="selectedNode.content.length > 0"> Slides with no content will be excluded from the presentation. </div> </div> <div class=modal-footer> \x3c!-- <button id="updateSlideButton" type="button" class="btn btn-info" data-ng-click="updateSlidePreview(false, \'\')">\n                    <span class="glyphicon glyphicon-eye-open"></span>&nbsp;<span>Update Preview</span>\n                </button> --\x3e <button id=saveSlideButton type=submit class="btn btn-primary" data-ng-disabled=disableSaveSlideButton> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Save Slide</span></button> </div> </form> </div> </div> <div data-ng-if=showPreview id=previewBlock class="col-sm-12 col-md-4"> <iframe id=previewFrameId name=previewFrame src=scripts/app/entities/training/slidePreview.html style="width:100%; height:650px"> <p>No frames supported</p> </iframe> </div> '), e.put("scripts/app/entities/training/nested-views/training-requirements.html", '<div class=container> <div class=row> <label for=includeAllSwitch><strong>Include ALL Requirements </strong></label> <input id=includeAllSwitch bs-switch type=checkbox switch-on-color=success switch-off-color=danger switch-on-text=Yes switch-off-text=No switch-label-width=2px data-ng-change=allRequirementsSwitched(); data-ng-model=training.allRequirementsSelected switch-handle-width=45 /> </div> </div> <div id=filterBlock class=container style="display: none; padding-top: 15px"> <div class=container> <div class=row> <div class=col-sm-12> <h3> <label>Seleccionar requisitos de seguridad especÃ­ficos:</label> </h3> </div> </div> </div> <br/> <div class=container> <div class=row data-ng-repeat="category in categories | orderBy:\'showOrder\'"> <div class=col-sm-3> <strong>{{category.name}}</strong> <div class="help-tip pull-right"> <p> <strong style=color:yellow>{{category.name}}: {{category.description}}</strong><br> <span data-ng-repeat="instances in category.collectionInstances | orderBy:\'showOrder\'"> <span style=color:#cc6600>{{instances.name}}:</span> {{instances.description}}<br> </span> </p> </div> </div> <div class=col-sm-1></div> <div class=col-sm-3> <div ng-dropdown-multiselect="" options=category.collectionInstances selected-model=category.selectedCollectionSets extra-settings=selectedCollectionSettings events=selectedCollectionEvents></div><br> </div> </div> </div> <br/> <div class=container> <div class=row class=form-group> <div class=col-sm-3> <strong>Tipo de ImplementaciÃ³n</strong> <div class="help-tip pull-right"> <p> <span data-ng-repeat="type in projectType | orderBy:\'showOrder\'"> <span style=color:#cc6600>{{type.name}}:</span> {{type.description}}<br> </span> </p> </div> </div> <div class=col-sm-1></div> <div class=col-sm-3 uib-dropdown> <div ng-dropdown-multiselect="" options=projectType selected-model=selectedProjectType extra-settings=selectedProjectTypeSettings events=selectedProjectTypeEvents></div><br> </div> </div> </div> \x3c!-- TODO: Insert filter by tag --\x3e </div>\x3c!-- filterBlock --\x3e <div style="padding-top: 15px"></div> <div class=well data-ng-if=!fetchNumberError> <span class="glyphicon glyphicon-info-sign"></span> <div style="display: inline-block">The current selection includes <strong>{{ requirementsSelected }} </strong> Security Requirements. </div> </div> <div class="alert alert-danger" data-ng-if=fetchNumberError> <span class="glyphicon glyphicon-exclamation-sign"></span> <div style="display: inline-block"> Sorry, there was an error while retrieving the number of selected requirements. </div> </div> '), e.put("scripts/app/entities/training/nested-views/training-skeleton.html", '<div class=row> <div class=col-md-6> <div class=form-group> <label for=trainingName>Nombre del entrenamiento</label> <input class=form-control name=trainingName id=trainingName required data-ng-model=training.name data-ng-change=setDirty()> <div data-ng-show="(generateForm.trainingName.$invalid) || (editForm.trainingName.$invalid)"> <p class=help-block> El nombre del entrenamiento es obligatorio. </p> </div> </div> <div class=form-group> <label for=description>DescripciÃ³n del entrenamiento</label> <textarea rows=4 class=form-control name=description id=description data-ng-model=training.description data-ng-change=setDirty() data-ng-maxlength=255></textarea> <div data-ng-show="(generateForm.description.$invalid) || (editForm.description.$invalid)"> <p class=help-block> The training description should not exceed 255 Characters. </p> </div> </div> </div> </div> '), e.put("scripts/app/entities/training/slidePreview.html", "<!DOCTYPE html> <html> <head> <meta name=viewport content=\"width=device-width,initial-scale=1,maximum-scale=1,user-scalable=no\"> <title>Slide Preview</title> <link rel=stylesheet href=../../../../bower_components/revealjs/css/reveal.css> <link rel=stylesheet href=../../../../bower_components/revealjs/css/theme/black.css> \x3c!-- Theme used for syntax highlighting of code --\x3e <link rel=stylesheet href=../../../../bower_components/highlightjs/styles/zenburn.css> <style> .reveal table td {\n            border-bottom: 0px !important;\n        }\n\n        .reveal section img {\n            background: none;\n            border: none;\n            box-shadow: none;\n        } </style> </head> <body> <div class=reveal> <div class=slides> <section data-markdown> <textarea data-markdown id=slidePreviewContent></textarea> </section> </div> </div> <script src=../../../../bower_components/revealjs/lib/js/head.min.js><\/script> <script src=../../../../bower_components/revealjs/js/reveal.js><\/script> <script> var path = \"../../../../bower_components/\";\n    var receiveMessage = function( event ) {\n        var data = event.data;\n\n        // Make sure we're dealing with JSON\n        if( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\n            data = JSON.parse(data);\n            var section = document.evaluate(\"//section\", document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n            section.innerHTML = data.args;\n            section.setAttribute(\"data-markdown-parsed\", \"false\");\n            Reveal.sync()\n        }\n    };\n    window.addEventListener(\"message\", receiveMessage, false);\n\n    var revealInit = function() {\n        Reveal.initialize({\n            history: true,\n            transition: 'none', // none/fade/slide/convex/concave/zoom\n            // Exposes the reveal.js API through window.postMessage\n            postMessage: true,\n\n            // More info https://github.com/hakimel/reveal.js#dependencies\n            dependencies: [\n                {src: path+'revealjs/plugin/markdown/marked.js'},\n                {src: path+'revealjs/plugin/markdown/markdown.js'},\n                {src: path+'revealjs/plugin/notes/notes.js', async: true}\n            ]\n        });\n    };\n\n    revealInit(); <\/script> </body> </html> "), e.put("scripts/app/entities/training/training-detail.html", ' <div> <h2><span>Training</span> {{training.id}}</h2> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> <th>Field</th> <th>Valor</th> </tr> </thead> <tbody> <tr> <td> <span>Nombre</span> </td> <td> <span class=form-control-static>{{training.name}}</span> </td> </tr> <tr> <td> <span>DescripciÃ³n</span> </td> <td> <span class=form-control-static>{{training.description}}</span> </td> </tr> <tr> <td> <span>AllRequirementsSelected</span> </td> <td> <span class=form-control-static>{{training.allRequirementsSelected}}</span> </td> </tr> <tr> <td> <span>Last_modified_date</span> </td> <td> <span class=form-control-static>{{training.last_modified_date}}</span> </td> </tr> <tr> <td> <span>author</span> </td> <td> {{training.author.login}} </td> </tr> <tr> <td> <span>last_modified_by</span> </td> <td> {{training.last_modified_by.login}} </td> </tr> <tr> <td> <span>optColumn</span> </td> <td> <span ng-repeat="optColumn in training.optColumns"> <a class=form-control-static ui-sref="optColumn.detail({id: {{optColumn.id}}})">{{optColumn.name}}</a>{{$last ? \'\' : \', \'}} <span> </span></span></td> </tr> <tr> <td> <spanColecciones/span> </td> <td> <span ng-repeat="collection in training.collections"> <a class=form-control-static ui-sref="collectionInstance.detail({id: {{collection.id}}})">{{collection.name}}</a>{{$last ? \'\' : \', \'}} <span> </span></span></td> </tr> <tr> <td> <span>projectType</span> </td> <td> <span ng-repeat="projectType in training.projectTypes"> <a class=form-control-static ui-sref="projectType.detail({id: {{projectType.id}}})">{{projectType.name}}</a>{{$last ? \'\' : \', \'}} <span> </span></span></td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class="btn btn-info"> <span class="glyphicon glyphicon-arrow-left"></span>&nbsp;<span> Back</span> </button> </div> '), e.put("scripts/app/entities/training/training-edit.html", '<jh-alert></jh-alert> <form name=editForm role=form novalidate ng-submit=save()> <h2 id=page-title class=page-header>Edit Training</h2> <div id=skeleton class="tab-pane fade in active"> <div class=container-fluid style="padding-top: 30px" ui-view=skeleton></div> </div> <div style="padding: 15px; text-align: right"> <button type=button class="btn btn-default" data-ng-click=cancel()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span></button> <button type=submit class="btn btn-primary" data-ng-disabled=editForm.$invalid> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar entrenamiento</span></button> </div> </form> '), e.put("scripts/app/entities/training/training-editSelection.html", '<jh-alert></jh-alert> <form name=editForm role=form novalidate ng-submit=save()> <h2 id=page-title class=page-header>Editar SelecciÃ³n de entrenamiento</h2> <h3>Requisitos de seguridad especÃ­ficos seleccionados</h3> <div class=container style="padding-top: 30px" ui-view=requirements></div> <h3>Columnas opcionales para incluir por requisito</h3> <div class=container-fluid style="padding-top: 30px" ui-view=optcolumns></div> <div style="padding: 15px; text-align: right"> <button type=button class="btn btn-default" data-ng-click=cancel()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span></button> <button type=submit class="btn btn-warning"> <span class="glyphicon glyphicon-repeat"></span>&nbsp;<span>Regenerate</span></button> </div> </form> '), e.put("scripts/app/entities/training/training-editTree.html", '<jh-alert></jh-alert> <form name=editForm role=form novalidate ng-submit=save()> <h2 id=page-title class=page-header>Edit Training Structure</h2> <div data-ng-hide=loadingProgressbar.hide> loading... <uib-progressbar class="progress-striped active" value=loadingProgressbar.barValue type=success> {{loadingProgressbar.barValue}}% </uib-progressbar> </div> <div class=container-fluid style="padding-top: 30px" ui-view=customize></div> <div style="padding: 15px; text-align: right"> <button type=button class="btn btn-default" data-ng-click=cancel()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span></button> <button type=submit class="btn btn-primary" data-ng-disabled=!treeReady> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Save Tree</span></button> </div> </form> '), e.put("scripts/app/entities/training/training-feedbackModal.html", '<div class=modal-header> <div class=form-group> <h3 class=modal-title>{{ feedback.title }}</h3> </div> </div> <div class=modal-body> <div> {{ feedback.message }} </div> </div> <div class=modal-footer> <button class="btn btn-default" data-ng-click=closeFeedbackModal(false)> &nbsp;<span>{{ feedback.showUpdateButton ? "NO" : "OK" }}</span> </button> <button data-ng-if=feedback.showUpdateButton class="btn btn-warning" data-ng-click=closeFeedbackModal(true)> &nbsp;<span>{{ feedback.showProgressIndicator ? "Updating" : "YES" }}</span> <img data-ng-if=feedback.showProgressIndicator src=assets/images/b094cc62.ellipsis1.gif height=18 width=18 /> </button> </div> '), e.put("scripts/app/entities/training/training-generate.html", '<form name=generateForm role=form novalidate ng-submit=save()> <h3 class=page-header data-ng-click=showStep(1);>Paso 1: Nombre y descripciÃ³n</h3> <div class=container-fluid data-ng-hide="activeStep != 1"> <div class=row ui-view=skeleton></div> <div class=row> <div class=form-group> <button type=button class="btn btn-primary" data-ng-click=showStep(2); data-ng-disabled=!Training.name> <span class="glyphicon glyphicon-chevron-right"></span>&nbsp;<spanSiguiente/span> </button> </div> </div> </div> <h3 class=page-header data-ng-click=showStep(2);>Paso 2: Seleccione los requisitos</h3> <div class=container-fluid data-ng-hide="activeStep != 2"> <div class=row ui-view=requirements></div> <div class=row style="padding-top: 15px"> <div class=form-group> <button type=button class="btn btn-primary" data-ng-click=showStep(3);> <span class="glyphicon glyphicon-chevron-right"></span>&nbsp;<spanSiguiente/span> </button> </div> </div> </div> <h3 class=page-header data-ng-click=showStep(3);>Paso 3: Elija contenidos por requisito</h3> <div class=container-fluid data-ng-hide="activeStep != 3"> <div class=row ui-view=optcolumns></div> <div class=row> <div class=form-group> <button type=button class="btn btn-primary" data-ng-click=showStep(4);> <span class="glyphicon glyphicon-chevron-right"></span>&nbsp;<spanSiguiente/span> </button> </div> </div> </div> <h3 class=page-header data-ng-click=showStep(4);>Paso 4: Generar</h3> <div class=container-fluid data-ng-hide="activeStep != 4"> <div class=row> <div class=well data-ng-if=!fetchNumberError> <strong>{{ requirementsSelected }}</strong> Security Requirements selected.<br/> <strong>{{ Training.optColumns.length || 0 }}</strong> OptionColumns per Requirement selected.<br/> <span class="glyphicon glyphicon-arrow-right"></span> The generator will produce <strong>{{ requirementsSelected * (1+Training.optColumns.length) }}</strong> slides with generated content plus custom slides. </div> <div class="alert alert-danger" data-ng-if=fetchNumberError> <span class="glyphicon glyphicon-exclamation-sign"></span> <div style="display: inline-block"> Sorry, there was an error while retrieving the number of selected requirements. </div> </div> </div> <div class=form-group> <button type=button class="btn btn-primary" data-ng-click=generate();> <span class="glyphicon glyphicon-cog"></span>&nbsp;<span>Generar</span></button> </div> <div> <b>Progress:</b> <uib-progressbar class="progress-striped active" value=progressbar.barValue type=success data-ng-hide=progressbar.hide>{{progressbar.barValue}}%</uib-progressbar> </div> </div> <div id=finishedBlock class=container-fluid style="visibility: hidden"> <h3 class=page-header><span class="glyphicon glyphicon-ok-circle"></span> Generation complete!</h3> <div class=row ui-view=customize></div> </div> <div style="padding: 15px; text-align: right"> <button type=button class="btn btn-default" data-ng-click=cancel()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span></button> <button type=submit class="btn btn-primary" data-ng-disabled="!treeGenerated || generateForm.$invalid"> <span class="glyphicon glyphicon-save"></span>&nbsp;<span>Guardar entrenamiento</span></button> </div> </form> '), e.put("scripts/app/entities/training/training-progressModal.html", '<div class=modal-header> <button type=button class=close data-ng-click=cancel() aria-hidden=true>Ã—</button> <div class=form-group> <h3 class=modal-title>{{ progressModalTitle }}</h3> </div> </div> <div class=modal-body> <div> <b>Progress:</b> <uib-progressbar class="progress-striped active" value=modalProgressbar.barValue type=success data-ng-hide=modalProgressbar.hide>{{modalProgressbar.barValue}}%</uib-progressbar> </div> </div> <div class=modal-footer> </div> '), e.put("scripts/app/entities/training/training-view.html", '<div class=slides> <section data-markdown data-ng-repeat="slide in slides"> <textarea data-markdown>\n            {{slide.content}}\n        </textarea> </section> </div> '), e.put("scripts/app/entities/training/trainings.html", '<div> <h2 class=page-header>Capacitaciones</h2> <jh-alert></jh-alert> <div class=container> <div class=row> <div class=col-md-4> <button class="btn btn-primary" ui-sref=training.new> <span class="glyphicon glyphicon-flash"></span> <span>Crear un nuevo Entrenamiento</span> </button> </div> <div class=col-md-5> <form> <button type=button class="btn btn-info pull-left" data-toggle=collapse data-target=#searchStringID>Buscar <span class="glyphicon glyphicon-search"></span> </button> <div id=searchStringID class=collapse> <div class=input-group> <input class="form-control col-md-5" placeholder="Cadena de bÃºsqueda" data-ng-model=searchString> </div> </div> </form> </div> </div> </div> <div class="modal fade" id=deleteTrainingConfirmation> <div class=modal-dialog> <div class=modal-content> <form name=deleteForm ng-submit=confirmDelete(training.id)> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=clear()>&times;</button> <h4 class=modal-title>Confirm delete operation</h4> </div> <div class=modal-body> <p>Are you sure you want to delete this Training?</p> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal ng-click=clear()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Cancelar</span> </button> <button type=submit ng-disabled=deleteForm.$invalid class="btn btn-danger"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span>Delete</span> </button> </div> </form> </div> </div> </div> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> <th>ID</th> <th>Nombre</th> <th>DescripciÃ³n</th> <th>Creado</th> <th>Ãšltima modificaciÃ³n/th> <th></th> </tr> </thead> <tbody> <tr ng-repeat="training in trainings | filter : searchString"> <td><a ui-sref=training.detail({id:training.id})>{{training.id}}</a></td> <td>{{training.name}}</td> <td>{{training.description}}</td> <td>{{training.createdDate | date : "mediumDate" }} by {{training.createdBy}}</td> <td>{{training.lastModifiedDate | date : "shortTime" }} by {{training.lastModifiedBy}}</td> <td> </td><td class=col-sm-5> <button type=button data-ng-click=startPresentation(training.id) class="btn btn-info btn-sm"> <span class="glyphicon glyphicon-film"></span>&nbsp;<span> Start</span> </button> <button type=submit ui-sref=training.edit.state({id:training.id}) class="btn btn-primary btn-sm"> <span class="glyphicon glyphicon-pencil"></span>&nbsp;<span> Edit Training</span> </button> <button type=submit ui-sref=training.editSelection.state({id:training.id}) class="btn btn-primary btn-sm"> <span class="glyphicon glyphicon-pencil"></span>&nbsp;<span> Edit Selection</span> </button> <button type=submit ui-sref=training.editTree.state({id:training.id}) class="btn btn-primary btn-sm"> <span class="glyphicon glyphicon-pencil"></span>&nbsp;<span> Edit Tree</span> </button> <button type=submit data-ng-click=checkUpdate(training.id) class="btn btn-warning btn-sm"> <span class="glyphicon glyphicon-refresh"></span>&nbsp;<span> Update</span> </button> <button type=submit data-ng-click=delete(training.id) class="btn btn-danger btn-sm"> <span class="glyphicon glyphicon-remove-circle"></span>&nbsp;<span> Delete</span> </button> </td> </tr> </tbody> </table> </div> </div>'), e.put("scripts/app/error/accessdenied.html", '<div ng-cloak> <div class=row> <div class=col-md-4> <span class="hipster img-responsive img-rounded"></span> </div> <div class=col-md-8> <h1>!Pagina de Error!</h1> <div class="alert alert-danger">You are not authorized to access the page. </div> </div> </div> </div> '), e.put("scripts/app/error/error.html", '<div ng-cloak> <div class=row> <div class=col-md-4> <span class="hipster img-responsive img-rounded"></span> </div> <div class=col-md-8> <h1>!Pagina de error!</h1> <div ng-show=errorMessage> <div class="alert alert-danger">{{errorMessage}} </div> </div> </div> </div> </div> '), e.put("scripts/app/febrowse/ferequirementSkeleton/ferequirementSkeleton-detail.html", ' <div> <h2 class=page-header><span>Requirement</span> {{requirementSkeleton.shortName}}</h2> <div class=table-responsive> <table class="table table-striped"> <thead> <tr> <th>Field</th> <th>Valor</th> </tr> </thead> <tbody> <tr> <td><strongNombre/strong></td> <td> {{requirementSkeleton.shortName}} </td> </tr> <tr> <td> <span><strong>DescripciÃ³n</strong></span> </td> <td> {{requirementSkeleton.description}} </td> </tr> <tr> <td> <span><strong>Requirement Category</strong></span> </td> <td> <p>{{requirementSkeleton.reqCategory.name}}</p> </td> </tr> <tr><td class="text-center titleSize" colspan=2><strong>Colecciones</strong></td></tr> <tr data-ng-repeat="category in collCategories"> <td><strong>{{category.name}}</strong></td> <td><span data-ng-repeat="collectionInstance in requirementSkeleton.collectionInstances | orderBy : [\'showOrder\'] | filter : {collectionCategory :{id : category.id}}">{{collectionInstance.name}}{{$last ? \'\' : \', \'}}</span></td> </tr> <tr><td class="text-center titleSize" colspan=2><strong>Etiquetas</strong></td></tr> <tr data-ng-repeat="category in tagCategories"> <td><strong>{{category.name}}</strong></td> <td><span data-ng-repeat="tagInstance in requirementSkeleton.tagInstances | orderBy : [\'showOrder\'] | filter : {tagCategory :{id : category.id}}">{{tagInstance.name}}{{$last ? \'\' : \', \'}}</span></td> </tr> <tr><td class="text-center titleSize" colspan=2><strong>Tipos de ImplementaciÃ³n</strong></td></tr> <tr colspan=2> <td></td> <td><span data-ng-repeat="projectType in requirementSkeleton.projectTypes">{{projectType.name}}{{$last ? \'\' : \', \'}}</span></td> </tr> <tr data-ng-if="optColumnContents.length > 0"><td class="text-center titleSize" colspan=2><strong>Columnas de Opciones</strong></td></tr> <tr data-ng-repeat="content in optColumnContents"> <td><strong>{{content.optColumn.name}}</strong></td> <td data-ng-bind-html="content.content | trusted"></td> </tr> <tr data-ng-if="altInstances.length > 0"><td class="text-center titleSize" colspan=2><strong>Instancias Alternativas</strong></td></tr> <tr data-ng-repeat="instance in altInstances"> <td><strong>{{instance.alternativeSet.name}}</strong></td> <td data-ng-bind-html="instance.content | trusted"></td> </tr> </tbody> </table> </div> <button type=submit onclick=window.history.back() class="btn btn-info"> <span class="glyphicon glyphicon-arrow-left"></span>&nbsp;<span> Back</span> </button> </div> '), e.put("scripts/app/febrowse/ferequirementSkeleton/ferequirementSkeletons.html", '<div> <br/> <h2 class=page-header>Navegador de requisitos</h2> <div class="container col-md-10"> <input class=form-control data-ng-model=searchQuery id=fesearchQuery placeholder="Buscar un requisito" aria-describedby=sizing-addon1> </div> <br/> <br/> <br/> <p><strong>{{requirementSkeletons.length}}</strong> Requisitos encontrados<span data-ng-if="requirementSkeletons.length > (requirementSkeletons | filterByTagForReqSkeletons : selectedTags | filterByCollsForReqSkeletons : selectedColls| filterByTypesForReqSkeletons : selectedTypes \n                | orderBy : [\'reqCategory.showOrder\',\'showOrder\'] | filter: searchQuery).length">, <span style=color:red><strong id=requirementInRed>{{(requirementSkeletons | filterByTagForReqSkeletons : selectedTags | filterByCollsForReqSkeletons : selectedColls| filterByTypesForReqSkeletons : selectedTypes | orderBy : [\'reqCategory.showOrder\',\'showOrder\'] | filter: searchQuery).length}}</strong> Requirements shown. </span> </span> </p> <div class=table-responsive data-ng-show=progressbar.showContent> <table class="table table-striped" infinite-scroll=loadMore() infinite-scroll-distance=1> <thead> <tr> <thNombre/th> <th>DescripciÃ³n</th> <th> <div class=btn-group id=multiselect-parent> <button type=button class="btn btn-default dropdown-toggle" data-toggle=dropdown data-ng-click="toggleDropdown(\'tag\', $event)"> {{dropdowns.tag.buttonText}} <span class=caret> </span></button> <ul class=dropdown-menu role=menu data-ng-style="{display: dropdowns.tag.open ? \'block\': \'none\', height: auto}"> <li data-ng-repeat="category in tagCategories" class=dropdown-submenu id=list{{category.id}}> <a href=# tabindex=-1 role=presentation>{{category.name}}</a> <ul class=dropdown-menu aria-labelledby=list{{category.id}}> <li data-ng-repeat="instance in category.tagInstances | orderBy : \'showOrder\'"> <a href=# data-ng-click="selectTagInstance(instance, \'selectedTags\', \'tag\')" tabindex=-1> <span data-ng-class="{\'glyphicon glyphicon-ok\':isTagSelected(instance, \'selectedTags\')}"></span> {{instance.name}}</a> </li> </ul> </li> </ul> </div> </th> <th> <div class=btn-group id=multiselect-parent> <button type=button class="btn btn-default dropdown-toggle" data-toggle=dropdown data-ng-click="toggleDropdown(\'coll\', $event)"> {{dropdowns.coll.buttonText}} <span class=caret></span></button> <ul class=dropdown-menu role=menu data-ng-style="{display: dropdowns.coll.open ? \'block\': \'none\', height: auto}"> <li data-ng-repeat="category in collCategories" class=dropdown-submenu id=list{{category.id}}> <a href=# tabindex=-1 role=presentation>{{category.name}}</a> <ul class=dropdown-menu aria-labelledby=list{{category.id}}> <li data-ng-repeat="instance in category.collectionInstances"> <a href=# data-ng-click="selectTagInstance(instance, \'selectedColls\', \'coll\')" tabindex=-1> <span data-ng-class="{\'glyphicon glyphicon-ok\':isTagSelected(instance, \'selectedColls\')}"></span> {{instance.name}}</a> </li> </ul> </li> </ul> </div> </th> <th><span ng-dropdown-multiselect="" options=projectTypes selected-model=selectedTypes translation-texts=typeLabelText extra-settings=selectedCategorySettings> </span> </th> <th></th> </tr> </thead> <tbody> <tr class=animate-repeat data-ng-repeat="requirementSkeleton in requirementSkeletons | filterByTagForReqSkeletons : selectedTags | filterByCollsForReqSkeletons : selectedColls| filterByTypesForReqSkeletons : selectedTypes| orderBy : [\'reqCategory.showOrder\',\'showOrder\'] | filter: searchQuery | limitTo:numberToDisplay track by requirementSkeleton.id"> <td> <strong>{{requirementSkeleton.shortName}}</strong> <span id=feedbackIcon data-ng-if=!updatedReqs uib-tooltip="Proporcione comentarios para este requisito." style=cursor:pointer data-ng-click=openFeedback(requirementSkeleton) tooltip-append-to-body> <img src=assets/images/227cec23.feedback.png width=16 height=16> </span> </td> <td>{{requirementSkeleton.description}}</td> \x3c!-- <td class="text-center">{{requirementSkeleton.showOrder}}</td>--\x3e <td> <span data-ng-repeat="category in tagCategories"> <span data-ng-repeat="tagInstance in requirementSkeleton.tagInstances | filter : { tagCategory: {id :category.id}}"> <strong data-ng-if=$first>{{category.name}}:</strong> {{tagInstance.name}}{{$last ? \'\' : \', \'}} <br data-ng-if=$last /> </span> </span> </td> <td> <span data-ng-repeat="category in collCategories"> <span data-ng-repeat="collectionInstance in requirementSkeleton.collectionInstances | filter : {collectionCategory : {id : category.id}}"> <strong data-ng-if=$first>{{category.name}}:</strong> {{collectionInstance.name}}{{$last ? \'\' : \', \'}} <br data-ng-if=$last /> </span> </span> </td> <td> <span data-ng-repeat="projectType in requirementSkeleton.projectTypes"> {{projectType.name}}{{$last ? \'\' : \', \'}} </span> </td> <td> <button type=submit ui-sref=ferequirementSkeleton.detail({id:requirementSkeleton.id}) class="btn btn-info btn-sm"> <span class="glyphicon glyphicon-eye-open"></span>&nbsp;<span> View</span> </button> </td> </tr> </tbody> </table> </div> <div data-ng-hide=progrebar.hide> <uib-progressbar class="progress-striped active" value=progressbar.barValue type=success data-ng-hide=progressbar.hide>{{progressbar.barValue}}%</uib-progressbar> </div> </div> '), e.put("scripts/app/importAssistant/entityChooser.html", '<div> <div class=modal-header> <button type=button class=close data-dismiss=modal aria-hidden=true ng-click=navigation.closeButton.handleClick()> &times; </button> <h4 class=modal-title>Select an existing entity</h4> </div> <div class=modal-body> <table class="table table-striped"> <tr> <th ng-repeat="name in attributeNames">{{ name }}</th> \x3c!-- The select button --\x3e <th></th> </tr> <tr ng-repeat="entity in existingEntities"> <td ng-repeat="name in attributeNames">{{ getAttributeValue(entity, name) }}</td> <td> <button class="btn btn-primary" ng-click=navigation.selectButton.handleClick(entity) type=button> <span class="glyphicon glyphicon-ok"></span> Select </button> </td> </tr> </table> </div> <div class=modal-footer> <button type=button class="btn btn-default" data-dismiss=modal ng-click=navigation.closeButton.handleClick()> <span class="glyphicon glyphicon-ban-circle"></span>&nbsp;<span>Close</span> </button> </div> </div> '), e.put("scripts/app/importAssistant/step1.html", '<div> <div class=page-header> <h2>Asistente de importaciÃ³n: selecciÃ³n de datos</h2> </div> <p> Bienvenido al asistente de importaciÃ³n de SecurityRAT. Este asistente lo guiarÃ¡ a travÃ©s de los pasos necesarios para importar datos de fuentes externas.</p> <div class=ia-file-box-wrapper> <div class=ia-file-box> <div class=ia-file-box-content ng-on-dragover=fileBox.handleDragover($event) ng-on-drop=fileBox.handleDrop($event) ng-click=fileBox.handleClick()> \x3c!-- If no file has been selected yet. --\x3e <div ng-if=!fileBox.selectedFile> <h1 class=ia-file-box-title> Arrastre y suelte un archivo de origen en esta Ã¡rea o haga clic para abrir el cuadro de diÃ¡logo del selector de archivos. </h1> <span class=ia-file-box-subtitle> Formatos Soportados: Microsoft Excel Worksheets, CSV </span> </div> \x3c!-- If a file has been selected. --\x3e <div ng-if=!!fileBox.selectedFile> <h1 class=ia-file-box-title> {{ fileBox.selectedFile.name }} </h1> <div class="form-group ia-file-box-worksheet"> <label>Hoja de cÃ¡lculo</label> <select class=form-control ng-model=fileBox.selectedTableIndex> <option value="{{ $index }}" ng-repeat="table in fileBox.availableTables"> {{ table.name }} </option> </select> </div> <span class=ia-file-box-subtitle> <button class="btn btn-danger" ng-click=fileBox.resetButton.handleClick($event)> Restablecer </button> </span> </div> </div> </div> </div> <div class=ia-navigation> <button class="btn btn-primary" ng-disabled=!navigation.continueButton.enabled ng-click=navigation.continueButton.handleClick()> <span class="glyphicon glyphicon-ok"></span> Continuar </button> </div> </div> '), e.put("scripts/app/importAssistant/step2.html", '<div> <div class=page-header> <h2>Asistente de importaciÃ³n: Creador de mapas</h2> </div> <p> Se analizÃ³ el archivo de origen seleccionado y el asistente intentÃ³ derivar algunos ajustes automÃ¡ticamente. AjÃºstelos segÃºn sea necesario y finalice la asignaciÃ³n entre las celdas de la tabla y las entidades SecurityRAT.</p> <div class=ia-section> <h3>ConfiguraciÃ³n general</h3> <p> Especifique si su tabla proporciona sus datos por filas o por columnas. AdemÃ¡s, es posible que desee ignorar entradas especÃ­ficas (por ejemplo, el tÃ­tulo). </p> <form style="margin-top: 30px"> <div class=form-group> <label>Tipo de entrada de tabla</label> <select class=form-control ng-model=generalSettings.selectedEntryType> <option value=column-wise>Column-wise</option> <option value=row-wise>Row-wise</option> </select> </div> <div class=form-group> <label> Ignored <span ng-if="generalSettings.selectedEntryType === \'column-wise\'">columns</span> <span ng-if="generalSettings.selectedEntryType === \'row-wise\'">rows</span> </label> <input class=form-control placeholder="e.g. 1, 7, 9 (row-wise) or A, G, I (column-wise)" ng-model=generalSettings.ignoredTableEntries ng-model-options="{ updateOn: \'change\' }"> </div> </form> </div> <div class=ia-section> <h3>Mapping</h3> <p> Cree la asignaciÃ³n entre las celdas de una entrada de la tabla y las entidades SecurityRAT correspondientes. Tenga en cuenta que las relaciones entre las diferentes entidades solo son posibles dentro de la misma entrada de la tabla. </p> <div class=ia-push-down> <table id=grid-view class="table table-striped table-bordered ia-table"> <thead> <tr> \x3c!-- The first column is the column of the row labels --\x3e <th style="width: 30px"></th> \x3c!-- Adding the column labels --\x3e <th ng-repeat="label in gridView.columnHeaders"> {{ label }} </th> </tr> </thead> <tbody> <tr ng-repeat="label in gridView.rowHeaders" ng-init="rowIndex = $index"> \x3c!-- Row label --\x3e <th>{{ label }}</th> \x3c!-- Cell data --\x3e <td ng-repeat="x in gridView.columnHeaders" ng-init="columnIndex = $index"> {{ gridView.getCellValue(rowIndex, columnIndex) }} </td> </tr> </tbody> </table> </div> <div class="ia-push-down ia-mapping-wrapper"> \x3c!-- Mapping Box --\x3e <div class="panel panel-primary ia-mapping-editor"> <div class="panel-heading ia-bold"> New entity mapping </div> <div class=panel-body> <form> \x3c!-- Type selection --\x3e <div class=form-group> <label> Entity Type <span class="glyphicon glyphicon-info-sign" title="The target SecurityRAT entity type." data-toggle=tooltip data-placement=right></span> </label> <select class=form-control ng-model=mappingBox.editor.mapping.typeIdentifier> <option value="{{ type.identifier }}" ng-repeat="type in mappingBox.editor.availableTypes"> {{ type.displayName }} </option> </select> </div> \x3c!-- Replace Rule --\x3e <div class=form-group> <label> Replace Rule <span class="glyphicon glyphicon-info-sign" title="Whether an entity with existing keys shall replace the existing entity, the new one shall be ignored or duplicates are allowed." data-toggle=tooltip data-placement=right></span> </label> <select class=form-control ng-model=mappingBox.editor.mapping.replaceRule> <option value="{{ rule }}" ng-repeat="rule in mappingBox.editor.replaceRules"> {{ rule }} </option> </select> </div> \x3c!-- Attribute mappings --\x3e <hr ng-if="mappingBox.editor.mapping.attributes.length > 0"> <table class="table ia-table" ng-if="mappingBox.editor.mapping.attributes.length > 0"> <thead> <tr> <th></th> <th>Attribute</th> <th>Mapping</th> <th>Target/Value</th> <th>Key</th> </tr> </thead> <tbody> <tr ng-repeat="attrMapping in mappingBox.editor.mapping.attributes"> \x3c!-- Remove attribute mapping --\x3e <td style="vertical-align: middle"> <a href=# ng-click=mappingBox.editor.attributes.removeButton.handleClick(attrMapping)> <span class="glyphicon glyphicon-trash"></span> </a> </td> \x3c!-- Attribute mapping name --\x3e <td> <select class=form-control ng-model=attrMapping.attributeIdentifier> <option value="{{ attr.identifier }}" ng-repeat="attr in mappingBox.editor.selectedEntityType.attributes"> {{ attr.displayName }} </option> </select> </td> \x3c!-- Attribute mapping types --\x3e <td> <select class=form-control ng-model=attrMapping.type> <option value=TableEntry ng-if=!mappingBox.editor.attributes.getType(attrMapping).type.reference> Entry </option> <option value=ExistingEntity ng-if=mappingBox.editor.attributes.getType(attrMapping).type.reference> Existing Entity </option> <option value=JavaScript ng-if=!mappingBox.editor.attributes.getType(attrMapping).type.reference> JavaScript </option> <option value=MappedEntity ng-if=mappingBox.editor.attributes.getType(attrMapping).type.reference> Mapped Entity </option> <option value=Value ng-if=!mappingBox.editor.attributes.getType(attrMapping).type.reference> Value </option> </select> </td> \x3c!-- Attribute mapping value --\x3e <td> \x3c!-- ExistingEntity --\x3e <div ng-if="attrMapping.type === \'ExistingEntity\'" class=input-group> <input class=form-control value="{{ attrMapping.existingEntityIdentifier }}" disabled> <span class=input-group-btn> <button class="btn btn-primary" type=button ng-click=mappingBox.editor.attributes.chooseEntityButton.handleClick(attrMapping)> Select... </button> </span> </div> \x3c!-- JavaScript --\x3e <label ng-if="attrMapping.type === \'JavaScript\'" style="white-space: nowrap; margin-right: 8px"> <input class=form-control ng-model=attrMapping.jsExpr style="display: inline-block; font-weight: normal"> <span class="glyphicon glyphicon-info-sign" title="Specify a JavaScript expression that calculates the attribute\'s value. (e is an array of the current entry\'s columns/rows, i is the zero-based index of the entry)" data-toggle=tooltip data-placement=right></span> </label> \x3c!-- MappedEntity --\x3e <select class=form-control ng-if="attrMapping.type === \'MappedEntity\'" ng-model=attrMapping.entityMappingIdentifier> <option value="{{ entityMapping.identifier }}" ng-repeat="entityMapping in mappingBox.editor.attributes.getEntityMappings(mappingBox.editor.attributes.getType(attrMapping).type.referenceIdentifier)"> {{ mappingBox.getEntityMappingTitle(entityMapping) }} </option> </select> \x3c!-- Table Entry --\x3e <select class=form-control ng-if="attrMapping.type === \'TableEntry\'" ng-model=attrMapping.tableEntryIndex> <option value="{{ $index }}" ng-repeat="value in mappingBox.editor.attributes.tableEntries"> {{ value }} </option> </select> \x3c!-- Value --\x3e <input class=form-control ng-if="attrMapping.type === \'Value\'" ng-model=attrMapping.value> </td> \x3c!-- Key Component --\x3e <td> <input type=checkbox class=form-control ng-model=attrMapping.keyComponent style="margin: auto"> </td> </tr> </tbody> </table> <hr> <a class=ia-add-attr-mapping href=# ng-click=mappingBox.editor.attributes.addButton.handleClick()> Add attribute mapping </a> </form> </div> <div class="panel-footer ia-navigation"> <button class="btn btn-primary" ng-disabled=!mappingBox.editor.addButton.enabled ng-click=mappingBox.editor.addButton.handleClick()> <span class="glyphicon glyphicon-plus"></span> Add </button> </div> </div> \x3c!-- Created mappings --\x3e <div class="panel panel-default ia-mapping-box" ng-repeat="entityMapping in mappingBox.mappings"> <div class="panel-heading ia-bold"> {{ mappingBox.getEntityMappingTitle(entityMapping) }} </div> <div class=panel-body> <table class="table table-striped ia-table"> <thead> <tr> <th>Attribute</th> <th>Mapping</th> <th>Target/Value</th> </tr> </thead> <tbody> <tr ng-repeat="attrMapping in entityMapping.attributes"> <td> {{ mappingBox.getEntityTypeAttribute(entityMapping.typeIdentifier, attrMapping.attributeIdentifier).displayName }} <span ng-if=attrMapping.keyComponent class="glyphicon glyphicon-lock" title="Key component" data-toggle=tooltip data-placement=right></span> </td> <td> <span ng-if="attrMapping.type === \'ExistingEntity\'">Existing Entity</span> <span ng-if="attrMapping.type === \'JavaScript\'">JavaScript</span> <span ng-if="attrMapping.type === \'MappedEntity\'">Mapped Entity</span> <span ng-if="attrMapping.type === \'TableEntry\'">Entry</span> <span ng-if="attrMapping.type === \'Value\'">Valor</span> </td> <td> <span ng-if="attrMapping.type === \'ExistingEntity\'"> {{ attrMapping.existingEntityIdentifier }} </span> <span ng-if="attrMapping.type === \'JavaScript\'"> {{ attrMapping.jsExpr }} </span> <span ng-if="attrMapping.type === \'MappedEntity\'"> {{ mappingBox.getEntityMappingTitle(mappingBox.getEntityMapping(attrMapping.entityMappingIdentifier)) }} </span> <span ng-if="attrMapping.type === \'TableEntry\'"> {{ mappingBox.getTableEntryName(attrMapping.tableEntryIndex) }} </span> <span ng-if="attrMapping.type === \'Value\'"> {{ attrMapping.value }} </span> </td> </tr> </tbody> </table> </div> <div class="panel-footer ia-navigation"> <button class="btn btn-danger" ng-click=mappingBox.removeButton.handleClick(entityMapping)> <span class="glyphicon glyphicon-trash"></span> Remove </button> </div> </div> </div> </div> <div class=ia-navigation> <button class="btn btn-danger" ng-click=navigation.cancelButton.handleClick()> <span class="glyphicon glyphicon-ban-circle"></span> Cancel </button> <button class="btn btn-primary" ng-click=navigation.continueButton.handleClick()> <span class="glyphicon glyphicon-ok"></span> Continue </button> </div> </div> '), e.put("scripts/app/importAssistant/step3.html", '<div> <div class=page-header> <h2>Asistente de importaciÃ³n: descripciÃ³n general</h2> </div> <p> La asignaciÃ³n especificada se aplicÃ³ en todas las entradas de la tabla de origen. Las entidades resultantes se enumeran a continuaciÃ³n y se pueden ajustar antes de confirmar la importaciÃ³n. </p> <div class=ia-section ng-repeat="v in tableViews"> <h3>{{ v.typeIdentifier }} ({{ v.entities.length }})</h3> <table class="table table-striped ia-table"> <thead> <tr> <th>Instance Identifier</th> <th ng-repeat="a in v.attributes">{{ a }}</th> </tr> </thead> <tbody> <tr ng-repeat="e in v.entities"> <td>{{ e.identifier }}</td> <td ng-repeat="a in v.attributes"> {{ getAttribute(e, a).value }} </td> </tr> </tbody> </table> </div> <div class=ia-navigation> <button class="btn btn-danger" ng-click=navigation.cancelButton.handleClick()> <span class="glyphicon glyphicon-ban-circle"></span> Cancel </button> <button class="btn btn-primary" ng-click=navigation.applyButton.handleClick()> <span class="glyphicon glyphicon-ok"></span> Apply changes </button> </div> </div> '), e.put("scripts/app/main/main.html", '<div ng-cloak> <div class=row> <div class=col-md-4> \x3c!-- <span class="hipster img-responsive img-rounded"></span> --\x3e </div> <div class=col-md-4> <div class="alert alert-success"> <h1 class=text-center>SecurityRAT!</h1> <p class="lead text-center">Logged out successful</p> </div> <div ng-switch=isAuthenticated()> <div class="alert alert-warning" ng-switch-when=false> Â¿TodavÃ­a no tienes una cuenta? <a ui-sref=register>Registrar una nueva cuenta</a> </div> </div> \x3c!-- <p>\n                If you have any question on SecurityRAT:\n            </p>\n\n            <ul>\n                <li><a href="http://jhipster.github.io/" target="_blank">JHipster homepage</a></li>\n                <li><a href="http://stackoverflow.com/tags/jhipster/info" target="_blank">JHipster on Stack Overflow</a></li>\n                <li><a href="https://github.com/jhipster/generator-jhipster/issues?state=open" target="_blank">JHipster bug tracker</a></li>\n                <li><a href="https://gitter.im/jhipster/generator-jhipster" target="_blank">JHipster public chat room</a></li>\n                <li><a href="https://twitter.com/java_hipster" target="_blank" >contact @java_hipster on Twitter</a></li>\n            </ul> --\x3e  \x3c!-- playground --\x3e \x3c!--             <script>\nvar invocation = new XMLHttpRequest();\nvar url = \'https://example-jira/rest/api/latest/issue/DUMQ-154\';\n\nfunction callOtherDomain() {\n  if(invocation) {\n    invocation.open(\'GET\', url, true);\n    invocation.withCredentials = true;\n    //invocation.onreadystatechange = handler;\n    invocation.send();\n  }\n}\ncallOtherDomain();\n<\/script>    --\x3e </div> </div> </div> '), e.put("scripts/components/form/pager.html", "<nav> <ul class=sdlctoolApp-pager> <li ng-show=\"links['first']\" ng-click=\"loadPage(links['first'])\"><a href=#>&lt;&lt;</a></li> <li ng-show=\"links['prev']\" ng-click=\"loadPage(links['prev'])\"><a href=#>&lt;</a></li> <li ng-show=\"links['next']\" ng-click=\"loadPage(links['next'])\"><a href=#>&gt;</a></li> <li ng-show=\"links['last']\" ng-click=\"loadPage(links['last'])\"><a href=#>&gt;&gt;</a></li> </ul> </nav> "), e.put("scripts/components/form/pagination.html", '<nav> <ul class=sdlctoolApp-pagination> <li ng-show="links[\'first\']" ng-click="loadPage(links[\'first\'])"><a>&lt;&lt;</a></li> <li ng-show="links[\'prev\']" ng-click="loadPage(links[\'prev\'])"><a>&lt;</a></li> <li ng-show="page > 2" ng-click="loadPage(page - 2)"><a>{{page - 2}}</a></li> <li ng-show="page > 1" ng-click="loadPage(page - 1)"><a>{{page - 1}}</a></li> <li class=active><a>{{page}}</a></li> <li ng-show="page < links[\'last\']" ng-click="loadPage(page + 1)"><a>{{page + 1}}</a></li> <li ng-show="page < links[\'last\'] - 1" ng-click="loadPage(page + 2)"><a>{{page + 2}}</a></li> <li ng-show="links[\'next\']" ng-click="loadPage(links[\'next\'])"><a>&gt;</a></li> <li ng-show="links[\'last\']" ng-click="loadPage(links[\'last\'])"><a>&gt;&gt;</a></li> </ul> </nav> '), e.put("scripts/components/navbar/navbar.html", '<nav class="navbar navbar-inverse" role=navigation style="background-color: #002e4d;height:auto">\x3c!-- #205081 --\x3e <div class=container> <div class=navbar-header> <button type=button class=navbar-toggle data-toggle=collapse data-target=#navbar-collapse> <span class=sr-only>Toggle navigation</span> <span class=icon-bar></span> <span class=icon-bar></span> <span class=icon-bar></span> </button> <a class=navbar-brand href=/ ><span><img alt="" height=30 width=30 src=/assets/static/favicon.png /> SecurityRAT</span><span class=navbar-version>v{{VERSION}}</span></a> </div> \x3c!-- <span style="background-color:#002e4d;"><img alt="" height="30" src="/assets/images/securityratLogo.png"/></span> --\x3e <div class="collapse navbar-collapse" id=navbar-collapse data-ng-switch=isAuthenticated()> <ul class="nav navbar-nav nav-pills navbar-right"> <li ui-sref-active=active data-ng-switch-when=true> \x3c!-- using href="/" instade of ui-sref="editor" to catch $locationChangeSuccess events has-role="ROLE_ADMIN"--\x3e \x3c!-- <a ui-sref="editor"> --\x3e <a href=/ > <span class="glyphicon glyphicon-list-alt"></span> <span>Editor</span> </a> </li> <li ui-sref-active="{active: $state.includes(\'importAssistant\')}" data-ng-switch-when=true has-role=ROLE_ADMIN data-ng-if=showAssistant> <a ui-sref=importAssistantStep1 href=/import/step1> <span class="glyphicon glyphicon-import"></span> <span>Asistente de importaciÃ³n</span> </a> </li> <li ui-sref-active="{active: $state.includes(\'entity\')}" data-ng-switch-when=true has-any-role="ROLE_TRAINER, ROLE_ADMIN" class="dropdown pointer"> <a class=dropdown-toggle data-toggle=dropdown href=""> <span> <span class="glyphicon glyphicon-education"></span> <span class=hidden-tablet> Capacitaciones </span> <b class=caret></b> </span> </a> <ul class=dropdown-menu> <li><strong>Manage</strong></li> <li ui-sref-active=active><a ui-sref=training><span class="glyphicon glyphicon-asterisk"></span> &#xA0;<span>Capacitaciones</span></a></li> <li ui-sref-active=active><a ui-sref=slideTemplate><span class="glyphicon glyphicon-asterisk"></span> &#xA0;<span>Plantillas de diapositivas</span></a></li> </ul> </li> <li ui-sref-active="{active: $state.includes(\'febrowse\')}" data-ng-switch-when=true class="dropdown pointer"> <a class=dropdown-toggle data-toggle=dropdown href=""> <span> <span class="glyphicon glyphicon-level-up"></span> <span class=hidden-tablet> Navegar </span> <b class=caret></b> </span> </a> <ul class=dropdown-menu> <li ui-sref-active=active><a ui-sref=ferequirementSkeleton><span class="glyphicon glyphicon-asterisk"></span>&#xA0;<span>Requerimientos</span></a></li> </ul> </li> <li ui-sref-active="{active: $state.includes(\'entity\')}" data-ng-switch-when=true has-any-role="ROLE_USER, ROLE_ADMIN" class="dropdown pointer"> <a class=dropdown-toggle data-toggle=dropdown href=""> <span> <span class="glyphicon glyphicon-th-list"></span> <span class=hidden-tablet> Entidades</span> <b class=caret></b> </span> </a> <ul class=dropdown-menu> <li><strong>Colecciones</strong></li> <li ui-sref-active=active><a ui-sref=collectionCategory><span class="glyphicon glyphicon-asterisk"></span> &#xA0;<span>Coleccion de Categorias</span></a></li> <li ui-sref-active=active><a ui-sref=collectionInstance><span class="glyphicon glyphicon-asterisk"></span> &#xA0;<span>Coleccion de Instancias</span></a></li> <li><strong>Etiquetas</strong></li> <li ui-sref-active=active><a ui-sref=tagCategory><span class="glyphicon glyphicon-asterisk"></span> &#xA0;<span>Etiquetas de CategorÃ­as</span></a></li> <li ui-sref-active=active><a ui-sref=tagInstance><span class="glyphicon glyphicon-asterisk"></span> &#xA0;<span>Etiqueta de Instancias</span></a></li> <li><strong>Requerimientos</strong></li> <li ui-sref-active=active><a ui-sref=reqCategory><span class="glyphicon glyphicon-asterisk"></span> &#xA0;<span>CategorÃ­as de Requisitos</span></a></li> <li ui-sref-active=active><a ui-sref=requirementSkeleton><span class="glyphicon glyphicon-asterisk"></span> &#xA0;<span>Esqueletos de Requisitos</span></a></li> <li><strong>Columnas Opcionales</strong></li> <li ui-sref-active=active><a ui-sref=optColumnType><span class="glyphicon glyphicon-asterisk"></span> &#xA0;<span>Columna Opcional Types</span></a></li> <li ui-sref-active=active><a ui-sref=optColumn><span class="glyphicon glyphicon-asterisk"></span> &#xA0;<span>Columnas Opcionales</span></a></li> <li ui-sref-active=active><a ui-sref=optColumnContent><span class="glyphicon glyphicon-asterisk"></span> &#xA0;<span>Contenido de Columna Opcional</span></a></li> <li><strong>Columnas de Estado</strong></li> <li ui-sref-active=active><a ui-sref=statusColumn><span class="glyphicon glyphicon-asterisk"></span> &#xA0;<span>Columnas de Estado</span></a></li> <li ui-sref-active=active><a ui-sref=statusColumnValue><span class="glyphicon glyphicon-asterisk"></span> &#xA0;<span>Valores de las Columnas de Estado</span></a></li> <li><strong>Alternativas</strong></li> <li ui-sref-active=active><a ui-sref=alternativeSet><span class="glyphicon glyphicon-asterisk"></span> &#xA0;<span>Conjuntos Alternativos</span></a></li> <li ui-sref-active=active><a ui-sref=alternativeInstance><span class="glyphicon glyphicon-asterisk"></span> &#xA0;<span>Instancias Alternativas</span></a></li> <li><strong>Tipos de ImplementaciÃ³n</strong></li> <li ui-sref-active=active><a ui-sref=projectType><span class="glyphicon glyphicon-asterisk"></span> &#xA0;<span>Tipos de ImplementaciÃ³n</span></a></li> \x3c!-- JHipster will add entities to the menu here --\x3e </ul> </li> <li data-ng-class="{active: $state.includes(\'admin\')}" data-ng-switch-when=true has-role=ROLE_ADMIN class="dropdown pointer"> <a class=dropdown-toggle data-toggle=dropdown href=""> <span> <span class="glyphicon glyphicon-tower"></span> <span class=hidden-tablet>AdministraciÃ³n</span> <b class=caret></b> </span> </a> <ul class=dropdown-menu> <li ui-sref-active=active><a ui-sref=configConstant><span class="glyphicon glyphicon-blackboard"></span> &#xA0;<span>Constantes</span></a></li> <li ui-sref-active=active><a ui-sref=userManagement><span class="glyphicon glyphicon-user"></span> &#xA0;<span>GestiÃ³n de usuarios</span></a></li> <li ui-sref-active=active><a ui-sref=metrics><span class="glyphicon glyphicon-dashboard"></span> &#xA0;<span>Metricas</span></a></li> <li ui-sref-active=active><a ui-sref=health><span class="glyphicon glyphicon-heart"></span> &#xA0;<span>Health</span></a></li> <li ui-sref-active=active><a ui-sref=configuration><span class="glyphicon glyphicon-list-alt"></span> &#xA0;<span>ConfiguraciÃ³n</span></a></li> <li ui-sref-active=active><a ui-sref=audits><span class="glyphicon glyphicon-bell"></span> &#xA0;<span>AuditorÃ­a</span></a></li> <li ui-sref-active=active><a ui-sref=logs><span class="glyphicon glyphicon-tasks"></span> &#xA0;<span>Logs</span></a></li> <li ng-hide=inProduction ui-sref-active=active><a ui-sref=docs><span class="glyphicon glyphicon-book"></span> &#xA0;<span>API</span></a></li> </ul> </li> <li data-ng-class="{active: $state.includes(\'account\')}" class="dropdown pointer"> <a class=dropdown-toggle data-toggle=dropdown href=""> <span> <span class="glyphicon glyphicon-user"></span> <span class=hidden-tablet> Cuenta </span> <b class=caret></b> </span> </a> <ul class=dropdown-menu> <li ui-sref-active=active data-ng-switch-when=true data-ng-class="{hidden: AUTHENTICATIONTYPE}"><a ui-sref=settings><span class="glyphicon glyphicon-cog"></span> &#xA0;<span>ConfiguraciÃ³n</span></a></li> <li ui-sref-active=active data-ng-switch-when=true data-ng-class="{hidden: AUTHENTICATIONTYPE}"><a ui-sref=password><span class="glyphicon glyphicon-lock"></span> &#xA0;<span>ContraseÃ±a</span></a></li> <li ui-sref-active=active data-ng-switch-when=true data-ng-class="{hidden: AUTHENTICATIONTYPE}"><a ui-sref=sessions><span class="glyphicon glyphicon-cloud"></span> &#xA0;<span>Sesiones</span></a></li> <li ui-sref-active=active data-ng-switch-when=true><a ui-sref=logout><span class="glyphicon glyphicon-log-out"></span> &#xA0;<span>Desconectarse</span></a></li> <li ui-sref-active=active data-ng-switch-when=false data-ng-class="{hidden: AUTHENTICATIONTYPE}"><a ui-sref=login><span class="glyphicon glyphicon-log-in"></span> &#xA0;<span>Iniciar SesiÃ³n</span></a></li> <li ui-sref-active=active data-ng-switch-when=false data-ng-class="{hidden: (!REGISTRATIONTYPE && !AUTHENTICATIONTYPE)}"> <a ui-sref=register id=register><span class="glyphicon glyphicon-plus-sign"></span> &#xA0;<span>Registrar</span></a></li> </ul> </li> </ul> </div> </div> </nav> ')
}]);